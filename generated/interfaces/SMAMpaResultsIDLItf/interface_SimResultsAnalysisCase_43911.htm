<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaResultsIDLItf SimResultsAnalysisCase (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaResultsIDLItf.htm" href="../SMAMpaResultsIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaResultsIDLItf";	}
		function getCurrentObjectName() { 
 	return "SimResultsAnalysisCase"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SimResultsAnalysisCase<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SimResultsAnalysisCase_43911','SimResultsAnalysisCase','0');</script>
<b><i> Represents the results analysis case and can be used to access the data in the case.</i></b><br>
 
 <dt><b>Example:</b></dt>
 <pre>
 Given a SimResultsManager object, you can create a SimResultsAnalysisCase object as following.
 The index starts from 1.
 </pre>
 <pre>
  Dim oResultsAnalysisCases As SimResultsAnalysisCases
  Set oResultsAnalysisCases = oResultsManager.ResultsAnalysisCases
  Dim oResultsAnalysisCase 'As SimResultsAnalysisCase
  Set oResultsAnalysisCase = oResultsAnalysisCases.Item(1)
 </pre>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','SimResultsManager','SimResultsManager') </script>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#JobDiagnosticSummary"><b>JobDiagnosticSummary</b></a>
<dd>  Returns the  SimJobDiagnosticSummary.
 <dt>
    <a href="#ResultsSteps"><b>ResultsSteps</b></a>
<dd>   Returns the available steps.
 <dt>
    <a href="#ScenarioAnalysisCase"><b>ScenarioAnalysisCase</b></a>
<dd>  Returns the scenario analysis case.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddFieldPlotDefinitions"><b>AddFieldPlotDefinitions</b></a>
<dd>  Adds the Field Plot definitions .
 <dt>
    <a href="#CreateExportFieldFromPlot"><b>CreateExportFieldFromPlot</b></a>
<dd>  Creates a export field plot.
 <dt>
    <a href="#CreateFieldPlotByID"><b>CreateFieldPlotByID</b></a>
<dd>  Creates a Field Plot as defined in a plot definition XML file.
 <dt>
    <a href="#CreateFrameSelector"><b>CreateFrameSelector</b></a>
<dd>  Creates a frame selection.
 <dt>
    <a href="#CreateFrequencySensor"><b>CreateFrequencySensor</b></a>
<dd>  Creates a frequency sensor.
 <dt>
    <a href="#CreateResultantSensor"><b>CreateResultantSensor</b></a>
<dd>  Creates a resultant sensor.
 <dt>
    <a href="#CreateSensor"><b>CreateSensor</b></a>
<dd>  Creates a basic sensor.
 <dt>
    <a href="#DeleteFeature"><b>DeleteFeature</b></a>
<dd>  Deletes an object created by this factory.
 <dt>
    <a href="#GetListOfFieldPlotIDs"><b>GetListOfFieldPlotIDs</b></a>
<dd>  Gets a list of creatable Field Plot IDs from the plot definition files.
 <dt>
    <a href="#GetSet"><b>GetSet</b></a>
<dd>  Gets a list of result features created within this Manager.
 <dt>
    <a href="#RemoveFieldPlotDefinitions"><b>RemoveFieldPlotDefinitions</b></a>
<dd>  Retracts filename(s) of XML file(s) that contain Field Plot definitions.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="JobDiagnosticSummary"><dt>

<table><tr><td>o Property <b>JobDiagnosticSummary</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the  SimJobDiagnosticSummary.
</dl>
<a name="ResultsSteps"><dt>

<table><tr><td>o Property <b>ResultsSteps</b>(<td>) As <script type="text/javascript"> activateLink('SimResultsSteps','SimResultsSteps')</script>  (Read Only)</table></dt>
<dl>
  <dd>
  Returns the available steps.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('','SMAIAMpaResultsSteps','SMAIAMpaResultsSteps') </script>
</dl>
</dl>
<a name="ScenarioAnalysisCase"><dt>

<table><tr><td>o Property <b>ScenarioAnalysisCase</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the scenario analysis case. The actual returned type could be either SimThermalAnalysisCase or <br>
 SimStructuralAnalysisCase depending on the type of analysis that was run.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospScenarioAnalysisCase</tt>
   <dd> The analysis case.</dd>
</dl>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddFieldPlotDefinitions"><dt>

<table><tr><td>o Sub <b>AddFieldPlotDefinitions</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ilcsFiles</tt>)</table></dt>
<dl>
  <dd>
 Adds the Field Plot definitions .xml files.
 It is OK to add the same file multiple times, but you will have to call
 
<script type="text/javascript"> activateLinkAnchor('','RemoveFieldPlotDefinitions','RemoveFieldPlotDefinitions') </script> just as many times to have those definitions ignored. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ilcsFiles</tt>
   <dd>   Name(s) of the Field Plot defintion XML files. The string for a filename can <br>
   begin with an environment variable which will be treated like a 'path'.<br>
   Example: $CATReffilesPath/FEM/SMAHvcModelDescription.xml<br></dd>
</dl>
</dl>
</dl>
<a name="CreateExportFieldFromPlot"><dt>

<table><tr><td>o Func <b>CreateExportFieldFromPlot</b>(<td><script type="text/javascript"> activateLink('SimFieldPlot','SimFieldPlot')</script> <td><tt>ipFieldPlot</tt>) As <script type="text/javascript"> activateLink('SimExportField','SimExportField')</script> </table></dt>
<dl>
  <dd>
 Creates a export field plot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipFieldPlot</tt>
   <dd>   Field plot to export
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The Export Field Plot object
</dl>
</dl>
<a name="CreateFieldPlotByID"><dt>

<table><tr><td>o Func <b>CreateFieldPlotByID</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>icsDataDisplayId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>icbActivate</tt>) As <script type="text/javascript"> activateLink('SimFieldPlot','SimFieldPlot')</script> </table></dt>
<dl>
  <dd>
 Creates a Field Plot as defined in a plot definition XML file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   icsDataDisplayId</tt>
   <dd> The ID of the Plot as specified in the XML file
 </dd>
    <dt><tt> icbActivate</tt>
   <dd>   If passed as TRUE, the Field Plot will be displayed once it is created. The default is FALSE
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Returns an interface to the created Field Plot
</dl>
</dl>
<a name="CreateFrameSelector"><dt>

<table><tr><td>o Func <b>CreateFrameSelector</b>(<td>) As <script type="text/javascript"> activateLink('SimFramesSelection','SimFramesSelection')</script> </table></dt>
<dl>
  <dd>
 Creates a frame selection.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Creates and returns frame selection object
</dl>
</dl>
<a name="CreateFrequencySensor"><dt>

<table><tr><td>o Func <b>CreateFrequencySensor</b>(<td>) As <script type="text/javascript"> activateLink('SimFrequencySensor','SimFrequencySensor')</script> </table></dt>
<dl>
  <dd>
 Creates a frequency sensor.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Creates and returns the frequency sensor object
</dl>
</dl>
<a name="CreateResultantSensor"><dt>

<table><tr><td>o Func <b>CreateResultantSensor</b>(<td>) As <script type="text/javascript"> activateLink('SimResultantSensor','SimResultantSensor')</script> </table></dt>
<dl>
  <dd>
 Creates a resultant sensor.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Creates and returns the resultant sensor object
</dl>
</dl>
<a name="CreateSensor"><dt>

<table><tr><td>o Func <b>CreateSensor</b>(<td>) As <script type="text/javascript"> activateLink('SimSensor','SimSensor')</script> </table></dt>
<dl>
  <dd>
 Creates a basic sensor.  
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Creates and returns the basic sensor object
</dl>
</dl>
<a name="DeleteFeature"><dt>

<table><tr><td>o Sub <b>DeleteFeature</b>(<td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> <td><tt>ispResultsObject</tt>)</table></dt>
<dl>
  <dd>
 Deletes an object created by this factory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispResultsObject</tt>
   <dd>   The results object to delete</dd>
</dl>
</dl>
</dl>
<a name="GetListOfFieldPlotIDs"><dt>

<table><tr><td>o Sub <b>GetListOfFieldPlotIDs</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ilFields</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>ibIncludeDefaults</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>ibIncludeUndMesh</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>olFieldPlotIds</tt>)</table></dt>
<dl>
  <dd>
 Gets a list of creatable Field Plot IDs from the plot definition files.<br>
 Read the Field Plot definition files specified in calls to 
<script type="text/javascript"> activateLinkAnchor('','AddField','AddField') </script> PlotDefinitions and, optionally, the default definitions, and return a list of Field Plot Ids for the defined
 Field Plots. The returned list can be filtered to only include Field Plot Ids for which all
 required fields appear is a provided list of fields. It is always filtered to only
 include Field Plot Ids for Plots that are completely supported by the available data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ilFields</tt>
   <dd>   If an empty list, the list of existing fields in the model is used. <br>
   The returned list of Field Plot Ids is filtered to exclude the Ids of Field Plots <br>
   referencing fields that are not in the list or fields that are not in the model
 </dd>
    <dt><tt> olPlotIds</tt>
   <dd>   The returned list of Field Plot Id strings.
 </dd>
    <dt><tt> ibIncludeDefaults</tt>
   <dd>   If TRUE (default) include the internal Field Plot definitions in  <br>
   addition to definitions passed to </dd>
</dl>
<script type="text/javascript"> activateLinkAnchor('','AddField','AddField') </script> PlotDefinitions. 
    <dt><tt> ibIncludeUndMesh</tt>
   <dd>   If TRUE (default) and ibIncludeDefaults is TRUE, include the <br>
   Field Plot Id for the undeformed mesh.</dd>
</dl>
</dl>
<a name="GetSet"><dt>

<table><tr><td>o Func <b>GetSet</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>ieSetType</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Gets a list of result features created within this Manager. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ieSetType</tt>
   <dd> The type of <b>Set</b> to access such as field plot, sensors, frequency sensors and    resultant sensors. The keyword for various sets are as follows:
   1. Field plot set: "FieldPlotSet".
   2. Sensor set: "SensorSet".
   3. Resultant sensor set: "ResultantSensorSet".
   4. Frequency sensor set: "FrequencySensorSet".
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The set of specified results feature.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>FieldPlotSet</tt> the field plot set created in <tt>MyResultsAnalysisCase</tt> :
 <pre>
 Dim MyResultsAnalysisCase As SimResultsAnalysisCase
 Set MyResultsAnalysisCase = ...
 Dim FieldPlotsResultsSet As SimResultsSet
 Set FieldPlotsResultsSet = MyResultsAnalysisCase.<font color="red">GetSet("FieldPlotSet")</font>
 </pre>
 </dl>
</dl>
</dl>
<a name="RemoveFieldPlotDefinitions"><dt>

<table><tr><td>o Sub <b>RemoveFieldPlotDefinitions</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ilcsFiles</tt>)</table></dt>
<dl>
  <dd>
 Retracts filename(s) of XML file(s) that contain Field Plot definitions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ilcsFiles</tt>
   <dd>   Name(s) of the Field Plot defintion XML files to no longer consider</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

