<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaFoundationIDLItf SimFeatures (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaFoundationIDLItf.htm" href="../SMAMpaFoundationIDLItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaFoundationIDLItf";	}
		function getCurrentObjectName() { 
 	return "SimFeatures"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SimFeatures<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SimFeatures_31665','SimFeatures','0');</script>
<b><i> Represents the Feature Set Collection.</i></b><br>

 
 <!-- @sample -->
 <dl>
 <dt><strong>Example:</strong></dt>
 <dd>
 
 Given a feature <code>SimAnalysisCase</code> object you can retrieve a <code>SimFeatures</code> object as following:
 <pre>
 Dim MyAnalysisCase As SimStructuralAnalysisCase
 ...
 Dim MyFeatures As SimFeatures
 Set MyFeatures = MyAnalysisCase.Features
 </pre>
 </dd>
 </dl>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('SMAIAMpaAnalysisCase','','SMAIAMpaAnalysisCase') </script>
</dl>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a Feature object and returns it.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>     Returns a Feature from the collection of Features.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>     Removes a Feature from the collection of Features.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Creates a Feature object and returns it.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    The Feature Type to be created.

 Possible values for iType are:
   <ul>
   <li>For Setup Features :
       <ul>
       <li><strong>SimTabularAmplitude</strong> : Creates a tabular amplitude feature. It is of type <code>SimTabularAmplitude</code>.</li>
       </ul>
   </li>
   <li>For Controls Features :
       <ul>
       <li><strong>SimStructuralDamping</strong> : Creates a damping feature. It is of type <code>SimStructuralDamping</code>.</li>
       <li><strong>SimMassScaling</strong> : Creates a mass scaling feature. It is of type <code>SimMassScaling</code>.</li>
       </ul>
   </li>
   <li>For Interaction Features :
       <ul>
       <li><strong>SimContactControls</strong> : Creates a contact controls feature. It is of type <code>SimContactControls</code>.</li>
       <li><strong>SimContactInterference</strong> : Creates a contact interference feature. It is of type <code>SimContactInterference</code>.</li>
       <li><strong>SimContactInitialization</strong> : Creates a contact interaction initialization feature. It is of type <code>SimContactInitialization</code>.</li>
       <li><strong>SimSurfaceBasedContactProperty</strong> : Creates a contact interaction property feature. It is of type <code>SimSurfaceBasedContactProperty</code>.</li>
       <li><strong>SimGeneralContact</strong> : Creates a general contact feature. It is of type <code>SimGeneralContact</code>.</li>
       <li><strong>SimSurfaceBasedContact</strong> : Creates a surface-based contact feature. It is of type <code>SimSurfaceBasedContact</code>.</li>
       </ul>
   </li>
   <li>For Load Features :
       <ul>
       <li><strong>SimAppliedRotation</strong> : Creates an applied rotation. It is of type <code>SimAppliedRotation</code>.</li>
       <li><strong>SimAppliedTranslation</strong> : Creates an applied rotation. It is of type <code>SimAppliedTranslation</code>.</li>
       <li><strong>SimBoltDisplacement</strong> : Creates a bolt displacement. It is of type <code>SimBoltDisplacement</code>.</li>
       <li><strong>SimBoltForce</strong> : Creates a bolt force. It is of type <code>SimBoltForce</code>.</li>
       <li><strong>SimBoltTorque</strong> : Creates a bolt torque. It is of type <code>SimBoltTorque</code>.</li>
       <li><strong>SimForce</strong> : Creates a force. It is of type <code>SimForce</code>.</li>
       <li><strong>SimImportedForce</strong> : Creates a force. It is of type <code>SimImportedForce</code>.</li>
       <li><strong>SimPressure</strong> : Creates a pressure. It is of type <code>SimPressure</code>.</li>
       <li><strong>SimRemoteForce</strong> : Creates a remote force. It is of type <code>SimRemoteForce</code>.</li>
       <li><strong>SimRemoteTorque</strong> : Creates a remote torque. It is of type <code>SimRemoteTorque</code>.</li>
       <li><strong>SimTorque</strong> : Creates a torque. It is of type <code>SimTorque</code>.</li>
       <li><strong>SimInertiaRelief</strong> : Creates a inertia relief. It is of type <code>SimInertiaRelief</code>.</li>
       <li><strong>SimConnectorForce</strong> : Creates a connector force. It is of type <code>SimConnectorForce</code>.</li>
       <li><strong>SimConnectorMoment</strong> : Creates a connector moment It is of type <code>SimConnectorMoment</code>.</li>
       </ul>
   </li>
   <li>For Restraint Features :
       <ul>
       <li><strong>SimBoltRestraint</strong> : Creates a bolt restraint. It is of type <code>SimBoltRestraint</code>.</li>
       <li><strong>SimClamp</strong> : Creates a clamp. It is of type <code>SimClamp</code>.</li>
       <li><strong>SimDisplacementRestraint</strong> : Creates a displacement restraint. It is of type <code>SimDisplacementRestraint</code>.</li>
       <li><strong>SimConnectorDisplacementRestraint</strong> : Creates a displacement restraint. It is of type <code>SimConnectorDisplacementRestraint</code>.</li>
       </ul>
   </li>
   <li>For Thermal Features :
       <ul>
       <li><strong>SimFilmCondition</strong> : Creates a film condition. It is of type <code>SimFilmCondition</code>.</li>
       <li><strong>SimHeatFlux</strong> : Creates a heat flux. It is of type <code>SimHeatFlux</code>.</li>
       <li><strong>SimTemperature</strong> : Creates a temperature. It is of type <code>SimTemperature</code>.</li>
       <li><strong>SimInitialTemperature</strong> : Creates an initial temperature. It is of type <code>SimTemperature</code>.</li>
       <li><strong>SimPrescribedTemperature</strong> : Creates a prescribed temperature. It is of type <code>SimTemperature</code>.</li>
       <li><strong>SimRadiationAmbient</strong> : Creates a radiation to ambient. It is of type <code>SimRadiationAmbient</code>.</li>
       <li><strong>SimRadiationCavityApprox</strong> : Creates a radiation cavity approx. It is of type <code>SimRadiationCavityApprox</code>.</li>
       </ul>
   </li>
   <li>For Output Features :
       <ul>
       <li><strong>SimFieldOutput</strong> : Creates a field output. It is of type <code>SimOuput</code>.</li>
       <li><strong>SimHistoryOutput</strong> : Creates a history output. It is of type <code>SimOuput</code>.</li>
       </ul>
   </li>
   <li>For Load Set :
       <li><b>SimLoadSet</b> : Creates a load set. It adheres to <code>SMAIMpaLoadSet</code> interface.</li>
   </li>
   <ul>

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created feature object.
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
    Returns a Feature from the collection of Features.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iIndex</tt>
   <dd>        The  index of the Feature Set.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The retrieved feature object.
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
    Removes a Feature from the collection of Features.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iIndex</tt>
   <dd>      The  index or name of the feature object.</dd>
</dl>
</dl>
</dl>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

