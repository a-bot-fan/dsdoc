<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMConfigUseItf Interface CATConfigXMLExpressionStruct</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMConfigUseItf.htm" href="../CATPLMConfigUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMConfigUseItf";	}
		function getCurrentObjectName() { 
 	return "CATConfigXMLExpressionStruct"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMConfigUseItf Interface CATConfigXMLExpressionStruct</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATConfigXMLExpressionStruct_58320','CATConfigXMLExpressionStruct','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATConfigXMLExpressionStruct</b>
</p>
<p>
<b><i> Class to cache the XML Expression.</i></b><br>
 No API to be used with this class.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#m_returnMessage(ERROR_UNEXPECTED)"><b>m_returnMessage</b></a>(ERROR_UNEXPECTED)
<dd>  <dt> o 
    <a href="#m_returnMessage(in_objectToCopy.)"><b>m_returnMessage</b></a>(in_objectToCopy.)
<dd>  <dt> o 
    <a href="#operator !=(CATConfigXMLExpressionStruct&amp;)"><b>operator !=</b></a>(CATConfigXMLExpressionStruct&amp;)
<dd>  <dt> o 
    <a href="#operator ==(CATConfigXMLExpressionStruct&amp;)"><b>operator ==</b></a>(CATConfigXMLExpressionStruct&amp;)
<dd> </dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ReturnMessage"><b>ReturnMessage</b></a>
<dd> </dl>
<dl>
 <h2>Data Member Index</h2> <br>
 <dt> o 
    <a href="#m_expressionXMLForViewCurrent"><b>m_expressionXMLForViewCurrent</b></a>
<dd>  <dt> o 
    <a href="#m_expressionXMLForViewProjected"><b>m_expressionXMLForViewProjected</b></a>
<dd>  <dt> o 
    <a href="#m_pFilterable"><b>m_pFilterable</b></a>
<dd>  <dt> o 
    <a href="#m_returnMessage"><b>m_returnMessage</b></a>
<dd> </dl>
 <h2>Methods</h2> <br>
<a name="m_returnMessage"></a><a name="m_returnMessage(ERROR_UNEXPECTED)"></a> <dt> o <b>m_returnMessage</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('m_expressionXMLForViewProjected(""),','CATConfigXMLExpressionStruct(): m_pFilterable(NULL), m_expressionXMLForViewCurrent(""), m_expressionXMLForViewProjected(""),')</script>  <b>m_returnMessage</b>(<td><script type="text/javascript"> activateLink('ERROR_UNEXPECTED','ERROR_UNEXPECTED')</script> <td><tt></tt>)</table></dt>
<dl>
  <dd>
</dl>
<a name="m_returnMessage"></a><a name="m_returnMessage(in_objectToCopy.)"></a> <dt> o <b>m_returnMessage</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('m_expressionXMLForViewProjected(in_objectToCopy','CATConfigXMLExpressionStruct(const CATConfigXMLExpressionStruct& in_objectToCopy ): m_pFilterable(in_objectToCopy.m_pFilterable), m_expressionXMLForViewCurrent(in_objectToCopy.m_expressionXMLForViewCurrent), m_expressionXMLForViewProjected(in_objectToCopy')</script>  <b>m_returnMessage</b>(<td><script type="text/javascript"> activateLink('in_objectToCopy.','in_objectToCopy.')</script> <td><tt>m_returnMessage</tt>)</table></dt>
<dl>
  <dd>
</dl>
<a name="operator !="></a><a name="operator !=(CATConfigXMLExpressionStruct&amp;)"></a> <dt> o <b>operator !=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>operator !=</b>(<td> const <script type="text/javascript"> activateLink('CATConfigXMLExpressionStruct','CATConfigXMLExpressionStruct&amp;')</script> <td><tt>iStruct</tt>)</table></dt>
<dl>
  <dd>
</dl>
<a name="operator =="></a><a name="operator ==(CATConfigXMLExpressionStruct&amp;)"></a> <dt> o <b>operator ==</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>operator ==</b>(<td> const <script type="text/javascript"> activateLink('CATConfigXMLExpressionStruct','CATConfigXMLExpressionStruct&amp;')</script> <td><tt>iStruct</tt>)</table></dt>
<dl>
  <dd>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ReturnMessage"> <dt> o <b>ReturnMessage</b>
<dl>
  <dd>
<pre>
enum <b>ReturnMessage</b> {
  SUCCESS_EFFECTIVITY_RETRIEVED,
  SUCCESS_NO_EFFECTIVITY_CONFIG_CHANGE_ON_FILTERABLE,
  ERROR_FAILED_TO_RETRIEVE_EFFECTIVITY_CONFIG_CHANGE,
  ERROR_DEPENDENCIES_NOT_LOADED,
  ERROR_UNEXPECTED
}
</pre>
</dl>
 <h2>Data Members</h2> <br>
<a name="m_expressionXMLForViewCurrent"></a> <dt> o <b>m_expressionXMLForViewCurrent</b>
<pre>
  public CATUnicodeString m_expressionXMLForViewCurrent</dt>
</pre>
<dl>
  <dd>
</dl>
<a name="m_expressionXMLForViewProjected"></a> <dt> o <b>m_expressionXMLForViewProjected</b>
<pre>
  public CATUnicodeString m_expressionXMLForViewProjected</dt>
</pre>
<dl>
  <dd>
</dl>
<a name="m_pFilterable"></a> <dt> o <b>m_pFilterable</b>
<pre>
  public CATIConfigFilterable* m_pFilterable</dt>
</pre>
<dl>
  <dd>
</dl>
<a name="m_returnMessage"></a> <dt> o <b>m_returnMessage</b>
<pre>
  public ReturnMessage m_returnMessage</dt>
</pre>
<dl>
  <dd>
</dl>
<hr>
 This object is included in the file: <b>CATConfigXMLExpressionStruct.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATCfgUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

