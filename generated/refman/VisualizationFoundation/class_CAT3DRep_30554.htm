<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationFoundation Class CAT3DRep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../VisualizationFoundation.htm" href="../VisualizationFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "VisualizationFoundation";	}
		function getCurrentObjectName() { 
 	return "CAT3DRep"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>VisualizationFoundation <script type="text/javascript" > writeClassCharacteristic(); </script> CAT3DRep</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT3DRep_30554','CAT3DRep','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DRep</b>
</p>
<p>
<b><i> Class to create a 3D representation of an application object.</i></b><br>

 <b>Role</b>: This class is the base class for all 3D representation classes.
 It manages specific 3D behavior, such as
 <ol>
<li> 3D bounding element </li>
<li> streaming </li>
<li> outline builder </li>
<li> materials </li>
 </ol></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT3DRep()"><b>CAT3DRep</b></a>()
<dd>  Constructor of an empty 3D representation.
 <dt> o 
    <a href="#~CAT3DRep()"><b>~CAT3DRep</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddBoundingElement(CAT3DBoundingSphere&amp;)"><b>AddBoundingElement</b></a>(CAT3DBoundingSphere&amp;)
<dd>  Adds the given bounding element to the existing one.
 <dt> o 
    <a href="#AddMaterialApplication(CATMaterialApplication&amp;)"><b>AddMaterialApplication</b></a>(CATMaterialApplication&amp;)
<dd>  Adds a new CATMaterialApplication to the list.
 <dt> o 
    <a href="#ComputeBoundingElement(int)"><b>ComputeBoundingElement</b></a>(int)
<dd>  Computes the bounding element of the representation.
 <dt> o 
    <a href="#GetBoundingCube(void)"><b>GetBoundingCube</b></a>(void)
<dd>  Returns the bounding element pointer .
 <dt> o 
    <a href="#GetBoundingElement()"><b>GetBoundingElement</b></a>()
<dd>  Returns the bounding element of the representation.
 <dt> o 
    <a href="#GetBoundingElement()"><b>GetBoundingElement</b></a>()
<dd>  Returns the bounding element of the representation.
 <dt> o 
    <a href="#GetGraphicMaterial()"><b>GetGraphicMaterial</b></a>()
<dd>  Returns the material applied to the 3DRep, after resolution of the list of MaterialApplication, according to new materials inheritance rules.
 <dt> o 
    <a href="#GetIsValidTC()"><b>GetIsValidTC</b></a>()
<dd>  Return the validity of texture coordinates.
 <dt> o 
    <a href="#GetListOfMaterialApplication()"><b>GetListOfMaterialApplication</b></a>()
<dd>  Returns the list of CATMaterialApplication.
 <dt> o 
    <a href="#GetMaterialApplication()"><b>GetMaterialApplication</b></a>()
<dd>  Returns the effective CATMaterialApplication applied to the 3DRep, after resolution of the list of CATMaterialApplication, according to new materials inheritance rules.
 <dt> o 
    <a href="#GetMaterialInheritance()"><b>GetMaterialInheritance</b></a>()
<dd>  
 <dt> o 
    <a href="#GetTopMaterialLayer()"><b>GetTopMaterialLayer</b></a>()
<dd>  Gets the layer of the effective CATMaterialApplication applied to the 3DRep.
 <dt> o 
    <a href="#RemoveAllMaterialApplication()"><b>RemoveAllMaterialApplication</b></a>()
<dd>  Removes all CATMaterialApplication from the list.
 <dt> o 
    <a href="#RemoveMaterialApplication(CATMaterialApplication&amp;)"><b>RemoveMaterialApplication</b></a>(CATMaterialApplication&amp;)
<dd>  Removes a CATMaterialApplication from the list.
 <dt> o 
    <a href="#ResetBoundingElement()"><b>ResetBoundingElement</b></a>()
<dd>  Resets the bounding element of representation.
 <dt> o 
    <a href="#SetBoundingElement(CAT3DBoundingSphere&amp;)"><b>SetBoundingElement</b></a>(CAT3DBoundingSphere&amp;)
<dd>  Sets the bounding element of the representation.
 <dt> o 
    <a href="#SetGraphicMaterial(CATGraphicMaterial*)"><b>SetGraphicMaterial</b></a>(CATGraphicMaterial*)
<dd>  Deletes the existing list of MaterialApplication and creates a new one with this unique material.
 <dt> o 
    <a href="#SetInvalid()"><b>SetInvalid</b></a>()
<dd>  Invalidates the bounding element of the representation.
 <dt> o 
    <a href="#SetIsValidTC(int)"><b>SetIsValidTC</b></a>(int)
<dd>  Sets the validity of texture coordinates.
 <dt> o 
    <a href="#SetMaterialInheritance(int)"><b>SetMaterialInheritance</b></a>(int)
<dd>  Sets the heritance mode for the applied material.
 <dt> o 
    <a href="#SetTopMaterialLayer(CATULONG32)"><b>SetTopMaterialLayer</b></a>(CATULONG32)
<dd>  Sets the layer of the effective CATMaterialApplication applied to the 3DRep.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT3DRep"></a><a name="CAT3DRep()"></a> <dt> o <b>CAT3DRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT3DRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor of an empty 3D representation.
</dl>
<a name="~CAT3DRep"></a><a name="~CAT3DRep()"></a> <dt> o <b>~CAT3DRep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CAT3DRep</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddBoundingElement"></a><a name="AddBoundingElement(CAT3DBoundingSphere&amp;)"></a> <dt> o <b>AddBoundingElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddBoundingElement</b>(<td> const <script type="text/javascript"> activateLink('CAT3DBoundingSphere','CAT3DBoundingSphere&amp;')</script> <td><tt>iBoundingSphere</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds the given bounding element to the existing one. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBoundingSphere</tt>
   <dd> The current bounding element of the representation will be modified to
 contain <tt>iBoundingSphere</tt>.</dd>
</dl>
</dl>
</dl>
<a name="AddMaterialApplication"></a><a name="AddMaterialApplication(CATMaterialApplication&amp;)"></a> <dt> o <b>AddMaterialApplication</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddMaterialApplication</b>(<td> const <script type="text/javascript"> activateLink('CATMaterialApplication','CATMaterialApplication&amp;')</script> <td><tt>iMatApp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a new CATMaterialApplication to the list. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMatApp</tt>
   <dd> CATMaterialApplication to be added to the list.
 Makes a AddReference() on the material contained in the CATMaterialApplication.</dd>
</dl>
</dl>
</dl>
<a name="ComputeBoundingElement"></a><a name="ComputeBoundingElement(int)"></a> <dt> o <b>ComputeBoundingElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeBoundingElement</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShowSpace</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the bounding element of the representation. The bounding element should be the smallest possible sphere containing the representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowSpace</tt>
   <dd> <br><b>Legal Values</b>:
 <ol>
<li> 0 :  </li>
<li> 1 :  </li>
 </ol></dd>
</dl>
</dl>
</dl>
<a name="GetBoundingCube"></a><a name="GetBoundingCube(void)"></a> <dt> o <b>GetBoundingCube</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoundingElement','inline CATBoundingElement *')</script>  <b>GetBoundingCube</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the bounding element pointer ...
</dl>
<a name="GetBoundingElement"></a><a name="GetBoundingElement()"></a> <dt> o <b>GetBoundingElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DBoundingSphere','const CAT3DBoundingSphere &')</script>  <b>GetBoundingElement</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the bounding element of the representation.
</dl>
<a name="GetBoundingElement"></a><a name="GetBoundingElement()"></a> <dt> o <b>GetBoundingElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DBoundingSphere','inline const CAT3DBoundingSphere &')</script>  <b>GetBoundingElement</b>(<td>)</table></dt>
<dl>
  <dd>
 Returns the bounding element of the representation.
</dl>
<a name="GetGraphicMaterial"></a><a name="GetGraphicMaterial()"></a> <dt> o <b>GetGraphicMaterial</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATGraphicMaterial','CATGraphicMaterial *')</script>  <b>GetGraphicMaterial</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the material applied to the 3DRep, after resolution of the list of MaterialApplication, according to new materials inheritance rules. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Returns the applied material.
</dl>
</dl>
<a name="GetIsValidTC"></a><a name="GetIsValidTC()"></a> <dt> o <b>GetIsValidTC</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetIsValidTC</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Return the validity of texture coordinates.
</dl>
<a name="GetListOfMaterialApplication"></a><a name="GetListOfMaterialApplication()"></a> <dt> o <b>GetListOfMaterialApplication</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('list<CATMaterialApplication>','const list<CATMaterialApplication>')</script>  <b>GetListOfMaterialApplication</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of CATMaterialApplication. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Returns the list of CATMaterialApplication.
</dl>
</dl>
<a name="GetMaterialApplication"></a><a name="GetMaterialApplication()"></a> <dt> o <b>GetMaterialApplication</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMaterialApplication','CATMaterialApplication *')</script>  <b>GetMaterialApplication</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the effective CATMaterialApplication applied to the 3DRep, after resolution of the list of CATMaterialApplication, according to new materials inheritance rules. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Returns the applied CATMaterialApplication.
</dl>
</dl>
<a name="GetMaterialInheritance"></a><a name="GetMaterialInheritance()"></a> <dt> o <b>GetMaterialInheritance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetMaterialInheritance</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Returns the inheritance mode for the material applied to the rep.
</dl>
</dl>
<a name="GetTopMaterialLayer"></a><a name="GetTopMaterialLayer()"></a> <dt> o <b>GetTopMaterialLayer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATULONG32','const CATULONG32')</script>  <b>GetTopMaterialLayer</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Gets the layer of the effective CATMaterialApplication applied to the 3DRep. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Returns the layer.
</dl>
</dl>
<a name="RemoveAllMaterialApplication"></a><a name="RemoveAllMaterialApplication()"></a> <dt> o <b>RemoveAllMaterialApplication</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveAllMaterialApplication</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all CATMaterialApplication from the list.
</dl>
<a name="RemoveMaterialApplication"></a><a name="RemoveMaterialApplication(CATMaterialApplication&amp;)"></a> <dt> o <b>RemoveMaterialApplication</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveMaterialApplication</b>(<td> const <script type="text/javascript"> activateLink('CATMaterialApplication','CATMaterialApplication&amp;')</script> <td><tt>iMatApp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a CATMaterialApplication from the list. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMatApp</tt>
   <dd> CATMaterialApplication to be removed from the list.
 Makes a SubReference() on the material contained in the CATMaterialApplication.</dd>
</dl>
</dl>
</dl>
<a name="ResetBoundingElement"></a><a name="ResetBoundingElement()"></a> <dt> o <b>ResetBoundingElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetBoundingElement</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets the bounding element of representation.  The visualization manager will ignore the representation.
</dl>
<a name="SetBoundingElement"></a><a name="SetBoundingElement(CAT3DBoundingSphere&amp;)"></a> <dt> o <b>SetBoundingElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetBoundingElement</b>(<td> const <script type="text/javascript"> activateLink('CAT3DBoundingSphere','CAT3DBoundingSphere&amp;')</script> <td><tt>iBoundingSphere</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the bounding element of the representation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBoundingSphere</tt>
   <dd> The (smallest) bounding element containing the representation.</dd>
</dl>
</dl>
</dl>
<a name="SetGraphicMaterial"></a><a name="SetGraphicMaterial(CATGraphicMaterial*)"></a> <dt> o <b>SetGraphicMaterial</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetGraphicMaterial</b>(<td><script type="text/javascript"> activateLink('CATGraphicMaterial','CATGraphicMaterial*')</script> <td><tt>iMaterial</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deletes the existing list of MaterialApplication and creates a new one with this unique material. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaterial</tt>
   <dd> Material that will compose the new list of MaterialApplication.</dd>
</dl>
</dl>
</dl>
<a name="SetInvalid"></a><a name="SetInvalid()"></a> <dt> o <b>SetInvalid</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetInvalid</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Invalidates the bounding element of the representation. The visualization manager will recompute the bounding element of the representation.
</dl>
<a name="SetIsValidTC"></a><a name="SetIsValidTC(int)"></a> <dt> o <b>SetIsValidTC</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetIsValidTC</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the validity of texture coordinates. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd> <ol>
<li> 0 : TC invalid, they will be computed at next Draw </li>
<li> 1 : TC valid </li>
 </ol></dd>
</dl>
</dl>
</dl>
<a name="SetMaterialInheritance"></a><a name="SetMaterialInheritance(int)"></a> <dt> o <b>SetMaterialInheritance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaterialInheritance</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iInheritance</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the heritance mode for the applied material. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInheritance</tt>
   <dd> <ol>
<li> MATERIAL_NOT_INHERIT : children reps will not have this rep's material </li>
<li> MATERIAL_INHERIT :  children reps will have automaticly this rep's material</li>
<li> MATERIAL_FORCE_INHERIT : same as INHERIT, but even when a father has the INHERIT flag</li>
 </ol></dd>
</dl>
</dl>
</dl>
<a name="SetTopMaterialLayer"></a><a name="SetTopMaterialLayer(CATULONG32)"></a> <dt> o <b>SetTopMaterialLayer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTopMaterialLayer</b>(<td> const <script type="text/javascript"> activateLink('CATULONG32','CATULONG32')</script> <td><tt>iLayer</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the layer of the effective CATMaterialApplication applied to the 3DRep. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLayer</tt>
   <dd> input layer to be set.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT3DRep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisFoundation</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

