<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AfrFoundation Global Function GetArgs</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../AfrFoundation.htm" href="../AfrFoundation.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "AfrFoundation";	}
		function getCurrentObjectName() { 
 	return "GetArgs"; } 
	function getCurrentType() { 
 	return "global function"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>AfrFoundation Global Function GetArgs</h1>

<br><dt><table><tr><td>  <script type="text/javascript"> activateLink('HRESULT',' HRESULT')</script>  <b>GetArgs</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iHeaderID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAfrCommandHeaderArgs','CATAfrCommandHeaderArgs*&amp;')</script> <td><tt>opCmdHdrArgs</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 GetArgs returns a pointer on the CATAfrCommandHeaderArgs object associated
 to the CATCommandHeader.
 The CATAfrCommandHeaderArgs corresponds to the list of arguments given to the
 launched CATCommand associated to this CATCommandHeader.
 When you have finished to use the reference, you need to call Release on it
 (unusual way to use a reference but legacy).

 Sample:
 // Get arguments list to populate it. Note: returned by reference.
 CATAfrCommandHeaderArgs * argList = NULL;GetArgs("MyHeader",argList);

 // Here you can add your arguments to the list using the CATAfrCommandHeaderArgs::Set function
 argList->Set("MyArgument", CATBoxingOfint::Box(1));

 // When you finished to set your arguments, don't forget to release the arguments list
 argsList->Release();

 Thanks to a CATAfrCommandHeaderArgsIterator ( CATAfrCommandHeaderArgs::CreateIterator )
 Command header's arguments list can be scanned.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHeaderID</tt>
   <dd>     The identifier of the command header (CATCommandHeader).

 </dd>
    <dt><tt> opCmdHdrArgs</tt>
   <dd> [CATBaseUnknown#Release]     Returns a pointer on the arguments list given to the launched CATCommand associated to this 
     CATCommandHeader
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl>
   <dt><tt>S_OK</tt>    <dd>Arguments list have been successfully retrieved.
   <dt><tt>E_FAIL</tt>  <dd>Failed to retrieve arguments list.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAfrCommandHeader.h</b><br>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

