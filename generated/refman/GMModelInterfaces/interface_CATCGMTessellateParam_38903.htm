<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATCGMTessellateParam</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../GMModelInterfaces.htm" href="../GMModelInterfaces.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "GMModelInterfaces";	}
		function getCurrentObjectName() { 
 	return "CATCGMTessellateParam"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>GMModelInterfaces Interface CATCGMTessellateParam</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATCGMTessellateParam_38903','CATCGMTessellateParam','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATCGMTessellateParam</b>
</p>
<p>
<b><i> Class for the new tessellation parameters.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#DoGenerateVertexNormals(CATBoolean)"><b>DoGenerateVertexNormals</b></a>(CATBoolean)
<dd>  Asks for normal vector (on surface) at vertice.
 <dt> o 
    <a href="#DoGenerateVertexTangents(CATBoolean)"><b>DoGenerateVertexTangents</b></a>(CATBoolean)
<dd>  Asks for tangent vector (on curve) at vertice.
 <dt> o 
    <a href="#DoGenerateVertexUVs(CATBoolean)"><b>DoGenerateVertexUVs</b></a>(CATBoolean)
<dd>  Asks for UV (2D parameter on surface) at vertice.
 <dt> o 
    <a href="#DoGenerateVertexWs(CATBoolean)"><b>DoGenerateVertexWs</b></a>(CATBoolean)
<dd>  Asks for W (1D parameter on curve) at vertice.
 <dt> o 
    <a href="#GenerateVertexNormals()"><b>GenerateVertexNormals</b></a>()
<dd>  Asks for normal vector at vertice.
 <dt> o 
    <a href="#GenerateVertexTangents()"><b>GenerateVertexTangents</b></a>()
<dd>  Asks for tangent vector at vertice.
 <dt> o 
    <a href="#GenerateVertexUVs()"><b>GenerateVertexUVs</b></a>()
<dd>  Asks for UV at vertice.
 <dt> o 
    <a href="#GenerateVertexWs()"><b>GenerateVertexWs</b></a>()
<dd>  Asks for W at vertice.
 <dt> o 
    <a href="#GetMaxAngle()"><b>GetMaxAngle</b></a>()
<dd>  Gets the maximum angle.
 <dt> o 
    <a href="#GetMaxDeviation()"><b>GetMaxDeviation</b></a>()
<dd>  Gets the maximum chord deviation.
 <dt> o 
    <a href="#GetMaxStep()"><b>GetMaxStep</b></a>()
<dd>  Gets the maximum step.
 <dt> o 
    <a href="#SetMaxAngle(double)"><b>SetMaxAngle</b></a>(double)
<dd>  Sets the maximum angle (default MaxAngle = CATPI * 0.
 <dt> o 
    <a href="#SetMaxDeviation(double)"><b>SetMaxDeviation</b></a>(double)
<dd>  Sets the maximum chord deviation.
 <dt> o 
    <a href="#SetMaxStep(double)"><b>SetMaxStep</b></a>(double)
<dd>  Sets the maximum step (default MaxStep = CATMathInfinite).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="DoGenerateVertexNormals"></a><a name="DoGenerateVertexNormals(CATBoolean)"></a> <dt> o <b>DoGenerateVertexNormals</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>DoGenerateVertexNormals</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActivate</tt>)</table></dt>
<dl>
  <dd>
 Asks for normal vector (on surface) at vertice.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivate</tt>
   <dd>   default is FALSE.</dd>
</dl>
</dl>
</dl>
<a name="DoGenerateVertexTangents"></a><a name="DoGenerateVertexTangents(CATBoolean)"></a> <dt> o <b>DoGenerateVertexTangents</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>DoGenerateVertexTangents</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActivate</tt>)</table></dt>
<dl>
  <dd>
 Asks for tangent vector (on curve) at vertice.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivate</tt>
   <dd>   default is FALSE.</dd>
</dl>
</dl>
</dl>
<a name="DoGenerateVertexUVs"></a><a name="DoGenerateVertexUVs(CATBoolean)"></a> <dt> o <b>DoGenerateVertexUVs</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>DoGenerateVertexUVs</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActivate</tt>)</table></dt>
<dl>
  <dd>
 Asks for UV (2D parameter on surface) at vertice.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivate</tt>
   <dd>   default is FALSE.</dd>
</dl>
</dl>
</dl>
<a name="DoGenerateVertexWs"></a><a name="DoGenerateVertexWs(CATBoolean)"></a> <dt> o <b>DoGenerateVertexWs</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>DoGenerateVertexWs</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActivate</tt>)</table></dt>
<dl>
  <dd>
 Asks for W (1D parameter on curve) at vertice.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivate</tt>
   <dd>   default is FALSE.</dd>
</dl>
</dl>
</dl>
<a name="GenerateVertexNormals"></a><a name="GenerateVertexNormals()"></a> <dt> o <b>GenerateVertexNormals</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GenerateVertexNormals</b>(<td>)</table></dt>
<dl>
  <dd>
 Asks for normal vector at vertice.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    is normal vector at vertice asked.
</dl>
</dl>
<a name="GenerateVertexTangents"></a><a name="GenerateVertexTangents()"></a> <dt> o <b>GenerateVertexTangents</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GenerateVertexTangents</b>(<td>)</table></dt>
<dl>
  <dd>
 Asks for tangent vector at vertice.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    is tangent vector at vertice asked.
</dl>
</dl>
<a name="GenerateVertexUVs"></a><a name="GenerateVertexUVs()"></a> <dt> o <b>GenerateVertexUVs</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GenerateVertexUVs</b>(<td>)</table></dt>
<dl>
  <dd>
 Asks for UV at vertice.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    is UV at vertice asked.
</dl>
</dl>
<a name="GenerateVertexWs"></a><a name="GenerateVertexWs()"></a> <dt> o <b>GenerateVertexWs</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GenerateVertexWs</b>(<td>)</table></dt>
<dl>
  <dd>
 Asks for W at vertice.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    is W at vertice asked.
</dl>
</dl>
<a name="GetMaxAngle"></a><a name="GetMaxAngle()"></a> <dt> o <b>GetMaxAngle</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>GetMaxAngle</b>(<td>)</table></dt>
<dl>
  <dd>
 Gets the maximum angle.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The maximum angle.
</dl>
</dl>
<a name="GetMaxDeviation"></a><a name="GetMaxDeviation()"></a> <dt> o <b>GetMaxDeviation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>GetMaxDeviation</b>(<td>)</table></dt>
<dl>
  <dd>
 Gets the maximum chord deviation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The maximum chord deviation.
</dl>
</dl>
<a name="GetMaxStep"></a><a name="GetMaxStep()"></a> <dt> o <b>GetMaxStep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>GetMaxStep</b>(<td>)</table></dt>
<dl>
  <dd>
 Gets the maximum step.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The maximum step.
</dl>
</dl>
<a name="SetMaxAngle"></a><a name="SetMaxAngle(double)"></a> <dt> o <b>SetMaxAngle</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxAngle</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMaxAngle</tt>)</table></dt>
<dl>
  <dd>
 Sets the maximum angle (default MaxAngle = CATPI * 0.25).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxAngle</tt>
   <dd>   The maximum angle to be met by the tessellated body.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxDeviation"></a><a name="SetMaxDeviation(double)"></a> <dt> o <b>SetMaxDeviation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxDeviation</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMaxDeviation</tt>)</table></dt>
<dl>
  <dd>
 Sets the maximum chord deviation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxDeviation</tt>
   <dd>   The maximum chord deviation (sag) to be met by the tessellated body.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxStep"></a><a name="SetMaxStep(double)"></a> <dt> o <b>SetMaxStep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxStep</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMaxStep</tt>)</table></dt>
<dl>
  <dd>
 Sets the maximum step (default MaxStep = CATMathInfinite).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxStep</tt>
   <dd>   The maximum step to be met by the tessellated body.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCGMTessellateParam.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

