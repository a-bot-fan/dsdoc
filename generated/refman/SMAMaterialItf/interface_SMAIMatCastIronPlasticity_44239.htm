<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMaterialItf Interface SMAIMatCastIronPlasticity</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMaterialItf.htm" href="../SMAMaterialItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMaterialItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMatCastIronPlasticity"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMaterialItf Interface SMAIMatCastIronPlasticity</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMatCastIronPlasticity_44239','SMAIMatCastIronPlasticity','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMatCastIronPlasticity</b>
</p>
<p>
<b><i> Interface to access data within a cast iron plasticity material option.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCompressionHardeningMaterialTable(SMAIMatMaterialTable_var&amp;)"><b>GetCompressionHardeningMaterialTable</b></a>(SMAIMatMaterialTable_var&amp;)
<dd>  Retrieves the compression hardening material table.
 <dt> o 
    <a href="#GetCompressionHardeningMaterialTableColumn(CompressionHardeningMaterialTableColumn,CATISimTableColumn_var&amp;)"><b>GetCompressionHardeningMaterialTableColumn</b></a>(CompressionHardeningMaterialTableColumn,CATISimTableColumn_var&amp;)
<dd>  Retrieves the column object for the Compression Hardening table column.
 <dt> o 
    <a href="#GetPlasticityMaterialTable(SMAIMatMaterialTable_var&amp;)"><b>GetPlasticityMaterialTable</b></a>(SMAIMatMaterialTable_var&amp;)
<dd>  Retrieves the plasticity material table.
 <dt> o 
    <a href="#GetPlasticityMaterialTableColumn(PlasticityMaterialTableColumn,CATISimTableColumn_var&amp;)"><b>GetPlasticityMaterialTableColumn</b></a>(PlasticityMaterialTableColumn,CATISimTableColumn_var&amp;)
<dd>  Retrieves the column object for the plasticity table column.
 <dt> o 
    <a href="#GetTensionHardeningMaterialTable(SMAIMatMaterialTable_var&amp;)"><b>GetTensionHardeningMaterialTable</b></a>(SMAIMatMaterialTable_var&amp;)
<dd>  Retrieves the tension hardening material table.
 <dt> o 
    <a href="#GetTensionHardeningMaterialTableColumn(TensionHardeningMaterialTableColumn,CATISimTableColumn_var&amp;)"><b>GetTensionHardeningMaterialTableColumn</b></a>(TensionHardeningMaterialTableColumn,CATISimTableColumn_var&amp;)
<dd>  Retrieves the column object for the Tension Hardening table column.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CompressionHardeningMaterialTableColumn"><b>CompressionHardeningMaterialTableColumn</b></a>
<dd>  <br><br><b>For Compression Hardening</b>
 
 <dt> o 
    <a href="#PlasticityMaterialTableColumn"><b>PlasticityMaterialTableColumn</b></a>
<dd>  Columns in material table 
 <br>The columns in the material table will be:
 <br><br><b>For Plasticity</b>
 
 <dt> o 
    <a href="#TensionHardeningMaterialTableColumn"><b>TensionHardeningMaterialTableColumn</b></a>
<dd>  <br><br><b>For Tension Hardening</b>
 
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCompressionHardeningMaterialTable"></a><a name="GetCompressionHardeningMaterialTable(SMAIMatMaterialTable_var&amp;)"></a> <dt> o <b>GetCompressionHardeningMaterialTable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCompressionHardeningMaterialTable</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialTable_var','SMAIMatMaterialTable_var&amp;')</script> <td><tt>ospCompressionHardeningMaterialTable</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the compression hardening material table.
 Multiple row data is supported.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCompressionHardeningMaterialTable</tt>
   <dd> [out]   The compression hardening material table
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetCompressionHardeningMaterialTableColumn"></a><a name="GetCompressionHardeningMaterialTableColumn(CompressionHardeningMaterialTableColumn,CATISimTableColumn_var&amp;)"></a> <dt> o <b>GetCompressionHardeningMaterialTableColumn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCompressionHardeningMaterialTableColumn</b>(<td><script type="text/javascript"> activateLink('CompressionHardeningMaterialTableColumn','CompressionHardeningMaterialTableColumn')</script> <td><tt>iMaterialTableColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISimTableColumn_var','CATISimTableColumn_var&amp;')</script> <td><tt>ospCompressionHardeningMaterialTableColumn</tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the column object for the Compression Hardening table column.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaterialTableColumn</tt>
   <dd> [in]   The Compression Hardening table column.
 </dd>
    <dt><tt> ospCompressionHardeningMaterialTableColumn</tt>
   <dd> [out]   The table column object. This value will be NULL_var in case the specified column is not found in the table.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetPlasticityMaterialTable"></a><a name="GetPlasticityMaterialTable(SMAIMatMaterialTable_var&amp;)"></a> <dt> o <b>GetPlasticityMaterialTable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlasticityMaterialTable</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialTable_var','SMAIMatMaterialTable_var&amp;')</script> <td><tt>ospPlasticityMaterialTable</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the plasticity material table.
 Multiple row data cannot be inserted unless temperature dependency has been set on the table.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospPlasticityMaterialTable</tt>
   <dd> [out]     The plastic material table.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetPlasticityMaterialTableColumn"></a><a name="GetPlasticityMaterialTableColumn(PlasticityMaterialTableColumn,CATISimTableColumn_var&amp;)"></a> <dt> o <b>GetPlasticityMaterialTableColumn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlasticityMaterialTableColumn</b>(<td><script type="text/javascript"> activateLink('PlasticityMaterialTableColumn','PlasticityMaterialTableColumn')</script> <td><tt>iMaterialTableColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISimTableColumn_var','CATISimTableColumn_var&amp;')</script> <td><tt>ospPlasticityMaterialTableColumn</tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the column object for the plasticity table column.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaterialTableColumn</tt>
   <dd> [in]   The plasticity table column.
 </dd>
    <dt><tt> ospPlasticityMaterialTableColumn</tt>
   <dd> [out]   The table column object. This value will be NULL_var in case the specified column is not found in the table.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetTensionHardeningMaterialTable"></a><a name="GetTensionHardeningMaterialTable(SMAIMatMaterialTable_var&amp;)"></a> <dt> o <b>GetTensionHardeningMaterialTable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTensionHardeningMaterialTable</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialTable_var','SMAIMatMaterialTable_var&amp;')</script> <td><tt>ospTensionHardeningMaterialTable</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the tension hardening material table.
 Multiple row data is supported.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTensionHardeningMaterialTable</tt>
   <dd> [out]   The tension hardening material table.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetTensionHardeningMaterialTableColumn"></a><a name="GetTensionHardeningMaterialTableColumn(TensionHardeningMaterialTableColumn,CATISimTableColumn_var&amp;)"></a> <dt> o <b>GetTensionHardeningMaterialTableColumn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTensionHardeningMaterialTableColumn</b>(<td><script type="text/javascript"> activateLink('TensionHardeningMaterialTableColumn','TensionHardeningMaterialTableColumn')</script> <td><tt>iMaterialTableColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISimTableColumn_var','CATISimTableColumn_var&amp;')</script> <td><tt>ospTensionHardeningMaterialTableColumn</tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the column object for the Tension Hardening table column.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaterialTableColumn</tt>
   <dd> [in]   The Tension Hardening table column.
 </dd>
    <dt><tt> ospTensionHardeningMaterialTableColumn</tt>
   <dd> [out]   The table column object. This value will be NULL_var in case the specified column is not found in the table.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
   <code>S_FALSE</code> if the supplied TableColumn enum is valid but the column does not exist currently or exists currently but is not active. 
   <code>E_INVALIDARG</code> if the supplied TableColumn enum is invalid. 
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CompressionHardeningMaterialTableColumn"> <dt> o <b>CompressionHardeningMaterialTableColumn</b>
<dl>
  <dd>
<pre>
enum <b>CompressionHardeningMaterialTableColumn</b> {
  SigmaC,
  EpsilonC,
  TemperatureC
}
</pre>
 <br><br><b>For Compression Hardening</b>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> SigmaC</tt>
   <dd>   Sigma C. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> EpsilonC</tt>
   <dd>   Epsilon T. Quantity: Real, Units: None
 </dd>
    <dt><tt> TemperatureC</tt>
   <dd>   Temperature (optional). Quantity: TEMPRTRE, Units: Kdeg</dd>
</dl>
</dl>
</dl>
<a name="PlasticityMaterialTableColumn"> <dt> o <b>PlasticityMaterialTableColumn</b>
<dl>
  <dd>
<pre>
enum <b>PlasticityMaterialTableColumn</b> {
  PlasticPoissonsRatio,
  PlasticTemperature
}
</pre>
 Columns in material table 
 <br>The columns in the material table will be:
 <br><br><b>For Plasticity</b>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> PlasticPoissonsRatio</tt>
   <dd>   Plastic Poisson's Ratio. Quantity: Real, Units: None
 </dd>
    <dt><tt> PlasticTemperature</tt>
   <dd>   Temperature (optional). Quantity: TEMPRTRE, Units: Kdeg</dd>
</dl>
</dl>
</dl>
<a name="TensionHardeningMaterialTableColumn"> <dt> o <b>TensionHardeningMaterialTableColumn</b>
<dl>
  <dd>
<pre>
enum <b>TensionHardeningMaterialTableColumn</b> {
  SigmaT,
  EpsilonT,
  TemperatureT
}
</pre>
 <br><br><b>For Tension Hardening</b>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> SigmaT</tt>
   <dd>   Sigma T. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> EpsilonT</tt>
   <dd>   Epsilon T. Quantity: Real, Units: None
 </dd>
    <dt><tt> TemperatureT</tt>
   <dd>   Temperature (optional). Quantity: TEMPRTRE, Units: Kdeg</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMatCastIronPlasticity.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMaterialInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

