<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMaterialItf Interface SMAIMatHyperelasticity</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMaterialItf.htm" href="../SMAMaterialItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMaterialItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMatHyperelasticity"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMaterialItf Interface SMAIMatHyperelasticity</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMatHyperelasticity_37455','SMAIMatHyperelasticity','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMatHyperelasticity</b>
</p>
<p>
<b><i> Interface to access data within a Hyperelasticity material option.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetMaterialTable(SMAIMatMaterialTable_var&amp;)"><b>GetMaterialTable</b></a>(SMAIMatMaterialTable_var&amp;)
<dd>  Retrieves the material table.
 <dt> o 
    <a href="#GetMaterialTableColumn(MaterialTableColumn,CATISimTableColumn_var&amp;)"><b>GetMaterialTableColumn</b></a>(MaterialTableColumn,CATISimTableColumn_var&amp;)
<dd>  Retrieves the column object for the specified table column.
 <dt> o 
    <a href="#GetModuliTimeScale(ModuliTimeScale&amp;)"><b>GetModuliTimeScale</b></a>(ModuliTimeScale&amp;)
<dd>  Retrieves moduli time scale.
 <dt> o 
    <a href="#GetStrainEnergyPotential(StrainEnergyPotential&amp;)"><b>GetStrainEnergyPotential</b></a>(StrainEnergyPotential&amp;)
<dd>  Retrieves the strain energy potential.
 <dt> o 
    <a href="#GetStrainEnergyPotentialOrder(StrainEnergyPotentialOrder&amp;)"><b>GetStrainEnergyPotentialOrder</b></a>(StrainEnergyPotentialOrder&amp;)
<dd>  Retrieves the strain energy potential order.
 <dt> o 
    <a href="#SetModuliTimeScale(ModuliTimeScale&amp;)"><b>SetModuliTimeScale</b></a>(ModuliTimeScale&amp;)
<dd>  Sets moduli time scale.
 <dt> o 
    <a href="#SetStrainEnergyPotential(StrainEnergyPotential&amp;)"><b>SetStrainEnergyPotential</b></a>(StrainEnergyPotential&amp;)
<dd>  Sets the strain energy potential.
 <dt> o 
    <a href="#SetStrainEnergyPotentialOrder(StrainEnergyPotentialOrder&amp;)"><b>SetStrainEnergyPotentialOrder</b></a>(StrainEnergyPotentialOrder&amp;)
<dd>  Sets the strain energy potential order.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#MaterialTableColumn"><b>MaterialTableColumn</b></a>
<dd>  Columns in material table 
 <br>The columns in the material table will be:
 <br><br><b>For Arruda-Boyce</b>
 
 <dt> o 
    <a href="#ModuliTimeScale"><b>ModuliTimeScale</b></a>
<dd>  Defines moduli time scale.
 <dt> o 
    <a href="#StrainEnergyPotential"><b>StrainEnergyPotential</b></a>
<dd>  Defines the strain energy potential.
 <dt> o 
    <a href="#StrainEnergyPotentialOrder"><b>StrainEnergyPotentialOrder</b></a>
<dd>  Defines the strain energy potential order.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetMaterialTable"></a><a name="GetMaterialTable(SMAIMatMaterialTable_var&amp;)"></a> <dt> o <b>GetMaterialTable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaterialTable</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialTable_var','SMAIMatMaterialTable_var&amp;')</script> <td><tt>oMaterialTable</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the material table. It stores the data of Hyperelastic material option.
 Multiple row data is not supported without having temperature dependent data.    
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMaterialTable</tt>
   <dd> [out]   The material table pointer to elastic material option.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetMaterialTableColumn"></a><a name="GetMaterialTableColumn(MaterialTableColumn,CATISimTableColumn_var&amp;)"></a> <dt> o <b>GetMaterialTableColumn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaterialTableColumn</b>(<td><script type="text/javascript"> activateLink('MaterialTableColumn','MaterialTableColumn')</script> <td><tt>iMaterialTableColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISimTableColumn_var','CATISimTableColumn_var&amp;')</script> <td><tt>ospMaterialTableColumn</tt>)<script type="text/javascript"> activateLink('0',' const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the column object for the specified table column.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaterialTableColumn</tt>
   <dd> [in]   The specified table column.
 </dd>
    <dt><tt> ospMaterialTableColumn</tt>
   <dd> [out]   The table column object. This value will be NULL_var in case the specified column is not found in the table.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
   <code>S_FALSE</code> if the supplied TableColumn enum is valid but the column does not exist currently or exists currently but is not active. 
   <code>E_INVALIDARG</code> if the supplied TableColumn enum is invalid. 
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="GetModuliTimeScale"></a><a name="GetModuliTimeScale(ModuliTimeScale&amp;)"></a> <dt> o <b>GetModuliTimeScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetModuliTimeScale</b>(<td><script type="text/javascript"> activateLink('ModuliTimeScale','ModuliTimeScale&amp;')</script> <td><tt>oModuliTimeScale</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves moduli time scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oModuliTimeScale</tt>
   <dd> [out]   Moduli time scale.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetStrainEnergyPotential"></a><a name="GetStrainEnergyPotential(StrainEnergyPotential&amp;)"></a> <dt> o <b>GetStrainEnergyPotential</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStrainEnergyPotential</b>(<td><script type="text/javascript"> activateLink('StrainEnergyPotential','StrainEnergyPotential&amp;')</script> <td><tt>oStrainEnergyPotential</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the strain energy potential.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStrainEnergyPotential</tt>
   <dd> [out]   The strain energy potential.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetStrainEnergyPotentialOrder"></a><a name="GetStrainEnergyPotentialOrder(StrainEnergyPotentialOrder&amp;)"></a> <dt> o <b>GetStrainEnergyPotentialOrder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStrainEnergyPotentialOrder</b>(<td><script type="text/javascript"> activateLink('StrainEnergyPotentialOrder','StrainEnergyPotentialOrder&amp;')</script> <td><tt>oStrainEnergyPotentialOrder</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the strain energy potential order.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStrainEnergyPotentialOrder</tt>
   <dd> [out]   The strain energy potential order.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetModuliTimeScale"></a><a name="SetModuliTimeScale(ModuliTimeScale&amp;)"></a> <dt> o <b>SetModuliTimeScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetModuliTimeScale</b>(<td> const <script type="text/javascript"> activateLink('ModuliTimeScale','ModuliTimeScale&amp;')</script> <td><tt>iModuliTimeScale</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets moduli time scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModuliTimeScale</tt>
   <dd> [in]   Moduli time scale.  
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('SMAIMatHyperelasticity','HyperelasticityModuliTimeScale','SMAIMatHyperelasticity.HyperelasticityModuliTimeScale') </script>
</dl>
</dl>
<a name="SetStrainEnergyPotential"></a><a name="SetStrainEnergyPotential(StrainEnergyPotential&amp;)"></a> <dt> o <b>SetStrainEnergyPotential</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStrainEnergyPotential</b>(<td> const <script type="text/javascript"> activateLink('StrainEnergyPotential','StrainEnergyPotential&amp;')</script> <td><tt>iStrainEnergyPotential</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the strain energy potential.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStrainEnergyPotential</tt>
   <dd> [in]   The strain energy potential.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('SMAIMatHyperelasticity','HyperelasticityStrainEnergyPotential','SMAIMatHyperelasticity.HyperelasticityStrainEnergyPotential') </script>
</dl>
</dl>
<a name="SetStrainEnergyPotentialOrder"></a><a name="SetStrainEnergyPotentialOrder(StrainEnergyPotentialOrder&amp;)"></a> <dt> o <b>SetStrainEnergyPotentialOrder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStrainEnergyPotentialOrder</b>(<td> const <script type="text/javascript"> activateLink('StrainEnergyPotentialOrder','StrainEnergyPotentialOrder&amp;')</script> <td><tt>iStrainEnergyPotentialOrder</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the strain energy potential order.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStrainEnergyPotentialOrder</tt>
   <dd> [in]   The strain energy potential order.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
 
  <dt> <b>See also:</b> 
  <dd> <script type="text/javascript"> activateLinkAnchor('SMAIMatHyperelasticity','HyperelasticityStrainEnergyPotentialOrder','SMAIMatHyperelasticity.HyperelasticityStrainEnergyPotentialOrder') </script>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="MaterialTableColumn"> <dt> o <b>MaterialTableColumn</b>
<dl>
  <dd>
<pre>
enum <b>MaterialTableColumn</b> {
  Mu,
  LambdaM,
  D,
  Beta,
  LamdaM,
  Alpha,
  Mu1,
  Mu2,
  Mu3,
  Mu4,
  Mu5,
  Mu6,
  Alpha1,
  Alpha2,
  Alpha3,
  Alpha4,
  Alpha5,
  Alpha6,
  D1,
  D2,
  D3,
  D4,
  D5,
  D6,
  C10,
  C01,
  C20,
  C11,
  C02,
  C30,
  C21,
  C12,
  C03,
  C40,
  C31,
  C22,
  C13,
  C04,
  C50,
  C41,
  C32,
  C23,
  C14,
  C05,
  C60,
  C51,
  C42,
  C33,
  C24,
  C15,
  C06,
  Temperature
}
</pre>
 Columns in material table 
 <br>The columns in the material table will be:
 <br><br><b>For Arruda-Boyce</b>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> mu</tt>
   <dd>    mu. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> lambda_m</tt>
   <dd>   lambda m. Quantity: Real, Units: None
 </dd>
    <dt><tt> D</tt>
   <dd>   D. Quantity: Real, Units: None
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 <br><br><b>For Neo-Hooke</b>
 </dd>
    <dt><tt> C10</tt>
   <dd>    C10. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> D1</tt>
   <dd>   D1. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 <br><br><b>For Ogden</b>
 <br>For Strain energy potential order N1 to N6
 </dd>
    <dt><tt> mu[n]</tt>
   <dd> The number of columns depends on number of potential order and ranges from minimun 1 to a maximum of 6.
   mu[n]. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> alpha[n]</tt>
   <dd> The number of columns depends on number of potential order and ranges from minimum 1 to a maximum of 6.
   alpha[n]. Quantity: Real, Units: None
 </dd>
    <dt><tt> D[n]</tt>
   <dd> The number of columns depends on number of potential order and ranges from minimum 1 to a maximum of 6.
   D[n]. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 <br><br><b>For Polynomial</b>
 <br>For Strain energy potential order N1 to N6
 </dd>
    <dt><tt> C[i][L-i]</tt>
   <dd> <br> <FONT size=2>&nbsp; n </FONT> &nbsp;&nbsp;&nbsp; <FONT size=2>L</FONT>
 <br> <FONT size=5> &sum; &nbsp;&sum;</FONT><FONT size=3>C[i][L-i]</FONT> the number of columns depends on number of potential order [n] and ranges from minimum 1 to a maximum of 6. 
   C[i][L-i]. Quantity: PRESSURE, Units:
 <br> <FONT size=2>L=1 &nbsp; i=0</FONT>
 <br>  N_m2
 </dd>
    <dt><tt> D[n]</tt>
   <dd> The number of columns depends on number of potential order and ranges from minimum 1 to a maximum of 6.
   D[n]. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 e.g. if energy potential order is N2 number of columns are C10, C20, D1, D2 Temperature are optional.
 <br><br><b>For Reduced Polynomial</b>
 </dd>
    <dt><tt> C[n]0</tt>
   <dd> The number of columns depends on number of potential order[n], ranges from minimum 1 to a maximum of 6.
    C[n]0. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> D[n]</tt>
   <dd> The number of columns depends on number of potential order[n], ranges from minimum 1 to a maximum of 6
    D[n]. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 e.g. if energy potential order is N2 number of columns are C10, C20, D1, D2 Temperature are optional.
 <br><br><b>For Mooney Rivlin</b>
 </dd>
    <dt><tt> C10</tt>
   <dd>    C10. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> C01</tt>
   <dd>   C01. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> D1</tt>
   <dd>   D1. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 <br><br><b>For Van Der Waals</b>
 </dd>
    <dt><tt> mu</tt>
   <dd>    mu. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> lamda_m</tt>
   <dd>   lambda m. Quantity: Real, Units: None
 </dd>
    <dt><tt> alpha</tt>
   <dd>   alpha. Quantity: Real, Units: None
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg
 <br><br><b>For Yeoh</b>
 </dd>
    <dt><tt> C10</tt>
   <dd>    C10. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> C20</tt>
   <dd>    C20. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> C30</tt>
   <dd>    C30. Quantity: PRESSURE, Units: N_m2
 </dd>
    <dt><tt> D1</tt>
   <dd>   D1. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> D2</tt>
   <dd>   D2. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> D3</tt>
   <dd>   D3. Quantity: COMPRESSIBILITY, Units: _Pa
 </dd>
    <dt><tt> Temperature</tt>
   <dd>   (Optional) Temperature. Quantity: TEMPRTRE, Units: Kdeg</dd>
</dl>
</dl>
</dl>
<a name="ModuliTimeScale"> <dt> o <b>ModuliTimeScale</b>
<dl>
  <dd>
<pre>
enum <b>ModuliTimeScale</b> {
  LongTerm,
  Instantaneous
}
</pre>
 Defines moduli time scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> LongTerm</tt>
   <dd> Moduli time scale define the long-term behavior.
 </dd>
    <dt><tt> Instantaneous</tt>
   <dd> Moduli time scale define the instantaneous behavior.</dd>
</dl>
</dl>
</dl>
<a name="StrainEnergyPotential"> <dt> o <b>StrainEnergyPotential</b>
<dl>
  <dd>
<pre>
enum <b>StrainEnergyPotential</b> {
  Arruda_Boyce,
  Neo_Hooke,
  Ogden,
  Polynomial,
  Reduced_Polynomial,
  Mooney_Rivlin,
  Van_Der_Waals,
  Yeoh
}
</pre>
 Defines the strain energy potential.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Arruda_Boyce</tt>
   <dd>   Defines the strain energy potential with Arruda-Boyce Strain Energy Potential.
 </dd>
    <dt><tt> Neo_Hooke</tt>
   <dd>   Defines the strain energy potential with Neo-Hooke Strain Energy Potential.
 </dd>
    <dt><tt> Ogden</tt>
   <dd>   Defines the strain energy potential with Ogden Strain Energy Potential.
 </dd>
    <dt><tt> Polynomial</tt>
   <dd>   Defines the strain energy potential with Polynomial Strain Energy Potential.
 </dd>
    <dt><tt> Reduced_Polynomial</tt>
   <dd>   Defines the strain energy potential with Reduced Polynomial Strain Energy Potential.
 </dd>
    <dt><tt> Mooney_Rivlin</tt>
   <dd>   Defines the strain energy potential with Mooney Rivlin Strain Energy Potential.
 </dd>
    <dt><tt> Van_Der_Waals</tt>
   <dd>   Defines the strain energy potential with Van Der Waals Strain Energy Potential.
 </dd>
    <dt><tt> Yeoh</tt>
   <dd>   Defines the strain energy potential with Yeoh Strain Energy Potential.</dd>
</dl>
</dl>
</dl>
<a name="StrainEnergyPotentialOrder"> <dt> o <b>StrainEnergyPotentialOrder</b>
<dl>
  <dd>
<pre>
enum <b>StrainEnergyPotentialOrder</b> {
  N1,
  N2,
  N3,
  N4,
  N5,
  N6
}
</pre>
 Defines the strain energy potential order.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> N1</tt>
   <dd>   The strain energy potential order is N1.
 </dd>
    <dt><tt> N2</tt>
   <dd>   The strain energy potential order is N2.
 </dd>
    <dt><tt> N3</tt>
   <dd>   The strain energy potential order is N3.
 </dd>
    <dt><tt> N4</tt>
   <dd>   The strain energy potential order is N4.
 </dd>
    <dt><tt> N5</tt>
   <dd>   The strain energy potential order is N5.
 </dd>
    <dt><tt> N6</tt>
   <dd>   The strain energy potential order is N6.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMatHyperelasticity.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMaterialInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

