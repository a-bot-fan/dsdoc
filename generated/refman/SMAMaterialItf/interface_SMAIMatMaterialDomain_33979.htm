<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMaterialItf Interface SMAIMatMaterialDomain</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMaterialItf.htm" href="../SMAMaterialItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMaterialItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMatMaterialDomain"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMaterialItf Interface SMAIMatMaterialDomain</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMatMaterialDomain_33979','SMAIMatMaterialDomain','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMatMaterialDomain</b>
</p>
<p>
<b><i> Interface to manage simulation material domain.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateBehavior(SMAIMatMaterialBehavior_var&amp;)"><b>CreateBehavior</b></a>(SMAIMatMaterialBehavior_var&amp;)
<dd>  Creates a new material behavior.
 <dt> o 
    <a href="#CreateMaterialOption(CATString&amp;,CATBaseUnknown_var&amp;)"><b>CreateMaterialOption</b></a>(CATString&amp;,CATBaseUnknown_var&amp;)
<dd>  Creates a new material option in a simulation domain.
 <dt> o 
    <a href="#DeleteBehavior(SMAIMatMaterialBehavior_var&amp;)"><b>DeleteBehavior</b></a>(SMAIMatMaterialBehavior_var&amp;)
<dd>  Removes a material behavior on a simulation domain.
 <dt> o 
    <a href="#DeleteMaterialOption(CATBaseUnknown_var&amp;)"><b>DeleteMaterialOption</b></a>(CATBaseUnknown_var&amp;)
<dd>  Removes a material option on a simulation domain.
 <dt> o 
    <a href="#DuplicateAndAddMaterialOption(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>DuplicateAndAddMaterialOption</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Duplicates and adds a material option in a simulation domain.
 <dt> o 
    <a href="#GetAllBehaviors(CATLISTV(CATBaseUnknown_var)&amp;)"><b>GetAllBehaviors</b></a>(CATLISTV(CATBaseUnknown_var)&amp;)
<dd>  Retrieves material behaviors on a simulation domain.
 <dt> o 
    <a href="#GetDefaultBehavior(SMAIMatMaterialBehavior_var&amp;)"><b>GetDefaultBehavior</b></a>(SMAIMatMaterialBehavior_var&amp;)
<dd>  Retrieves default material behavior on a simulation domain.
 <dt> o 
    <a href="#GetMaterial(CATIMaterialReference*&amp;)"><b>GetMaterial</b></a>(CATIMaterialReference*&amp;)
<dd>  Retrieves material reference of simulation domain.
 <dt> o 
    <a href="#GetMaterialOptions(CATLISTV(CATBaseUnknown_var)&amp;,CATBoolean)"><b>GetMaterialOptions</b></a>(CATLISTV(CATBaseUnknown_var)&amp;,CATBoolean)
<dd>  Retrieves material options on a simulation domain.
 <dt> o 
    <a href="#SetDefaultBehavior(SMAIMatMaterialBehavior_var&amp;)"><b>SetDefaultBehavior</b></a>(SMAIMatMaterialBehavior_var&amp;)
<dd>  Sets current material behavior as default on the simulation domain.
 <dt> o 
    <a href="#SyncAllBehaviors()"><b>SyncAllBehaviors</b></a>()
<dd>  Synchronises all material behaviors.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateBehavior"></a><a name="CreateBehavior(SMAIMatMaterialBehavior_var&amp;)"></a> <dt> o <b>CreateBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateBehavior</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialBehavior_var','SMAIMatMaterialBehavior_var&amp;')</script> <td><tt>ospMatBehavior</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new material behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ospMatBehavior[out]</tt>
   <dd>     Created material behavior.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="CreateMaterialOption"></a><a name="CreateMaterialOption(CATString&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>CreateMaterialOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateMaterialOption</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ospMatOption</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new material option in a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iType</tt>
   <dd> [in]     Type of the material option.
 <ol>
 <li> SMAMatConductivity for Isotropic Conductivity. The created material option will adhere to SMAIMatConductivity interface.</li>
 <li> SMAMatDensity for Density. The created material option will adhere to SMAIMatDensity interface.</li>
 <li> SMAMatElastic for Elastic. The created material option will adhere to SMAIMatElastic interface.</li>
 <li> SMAMatExpansion for Expansion. The created material option will adhere to SMAIMatExpansion interface.</li>
 <li> SMAMatGasketMembraneElastic for  Gasket Membrane Elastic. The created material option will adhere to SMAIMatGasketMembraneElastic interface.</li>
 <li> SMAMatGasketThicknessBehavior for  Gasket Thickness Behavior. The created material option will adhere to SMAIMatGasketThicknessBehavior interface.</li>
 <li> SMAMatGasketTransverseShearElastic for Gasket Transverse Shear Elastic. The created material option will adhere to SMAIMatGasketTransverseShearElastic interface.</li>
 <li> SMAMatHashinDamage for Hashin Damage. The created material option will adhere to SMAIMatHashinDamage interface.</li>
 <li> SMAMatPlastic for Plastic. The created material option will adhere to SMAIMatPlastic interface.</li>
 <li> SMAMatCastIronPlasticity for Cast Iron Plasticity. The created material option will adhere to SMAIMatCastIronPlasticity interface.</li>
 <li> SMAMatDamping for Damping. The created material option will adhere to SMAIMatDamping interface.</li>
 <li> SMAMatBulkModulus for Bulk Modulus. The created material option will adhere to SMAIMatBulkModulus interface.</li>
 <li> SMAMatSpecificHeat for Specific Heat. The created material option will adhere to SMAIMatSpecificHeat interface.</li>
 <li> SMAMatInelasticHeatFraction for Inelastic Heat Fraction. The created material option will adhere to SMAIMatInelasticHeatFraction interface.</li>
 <li> SMAMatLatentHeat for Latent Heat. The created material option will adhere to SMAIMatLatentHeat interface.</li>
 <li> SMAMatVolumetricDrag for Volumetric Drag. The created material option will adhere to SMAIMatVolumetricDrag interface.</li>
 <li> SMAMatAcousticAbsorption for Acoustic Absorption. The created material option will adhere to SMAIMatAcousticAbsorption interface.</li>
 </ol>
 </dd>
    <dt><tt>  ospMatOption[out]</tt>
   <dd>     Created material option.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="DeleteBehavior"></a><a name="DeleteBehavior(SMAIMatMaterialBehavior_var&amp;)"></a> <dt> o <b>DeleteBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteBehavior</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialBehavior_var','SMAIMatMaterialBehavior_var&amp;')</script> <td><tt>ispMatBehavior</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a material behavior on a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ispMatBehavior</tt>
   <dd> [in]     Material behavior to be removed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="DeleteMaterialOption"></a><a name="DeleteMaterialOption(CATBaseUnknown_var&amp;)"></a> <dt> o <b>DeleteMaterialOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteMaterialOption</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ispMatOption</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a material option on a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ispMatOption</tt>
   <dd> [in]    Material option to be removed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="DuplicateAndAddMaterialOption"></a><a name="DuplicateAndAddMaterialOption(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>DuplicateAndAddMaterialOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DuplicateAndAddMaterialOption</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ispMatOptionSource</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ospMatOptionDest</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Duplicates and adds a material option in a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ispMatOptionSource</tt>
   <dd> [in]      Material option to be duplicated.
 </dd>
    <dt><tt>  ospMatOptionDest</tt>
   <dd> [out]      Duplicated material option.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetAllBehaviors"></a><a name="GetAllBehaviors(CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>GetAllBehaviors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllBehaviors</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oListMatBehavior</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves material behaviors on a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oListMatBehavior</tt>
   <dd> [out]      List of material behaviors
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetDefaultBehavior"></a><a name="GetDefaultBehavior(SMAIMatMaterialBehavior_var&amp;)"></a> <dt> o <b>GetDefaultBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultBehavior</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialBehavior_var','SMAIMatMaterialBehavior_var&amp;')</script> <td><tt>ospMatBehavior</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves default material behavior on a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ospMatBehavior</tt>
   <dd> [out]      Default material behavior
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetMaterial"></a><a name="GetMaterial(CATIMaterialReference*&amp;)"></a> <dt> o <b>GetMaterial</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaterial</b>(<td><script type="text/javascript"> activateLink('CATIMaterialReference','CATIMaterialReference*&amp;')</script> <td><tt>oMatRef</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves material reference of simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oMatRef</tt>
   <dd> [in]      Material reference of simulation domain.
 You have to release the pointer after use.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetMaterialOptions"></a><a name="GetMaterialOptions(CATLISTV(CATBaseUnknown_var)&amp;,CATBoolean)"></a> <dt> o <b>GetMaterialOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaterialOptions</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oOptionList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iIncludeSuboptions</tt><td><tt>=FALSE </tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves material options on a simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oOptionList</tt>
   <dd> [out]    List of material options.
 </dd>
    <dt><tt>  iIncludeSuboptions[in]</tt>
   <dd>    Boolean to Include or exclude suboptions of each option.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetDefaultBehavior"></a><a name="SetDefaultBehavior(SMAIMatMaterialBehavior_var&amp;)"></a> <dt> o <b>SetDefaultBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDefaultBehavior</b>(<td> const <script type="text/javascript"> activateLink('SMAIMatMaterialBehavior_var','SMAIMatMaterialBehavior_var&amp;')</script> <td><tt>ispMatBehavior</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets current material behavior as default on the simulation domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ispMatBehavior[in]</tt>
   <dd>     Material behavior to be set default.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SyncAllBehaviors"></a><a name="SyncAllBehaviors()"></a> <dt> o <b>SyncAllBehaviors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SyncAllBehaviors</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Synchronises all material behaviors. 
 This should be done after modifications to individual material options and behaviors within a material domain are completed and before the material domain is used elsewhere. 
 It is not necessary to sync the material domain after each modification to a material domain or behavior  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMatMaterialDomain.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMaterialInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

