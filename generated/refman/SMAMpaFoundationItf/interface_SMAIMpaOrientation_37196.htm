<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaFoundationItf Interface SMAIMpaOrientation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaFoundationItf.htm" href="../SMAMpaFoundationItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaFoundationItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMpaOrientation"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMpaFoundationItf Interface SMAIMpaOrientation</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMpaOrientation_37196','SMAIMpaOrientation','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMpaOrientation</b>
</p>
<p>
<b><i> Interface to access orientation data within an orientation feature.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAngleOfRotation(double&amp;)"><b>GetAngleOfRotation</b></a>(double&amp;)
<dd>  Retrieves the angle of rotation.
 <dt> o 
    <a href="#GetAxisOfRotation(SMAIMpaOrientation::AxisOfRotation&amp;)"><b>GetAxisOfRotation</b></a>(SMAIMpaOrientation::AxisOfRotation&amp;)
<dd>  Retrieves the axis of rotation.
 <dt> o 
    <a href="#GetAxisSystem(SMAIMpaAxisSystem_var&amp;)"><b>GetAxisSystem</b></a>(SMAIMpaAxisSystem_var&amp;)
<dd>  Retrieves the axis system.
 <dt> o 
    <a href="#GetOrientationFlag(CATBoolean&amp;)"><b>GetOrientationFlag</b></a>(CATBoolean&amp;)
<dd>  Retrieves the flag that determines if the orientation is enabled.
 <dt> o 
    <a href="#SetAngleOfRotation(double)"><b>SetAngleOfRotation</b></a>(double)
<dd>  Sets the angle of rotation.
 <dt> o 
    <a href="#SetAxisOfRotation(SMAIMpaOrientation::AxisOfRotation)"><b>SetAxisOfRotation</b></a>(SMAIMpaOrientation::AxisOfRotation)
<dd>  Sets the axis of rotation.
 <dt> o 
    <a href="#SetOrientationFlag(CATBoolean)"><b>SetOrientationFlag</b></a>(CATBoolean)
<dd>  Sets the flag that determines if the orientation is enabled.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#AxisOfRotation"><b>AxisOfRotation</b></a>
<dd>  The axis about which the feature is rotated.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAngleOfRotation"></a><a name="GetAngleOfRotation(double&amp;)"></a> <dt> o <b>GetAngleOfRotation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleOfRotation</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oAngleRotation</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the angle of rotation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAngleRotation</tt>
   <dd> [out]   The angle of rotation. Quantity: ANGLE, units: Degree
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetAxisOfRotation"></a><a name="GetAxisOfRotation(SMAIMpaOrientation::AxisOfRotation&amp;)"></a> <dt> o <b>GetAxisOfRotation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisOfRotation</b>(<td><script type="text/javascript"> activateLink('SMAIMpaOrientation::AxisOfRotation','SMAIMpaOrientation::AxisOfRotation&amp;')</script> <td><tt>oRotationAxis</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the axis of rotation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRotationAxis</tt>
   <dd> [out]   The axis of rotation.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetAxisSystem"></a><a name="GetAxisSystem(SMAIMpaAxisSystem_var&amp;)"></a> <dt> o <b>GetAxisSystem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisSystem</b>(<td><script type="text/javascript"> activateLink('SMAIMpaAxisSystem_var','SMAIMpaAxisSystem_var&amp;')</script> <td><tt>ospAxisSystem</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the axis system.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospAxisSystem</tt>
   <dd> [out]    The axis system used for the mass.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetOrientationFlag"></a><a name="GetOrientationFlag(CATBoolean&amp;)"></a> <dt> o <b>GetOrientationFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrientationFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oOrientationState</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the flag that determines if the orientation is enabled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientationState</tt>
   <dd> [out]   TRUE: the orientation is enabled.<br/>
   FALSE: the orientation is not enabled.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetAngleOfRotation"></a><a name="SetAngleOfRotation(double)"></a> <dt> o <b>SetAngleOfRotation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleOfRotation</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngleRotation</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the angle of rotation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngleRotation</tt>
   <dd> [in]   The angle of rotation. Quantity: ANGLE, units: Degree
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetAxisOfRotation"></a><a name="SetAxisOfRotation(SMAIMpaOrientation::AxisOfRotation)"></a> <dt> o <b>SetAxisOfRotation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisOfRotation</b>(<td><script type="text/javascript"> activateLink('SMAIMpaOrientation::AxisOfRotation','SMAIMpaOrientation::AxisOfRotation')</script> <td><tt>iRotationAxis</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the axis of rotation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRotationAxis</tt>
   <dd> [in]   The axis of rotation.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetOrientationFlag"></a><a name="SetOrientationFlag(CATBoolean)"></a> <dt> o <b>SetOrientationFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrientationFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrientationFlag</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the flag that determines if the orientation is enabled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientationFlag</tt>
   <dd> [in]   TRUE: the orientation is enabled.<br/>
   FALSE: the orientation is not enabled.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="AxisOfRotation"> <dt> o <b>AxisOfRotation</b>
<dl>
  <dd>
<pre>
enum <b>AxisOfRotation</b> {
  Axis1,
  Axis2,
  Axis3
}
</pre>
 The axis about which the feature is rotated.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Axis1</tt>
   <dd>   The first axis of the axis system.
 </dd>
    <dt><tt> Axis2</tt>
   <dd>   The second axis of the axis system.
 </dd>
    <dt><tt> Axis3</tt>
   <dd>   The third axis of the axis system.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMpaOrientation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMpaFndInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

