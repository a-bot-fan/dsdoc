<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaFoundationItf Interface SMAIMpaHarmonicResponseStep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaFoundationItf.htm" href="../SMAMpaFoundationItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaFoundationItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMpaHarmonicResponseStep"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMpaFoundationItf Interface SMAIMpaHarmonicResponseStep</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMpaHarmonicResponseStep_57649','SMAIMpaHarmonicResponseStep','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMpaHarmonicResponseStep</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"><b>CreateLinearLoadCase</b></a>(SMAIMpaLinearLoadCase_var&amp;)
<dd>  Creates a linear load case.
 <dt> o 
    <a href="#DeleteLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"><b>DeleteLinearLoadCase</b></a>(SMAIMpaLinearLoadCase_var&amp;)
<dd>  Deletes the specified linear load case.
 <dt> o 
    <a href="#GetIntervalType(IntervalType&amp;)"><b>GetIntervalType</b></a>(IntervalType&amp;)
<dd>  Retrieves the interval type.
 <dt> o 
    <a href="#GetLinearLoadCases(CATListValCATBaseUnknown_var&amp;)"><b>GetLinearLoadCases</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the list of all linear load cases.
 <dt> o 
    <a href="#GetProjectionType(ProjectionType&amp;)"><b>GetProjectionType</b></a>(ProjectionType&amp;)
<dd>  Retrieves the projection type.
 <dt> o 
    <a href="#GetScale(ScaleType&amp;)"><b>GetScale</b></a>(ScaleType&amp;)
<dd>  Retrieves the scale type.
 <dt> o 
    <a href="#GetStructuralMaterialDampingFlag(CATBoolean&amp;)"><b>GetStructuralMaterialDampingFlag</b></a>(CATBoolean&amp;)
<dd>  Retrieves the flag that determines if the structural material damping option is used.
 <dt> o 
    <a href="#GetTable(CATISimTable_var&amp;)"><b>GetTable</b></a>(CATISimTable_var&amp;)
<dd>  Retrieves the table that determines the hamornic response step behavior.
 <dt> o 
    <a href="#GetTableColumn(TableColumn,CATISimTableColumn_var&amp;)"><b>GetTableColumn</b></a>(TableColumn,CATISimTableColumn_var&amp;)
<dd>  Retrieves a specific column of the table that determines the hamornic response step behavior.
 <dt> o 
    <a href="#GetViscousMaterialDampingFlag(CATBoolean&amp;)"><b>GetViscousMaterialDampingFlag</b></a>(CATBoolean&amp;)
<dd>  Retrieves the flag that determines if the viscous material damping option is used.
 <dt> o 
    <a href="#SetIntervalType(IntervalType)"><b>SetIntervalType</b></a>(IntervalType)
<dd>  Sets the interval type.
 <dt> o 
    <a href="#SetProjectionType(ProjectionType)"><b>SetProjectionType</b></a>(ProjectionType)
<dd>  Sets the projection type.
 <dt> o 
    <a href="#SetScale(ScaleType)"><b>SetScale</b></a>(ScaleType)
<dd>  Sets the scale type.
 <dt> o 
    <a href="#SetStructuralMaterialDampingFlag(CATBoolean&amp;)"><b>SetStructuralMaterialDampingFlag</b></a>(CATBoolean&amp;)
<dd>  Sets the flag that determines if the structural material damping option is used.
 <dt> o 
    <a href="#SetViscousMaterialDampingFlag(CATBoolean&amp;)"><b>SetViscousMaterialDampingFlag</b></a>(CATBoolean&amp;)
<dd>  Sets the flag that determines if the viscous material damping option is used.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#IntervalType"><b>IntervalType</b></a>
<dd>  The interval type.
 <dt> o 
    <a href="#ProjectionType"><b>ProjectionType</b></a>
<dd>  The projection type.
 <dt> o 
    <a href="#ScaleType"><b>ScaleType</b></a>
<dd>  The scale type.
 <dt> o 
    <a href="#TableColumn"><b>TableColumn</b></a>
<dd>  The columns of the table that determines the hamornic response step behavior.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateLinearLoadCase"></a><a name="CreateLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"></a> <dt> o <b>CreateLinearLoadCase</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateLinearLoadCase</b>(<td><script type="text/javascript"> activateLink('SMAIMpaLinearLoadCase_var','SMAIMpaLinearLoadCase_var&amp;')</script> <td><tt>ospLoadCase</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a linear load case.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospLoadCase</tt>
   <dd> [out]    The created linear load case.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="DeleteLinearLoadCase"></a><a name="DeleteLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"></a> <dt> o <b>DeleteLinearLoadCase</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteLinearLoadCase</b>(<td><script type="text/javascript"> activateLink('SMAIMpaLinearLoadCase_var','SMAIMpaLinearLoadCase_var&amp;')</script> <td><tt>ispLoadCase</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes the specified linear load case.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispLoadCase</tt>
   <dd> [in]    The deleted linear load case.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetIntervalType"></a><a name="GetIntervalType(IntervalType&amp;)"></a> <dt> o <b>GetIntervalType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntervalType</b>(<td><script type="text/javascript"> activateLink('IntervalType','IntervalType&amp;')</script> <td><tt>oIntervalType</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the interval type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIntervalType</tt>
   <dd> [out]     The interval type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetLinearLoadCases"></a><a name="GetLinearLoadCases(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetLinearLoadCases</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLinearLoadCases</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>ospLoadCases</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of all linear load cases.
 Each of the objects returned will adhere to SMAIMpaLinearLoadCase interface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospLoadCases</tt>
   <dd> [out]    The list of all linear load cases.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetProjectionType"></a><a name="GetProjectionType(ProjectionType&amp;)"></a> <dt> o <b>GetProjectionType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProjectionType</b>(<td><script type="text/javascript"> activateLink('ProjectionType','ProjectionType&amp;')</script> <td><tt>oProjectionType</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the projection type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProjectionType</tt>
   <dd> [out]     The projection type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetScale"></a><a name="GetScale(ScaleType&amp;)"></a> <dt> o <b>GetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScale</b>(<td><script type="text/javascript"> activateLink('ScaleType','ScaleType&amp;')</script> <td><tt>oScale</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the scale type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oScale</tt>
   <dd> [out]     The scale type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetStructuralMaterialDampingFlag"></a><a name="GetStructuralMaterialDampingFlag(CATBoolean&amp;)"></a> <dt> o <b>GetStructuralMaterialDampingFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStructuralMaterialDampingFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oStructuralMaterialDampingFlag</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the flag that determines if the structural material damping option is used.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStructuralMaterialDampingFlag</tt>
   <dd> [out]     TRUE : the structural material damping option is used.
    FALSE : the structural material damping option is not used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetTable"></a><a name="GetTable(CATISimTable_var&amp;)"></a> <dt> o <b>GetTable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTable</b>(<td><script type="text/javascript"> activateLink('CATISimTable_var','CATISimTable_var&amp;')</script> <td><tt>ospTable</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the table that determines the hamornic response step behavior.
 <br>The columns in the hamornic response step table will be:
 <br>For FrequencyIncrement interval type:
 <ol>
 <li> Lower values. Quantity: FREQUENCY, Units: Hz
 <li> Upper values. Quantity: FREQUENCY, Units: Hz
 <li> Increment values. Quantity: FREQUENCY, Units: Hz
 </ol>
 <br>For EigenFrequency interval type:
 <ol>
 <li> Lower values. Quantity: FREQUENCY, Units: Hz
 <li> Upper values. Quantity: FREQUENCY, Units: Hz
 <li> Number of Points values.
 <li> Bias values.
 <li> Scale Factor values.
 <br>For DirectRange interval type:
 <ol>
 <li> Lower values. Quantity: FREQUENCY, Units: Hz
 <li> Upper values. Quantity: FREQUENCY, Units: Hz
 <li> Number of Points values.
 <li> Bias values.
 <br>For FrequencySpread interval type:
 <ol>
 <li> Lower values. Quantity: FREQUENCY, Units: Hz
 <li> Upper values. Quantity: FREQUENCY, Units: Hz
 <li> Number of Points values.
 <li> Scale Factor values.
 <li> Spread values.
 </ol> 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospTable</tt>
   <dd> [out]    The table that determines the hamornic response step behavior.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetTableColumn"></a><a name="GetTableColumn(TableColumn,CATISimTableColumn_var&amp;)"></a> <dt> o <b>GetTableColumn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTableColumn</b>(<td><script type="text/javascript"> activateLink('TableColumn','TableColumn')</script> <td><tt>iTableColumnName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISimTableColumn_var','CATISimTableColumn_var&amp;')</script> <td><tt>ospTableColumn</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a specific column of the table that determines the hamornic response step behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTableColumnName</tt>
   <dd> [in]    The table column name.
 </dd>
    <dt><tt> ospTableColumn</tt>
   <dd> [out]    The table column.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
    <code>S_FALSE</code> if the supplied TableColumn enum is valid but the column does not exist currently.
    <code>E_INVALIDARG</code> if the supplied TableColumn enum is invalid. 
    <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="GetViscousMaterialDampingFlag"></a><a name="GetViscousMaterialDampingFlag(CATBoolean&amp;)"></a> <dt> o <b>GetViscousMaterialDampingFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetViscousMaterialDampingFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oViscousMaterialDampingFlag</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the flag that determines if the viscous material damping option is used.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oViscousMaterialDampingFlag</tt>
   <dd> [out]     TRUE : the viscous material damping option is used.
    FALSE : the viscous material damping option is not used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetIntervalType"></a><a name="SetIntervalType(IntervalType)"></a> <dt> o <b>SetIntervalType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetIntervalType</b>(<td><script type="text/javascript"> activateLink('IntervalType','IntervalType')</script> <td><tt>iIntervalType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the interval type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntervalType</tt>
   <dd> [in]     The interval type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetProjectionType"></a><a name="SetProjectionType(ProjectionType)"></a> <dt> o <b>SetProjectionType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProjectionType</b>(<td><script type="text/javascript"> activateLink('ProjectionType','ProjectionType')</script> <td><tt>iProjectionType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the projection type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProjectionType</tt>
   <dd> [in]     The projection type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetScale"></a><a name="SetScale(ScaleType)"></a> <dt> o <b>SetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetScale</b>(<td><script type="text/javascript"> activateLink('ScaleType','ScaleType')</script> <td><tt>iScale</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the scale type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScale</tt>
   <dd> [in]     The scale type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetStructuralMaterialDampingFlag"></a><a name="SetStructuralMaterialDampingFlag(CATBoolean&amp;)"></a> <dt> o <b>SetStructuralMaterialDampingFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStructuralMaterialDampingFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iStructuralMaterialDampingFlag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the flag that determines if the structural material damping option is used.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStructuralMaterialDampingFlag</tt>
   <dd> [in]     TRUE : the structural material damping option is used.
    FALSE : the structural material damping option is not used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetViscousMaterialDampingFlag"></a><a name="SetViscousMaterialDampingFlag(CATBoolean&amp;)"></a> <dt> o <b>SetViscousMaterialDampingFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetViscousMaterialDampingFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>iViscousMaterialDampingFlag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the flag that determines if the viscous material damping option is used.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViscousMaterialDampingFlag</tt>
   <dd> [in]     TRUE : the viscous material damping option is used.
    FALSE : the viscous material damping option is not used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="IntervalType"> <dt> o <b>IntervalType</b>
<dl>
  <dd>
<pre>
enum <b>IntervalType</b> {
  FrequencyIncrement,
  Eigenfrequency,
  DirectRange,
  FrequencySpread
}
</pre>
 The interval type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FrequencyIncrement</tt>
   <dd>    Specify the fraction of critical damping for a particular frequency range.
 </dd>
    <dt><tt> Eigenfrequency</tt>
   <dd>    A general damping technique that provides a convenient way to damp lower (mass-dependent) and higher (stiffness-dependent) frequency range behavior.
 </dd>
    <dt><tt> DirectRange</tt>
   <dd>    Define damping that is proportional to the internal forces but opposite in direction to the velocity.
 </dd>
    <dt><tt> FrequencySpread</tt>
   <dd>    Define damping that is proportional to the internal forces but opposite in direction to the velocity.</dd>
</dl>
</dl>
</dl>
<a name="ProjectionType"> <dt> o <b>ProjectionType</b>
<dl>
  <dd>
<pre>
enum <b>ProjectionType</b> {
  None,
  AllFrequency,
  CenterFrequencies,
  RangeValues
}
</pre>
 The projection type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> None</tt>
   <dd>    Specify the fraction of critical damping for a particular frequency range.
 </dd>
    <dt><tt> AllFrequency</tt>
   <dd>    A general damping technique that provides a convenient way to damp lower (mass-dependent) and higher (stiffness-dependent) frequency range behavior.
 </dd>
    <dt><tt> CenterFrequencies</tt>
   <dd>    Define damping that is proportional to the internal forces but opposite in direction to the velocity.
 </dd>
    <dt><tt> RangeValues</tt>
   <dd>    Define damping that is proportional to the internal forces but opposite in direction to the velocity.</dd>
</dl>
</dl>
</dl>
<a name="ScaleType"> <dt> o <b>ScaleType</b>
<dl>
  <dd>
<pre>
enum <b>ScaleType</b> {
  Logarithmic,
  Linear
}
</pre>
 The scale type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Logarithmic</tt>
   <dd>    Specify the fraction of critical damping for a particular frequency range.
 </dd>
    <dt><tt> Linear</tt>
   <dd>    A general damping technique that provides a convenient way to damp lower (mass-dependent) and higher (stiffness-dependent) frequency range behavior.</dd>
</dl>
</dl>
</dl>
<a name="TableColumn"> <dt> o <b>TableColumn</b>
<dl>
  <dd>
<pre>
enum <b>TableColumn</b> {
  Lower,
  Upper,
  Increment,
  NumberOfPoints,
  Bias,
  ScaleFactor,
  Spread
}
</pre>
 The columns of the table that determines the hamornic response step behavior.
 <br>The columns in the connector hamornic response step table will be:
 <br>For FrequencyIncrement interval type:
 <ol>
 <li> Lower. Quantity: FREQUENCY, Units: Hz
 <li> Upper. Quantity: FREQUENCY, Units: Hz
 <li> Increment. Quantity: FREQUENCY, Units: Hz
 </ol>
 <br>For EigenFrequency interval type:
 <ol>
 <li> Lower. Quantity: FREQUENCY, Units: Hz
 <li> Upper. Quantity: FREQUENCY, Units: Hz
 <li> NumberOfPoints.
 <li> Bias.
 <li> ScaleFactor.
 <br>For DirectRange interval type:
 <ol>
 <li> Lower. Quantity: FREQUENCY, Units: Hz
 <li> Upper. Quantity: FREQUENCY, Units: Hz
 <li> NumberOfPoints.
 <li> Bias.
 <br>For FrequencySpread interval type:
 <ol>
 <li> Lower. Quantity: FREQUENCY, Units: Hz
 <li> Upper. Quantity: FREQUENCY, Units: Hz
 <li> NumberOfPoints.
 <li> ScaleFactor.
 <li> Spread.
 </ol>
</dl>
<hr>
 This object is included in the file: <b>SMAIMpaHarmonicResponseStep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMpaFndInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

