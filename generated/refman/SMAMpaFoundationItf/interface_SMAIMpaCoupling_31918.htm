<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaFoundationItf Interface SMAIMpaCoupling</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaFoundationItf.htm" href="../SMAMpaFoundationItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaFoundationItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMpaCoupling"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMpaFoundationItf Interface SMAIMpaCoupling</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMpaCoupling_31918','SMAIMpaCoupling','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMpaCoupling</b>
</p>
<p>
<b><i> Interface to access data within a coupling MCX property.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetConnectorSection(SMAIMpaConnectorSection_var&amp;)"><b>GetConnectorSection</b></a>(SMAIMpaConnectorSection_var&amp;)
<dd>  Retrieves the connector section.
 <dt> o 
    <a href="#GetFirstSupportCouplingType(CouplingType&amp;)"><b>GetFirstSupportCouplingType</b></a>(CouplingType&amp;)
<dd>  Retrieves the first support coupling type.
 <dt> o 
    <a href="#GetSecondSupportCouplingType(CouplingType&amp;)"><b>GetSecondSupportCouplingType</b></a>(CouplingType&amp;)
<dd>  Retrieves the second support coupling type.
 <dt> o 
    <a href="#GetSpringType(SMAMpaSpringType&amp;)"><b>GetSpringType</b></a>(SMAMpaSpringType&amp;)
<dd>  Retrieves the SMAMpaSpringType type.
 <dt> o 
    <a href="#GetSupport(CATISimLinkAccess_var&amp;)"><b>GetSupport</b></a>(CATISimLinkAccess_var&amp;)
<dd>  Retrieves the supports.
 <dt> o 
    <a href="#GetUseSpringFlag(CATBoolean&amp;)"><b>GetUseSpringFlag</b></a>(CATBoolean&amp;)
<dd>  Retrieves the flag that determines if a spring is used to define the coupling behavior.
 <dt> o 
    <a href="#SetFirstSupportCouplingType(CouplingType)"><b>SetFirstSupportCouplingType</b></a>(CouplingType)
<dd>  Sets the first support coupling type.
 <dt> o 
    <a href="#SetSecondSupportCouplingType(CouplingType)"><b>SetSecondSupportCouplingType</b></a>(CouplingType)
<dd>  Sets the second support coupling type.
 <dt> o 
    <a href="#SetSpringType(SMAMpaSpringType)"><b>SetSpringType</b></a>(SMAMpaSpringType)
<dd>  Sets the SMAMpaSpringType type.
 <dt> o 
    <a href="#SetUseSpringFlag(CATBoolean)"><b>SetUseSpringFlag</b></a>(CATBoolean)
<dd>  Sets the flag that determines if a spring is used to define the coupling behavior.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CouplingType"><b>CouplingType</b></a>
<dd>  The type of coupling.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetConnectorSection"></a><a name="GetConnectorSection(SMAIMpaConnectorSection_var&amp;)"></a> <dt> o <b>GetConnectorSection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConnectorSection</b>(<td><script type="text/javascript"> activateLink('SMAIMpaConnectorSection_var','SMAIMpaConnectorSection_var&amp;')</script> <td><tt>ospConnectorSection</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the connector section.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospConnectorSection</tt>
   <dd> [out]    The connector section.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetFirstSupportCouplingType"></a><a name="GetFirstSupportCouplingType(CouplingType&amp;)"></a> <dt> o <b>GetFirstSupportCouplingType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstSupportCouplingType</b>(<td><script type="text/javascript"> activateLink('CouplingType','CouplingType&amp;')</script> <td><tt>oCouplingType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the first support coupling type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoupling</tt>
   <dd> [out]    The type of first support coupling.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetSecondSupportCouplingType"></a><a name="GetSecondSupportCouplingType(CouplingType&amp;)"></a> <dt> o <b>GetSecondSupportCouplingType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondSupportCouplingType</b>(<td><script type="text/javascript"> activateLink('CouplingType','CouplingType&amp;')</script> <td><tt>oCouplingType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the second support coupling type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoupling</tt>
   <dd> [out]    The type of second support coupling.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetSpringType"></a><a name="GetSpringType(SMAMpaSpringType&amp;)"></a> <dt> o <b>GetSpringType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSpringType</b>(<td><script type="text/javascript"> activateLink('SMAMpaSpringType','SMAMpaSpringType&amp;')</script> <td><tt>oSpringType</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the SMAMpaSpringType type. 
 Applicable when SetUseSpringFlag is set to TRUE
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSpringType</tt>
   <dd> [out]    The type of the SMAMpaSpringType.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISimLinkAccess_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATISimLinkAccess_var','CATISimLinkAccess_var&amp;')</script> <td><tt>ospSupports</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the supports.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospSupports</tt>
   <dd> [out]    The supports.<br/>
    Use the "PRD1" or "PRD2" keywords as attribute name of the returned object to manage the firsts or the seconds support links.<br/>
    To connect the coupling to ground, no links must be defined on the second support.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetUseSpringFlag"></a><a name="GetUseSpringFlag(CATBoolean&amp;)"></a> <dt> o <b>GetUseSpringFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUseSpringFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oUseSpring</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the flag that determines if a spring is used to define the coupling behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUseSpring</tt>
   <dd> [out]    TRUE: a spring is used to define the coupling behavior.<br/>
    FALSE: do not use spring to define the coupling behavior.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetFirstSupportCouplingType"></a><a name="SetFirstSupportCouplingType(CouplingType)"></a> <dt> o <b>SetFirstSupportCouplingType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstSupportCouplingType</b>(<td><script type="text/javascript"> activateLink('CouplingType','CouplingType')</script> <td><tt>iCouplingType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first support coupling type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCouplingType</tt>
   <dd> [in]    The type of first support coupling.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetSecondSupportCouplingType"></a><a name="SetSecondSupportCouplingType(CouplingType)"></a> <dt> o <b>SetSecondSupportCouplingType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondSupportCouplingType</b>(<td><script type="text/javascript"> activateLink('CouplingType','CouplingType')</script> <td><tt>iCouplingType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second support coupling type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCouplingType</tt>
   <dd> [in]    The type of second support coupling.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetSpringType"></a><a name="SetSpringType(SMAMpaSpringType)"></a> <dt> o <b>SetSpringType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSpringType</b>(<td><script type="text/javascript"> activateLink('SMAMpaSpringType','SMAMpaSpringType')</script> <td><tt>iSpringType</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the SMAMpaSpringType type.<br/>
 Applicable when SetUseSpringFlag is set to TRUE.
 Note that when the SMAMpaSpringType is changed, all individual connector elasticity data are reset. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpringType</tt>
   <dd> [in]    The type of the SMAMpaSpringType.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetUseSpringFlag"></a><a name="SetUseSpringFlag(CATBoolean)"></a> <dt> o <b>SetUseSpringFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetUseSpringFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iUseSpring</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the flag that determines if a spring is used to define the coupling behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUseSpring</tt>
   <dd> [in]    TRUE: a spring is used to define the coupling behavior.<br/>
    FALSE: do not use spring to define the coupling behavior.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CouplingType"> <dt> o <b>CouplingType</b>
<dl>
  <dd>
<pre>
enum <b>CouplingType</b> {
  Kinematic,
  Distributing
}
</pre>
 The type of coupling.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Kinematic</tt>
   <dd>    Constraint is applied to user-specified degrees of freedom at the coupling nodes with respect to the global or a local coordinate system. 
 </dd>
    <dt><tt> Distributing</tt>
   <dd>    Constraint is enforced in an average sense in a way that enables control of the transmission of loads through weight factors at the coupling nodes.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMpaCoupling.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMpaFndInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

