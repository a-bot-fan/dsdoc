<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaFoundationItf Interface SMAIMpaContinuumShellSection</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaFoundationItf.htm" href="../SMAMpaFoundationItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaFoundationItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMpaContinuumShellSection"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMpaFoundationItf Interface SMAIMpaContinuumShellSection</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMpaContinuumShellSection_60477','SMAIMpaContinuumShellSection','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMpaContinuumShellSection</b>
</p>
<p>
<b><i> Interface to access data within a continuum shell section.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetIntegrationScheme(SMAIMpaShellSection::IntegrationScheme&amp;)"><b>GetIntegrationScheme</b></a>(SMAIMpaShellSection::IntegrationScheme&amp;)
<dd>  Retrieves the integration scheme.
 <dt> o 
    <a href="#GetMaterialBehavior(SMAIMatMaterialBehavior_var&amp;)"><b>GetMaterialBehavior</b></a>(SMAIMatMaterialBehavior_var&amp;)
<dd>  Retrieves the material behavior.
 <dt> o 
    <a href="#GetMaterialBehaviorByName(CATUnicodeString&amp;)"><b>GetMaterialBehaviorByName</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the material behavior.
 <dt> o 
    <a href="#GetNumIntPoints(int&amp;)"><b>GetNumIntPoints</b></a>(int&amp;)
<dd>  Retrieves the number of integration points.
 <dt> o 
    <a href="#GetOrientation(SMAIMpaOrientation_var&amp;)"><b>GetOrientation</b></a>(SMAIMpaOrientation_var&amp;)
<dd>  Retrieves the orientation.
 <dt> o 
    <a href="#GetPoissonMethod(SMAIMpaShellSection::PoissonMethod&amp;)"><b>GetPoissonMethod</b></a>(SMAIMpaShellSection::PoissonMethod&amp;)
<dd>  Retrieves the method for Poisson's ratio.
 <dt> o 
    <a href="#GetPoissonValue(double&amp;)"><b>GetPoissonValue</b></a>(double&amp;)
<dd>  Retrieves the value of the Poisson's ratio.
 <dt> o 
    <a href="#GetPreIntegrationFlag(CATBoolean&amp;)"><b>GetPreIntegrationFlag</b></a>(CATBoolean&amp;)
<dd>  Retrieves the flag that determines if the continuum shell section is pre-integrated.
 <dt> o 
    <a href="#GetSolidsAtJunctionFlag(CATBoolean&amp;)"><b>GetSolidsAtJunctionFlag</b></a>(CATBoolean&amp;)
<dd>  Retrieves the flag that determines if the solid section will be assigned to junctions elements of inflation mesh.
 <dt> o 
    <a href="#GetSupport(CATISimLinkAccess_var&amp;)"><b>GetSupport</b></a>(CATISimLinkAccess_var&amp;)
<dd>  Retrieves the support.
 <dt> o 
    <a href="#SetIntegrationScheme(SMAIMpaShellSection::IntegrationScheme)"><b>SetIntegrationScheme</b></a>(SMAIMpaShellSection::IntegrationScheme)
<dd>  Sets the integration scheme.
 <dt> o 
    <a href="#SetMaterialBehavior(SMAIMatMaterialBehavior_var&amp;)"><b>SetMaterialBehavior</b></a>(SMAIMatMaterialBehavior_var&amp;)
<dd>  Sets the material behavior.
 <dt> o 
    <a href="#SetMaterialBehaviorByName(CATUnicodeString&amp;)"><b>SetMaterialBehaviorByName</b></a>(CATUnicodeString&amp;)
<dd>  Sets the material behavior.
 <dt> o 
    <a href="#SetNumIntPoints(int)"><b>SetNumIntPoints</b></a>(int)
<dd>  Sets the number of integration points.
 <dt> o 
    <a href="#SetPoissonMethod(SMAIMpaShellSection::PoissonMethod)"><b>SetPoissonMethod</b></a>(SMAIMpaShellSection::PoissonMethod)
<dd>  Sets the method for Poisson's ratio.
 <dt> o 
    <a href="#SetPoissonValue(double)"><b>SetPoissonValue</b></a>(double)
<dd>  Sets the value of Poisson's ratio.
 <dt> o 
    <a href="#SetPreIntegrationFlag(CATBoolean)"><b>SetPreIntegrationFlag</b></a>(CATBoolean)
<dd>  Sets the flag that determines if the continuum shell section is pre-integrated.
 <dt> o 
    <a href="#SetSolidsAtJunctionFlag(CATBoolean)"><b>SetSolidsAtJunctionFlag</b></a>(CATBoolean)
<dd>  Sets the flag that determines if the solid section will be assigned to junctions elements of inflation mesh.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetIntegrationScheme"></a><a name="GetIntegrationScheme(SMAIMpaShellSection::IntegrationScheme&amp;)"></a> <dt> o <b>GetIntegrationScheme</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntegrationScheme</b>(<td><script type="text/javascript"> activateLink('SMAIMpaShellSection::IntegrationScheme','SMAIMpaShellSection::IntegrationScheme&amp;')</script> <td><tt>oIntegrateScheme</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the integration scheme.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oIntegrateScheme</tt>
   <dd> [out]    The integration scheme used for the section.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetMaterialBehavior"></a><a name="GetMaterialBehavior(SMAIMatMaterialBehavior_var&amp;)"></a> <dt> o <b>GetMaterialBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaterialBehavior</b>(<td><script type="text/javascript"> activateLink('SMAIMatMaterialBehavior_var','SMAIMatMaterialBehavior_var&amp;')</script> <td><tt>ospMaterialBehavior</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the material behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ospMaterialBehavior</tt>
   <dd> [out]    The material behavior.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetMaterialBehaviorByName"></a><a name="GetMaterialBehaviorByName(CATUnicodeString&amp;)"></a> <dt> o <b>GetMaterialBehaviorByName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaterialBehaviorByName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oBehaviorName</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the material behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBehaviorName</tt>
   <dd> [out]    The simulation material behavior by name.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetNumIntPoints"></a><a name="GetNumIntPoints(int&amp;)"></a> <dt> o <b>GetNumIntPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNumIntPoints</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumberIntegrationPoints</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of integration points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oNumberIntegrationPoints</tt>
   <dd> [out]    Number of integration points.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(SMAIMpaOrientation_var&amp;)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrientation</b>(<td><script type="text/javascript"> activateLink('SMAIMpaOrientation_var','SMAIMpaOrientation_var&amp;')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oOrientation</tt>
   <dd> [out]    The orientation used for the section.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetPoissonMethod"></a><a name="GetPoissonMethod(SMAIMpaShellSection::PoissonMethod&amp;)"></a> <dt> o <b>GetPoissonMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPoissonMethod</b>(<td><script type="text/javascript"> activateLink('SMAIMpaShellSection::PoissonMethod','SMAIMpaShellSection::PoissonMethod&amp;')</script> <td><tt>oPoissonMethod</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the method for Poisson's ratio.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oPoissonMethod</tt>
   <dd> [out]    Poisson method used for the section.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetPoissonValue"></a><a name="GetPoissonValue(double&amp;)"></a> <dt> o <b>GetPoissonValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPoissonValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oPoissonValue</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the value of the Poisson's ratio.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oPoissonValue</tt>
   <dd> [out]    Poisson's ratio used for the section. Quantity: Real, units: None
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetPreIntegrationFlag"></a><a name="GetPreIntegrationFlag(CATBoolean&amp;)"></a> <dt> o <b>GetPreIntegrationFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPreIntegrationFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oPreIntegrate</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the flag that determines if the continuum shell section is pre-integrated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oPreIntegrate</tt>
   <dd> [out]    TRUE: the continuum shell section is pre-integrated.<br/>
    FALSE: the continuum shell section is not pre-integrated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetSolidsAtJunctionFlag"></a><a name="GetSolidsAtJunctionFlag(CATBoolean&amp;)"></a> <dt> o <b>GetSolidsAtJunctionFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSolidsAtJunctionFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oSolidsAtJunction</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the flag that determines if the solid section will be assigned to junctions elements of inflation mesh.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oSolidsAtJunction</tt>
   <dd> [out]    TRUE: solid section will be assigned to junctions elements of inflation mesh.<br/>
    FALSE: solid section will not be assigned to junctions elements of inflation mesh.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISimLinkAccess_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATISimLinkAccess_var','CATISimLinkAccess_var&amp;')</script> <td><tt>ospSupport</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the support.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  ospSupport</tt>
   <dd> [out]    The support of the section.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetIntegrationScheme"></a><a name="SetIntegrationScheme(SMAIMpaShellSection::IntegrationScheme)"></a> <dt> o <b>SetIntegrationScheme</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetIntegrationScheme</b>(<td><script type="text/javascript"> activateLink('SMAIMpaShellSection::IntegrationScheme','SMAIMpaShellSection::IntegrationScheme')</script> <td><tt>iIntegrateScheme</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the integration scheme.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iIntegrateScheme</tt>
   <dd> [in]    The integration scheme.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetMaterialBehavior"></a><a name="SetMaterialBehavior(SMAIMatMaterialBehavior_var&amp;)"></a> <dt> o <b>SetMaterialBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMaterialBehavior</b>(<td> const <script type="text/javascript"> activateLink('SMAIMatMaterialBehavior_var','SMAIMatMaterialBehavior_var&amp;')</script> <td><tt>ispMaterialBehavior</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the material behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispMaterialBehavior</tt>
   <dd> [in]    The material behavior.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetMaterialBehaviorByName"></a><a name="SetMaterialBehaviorByName(CATUnicodeString&amp;)"></a> <dt> o <b>SetMaterialBehaviorByName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMaterialBehaviorByName</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBehaviorName</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the material behavior.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iBehaviorName</tt>
   <dd> [in]    The simulation material behavior by name.
    Default behavior is set if the specified behavior is not found.
    If multiple behaviors have the same alias, the first one found is selected.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetNumIntPoints"></a><a name="SetNumIntPoints(int)"></a> <dt> o <b>SetNumIntPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetNumIntPoints</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumberIntegrationPoints</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the number of integration points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iNumberIntegrationPoints</tt>
   <dd> [in]    Number of integration points.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetPoissonMethod"></a><a name="SetPoissonMethod(SMAIMpaShellSection::PoissonMethod)"></a> <dt> o <b>SetPoissonMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPoissonMethod</b>(<td><script type="text/javascript"> activateLink('SMAIMpaShellSection::PoissonMethod','SMAIMpaShellSection::PoissonMethod')</script> <td><tt>iPoissonMethod</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the method for Poisson's ratio.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPoissonMethod[in]</tt>
   <dd>    Poisson method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetPoissonValue"></a><a name="SetPoissonValue(double)"></a> <dt> o <b>SetPoissonValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPoissonValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPoissonValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of Poisson's ratio.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPoissonValue[in]</tt>
   <dd>    Poisson's ratio value. Quantity: Real, units: None
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetPreIntegrationFlag"></a><a name="SetPreIntegrationFlag(CATBoolean)"></a> <dt> o <b>SetPreIntegrationFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPreIntegrationFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPreIntegrate</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the flag that determines if the continuum shell section is pre-integrated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iPreIntegrate</tt>
   <dd> [in]    TRUE: the continuum shell section is pre-integrated.<br/>
    FALSE: the continuum shell section is not pre-integrated.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetSolidsAtJunctionFlag"></a><a name="SetSolidsAtJunctionFlag(CATBoolean)"></a> <dt> o <b>SetSolidsAtJunctionFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSolidsAtJunctionFlag</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSolidsAtJunction</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the flag that determines if the solid section will be assigned to junctions elements of inflation mesh.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iSolidsAtJunction</tt>
   <dd> [in]    TRUE: Solid section will be assigned to junctions elements of inflation mesh.<br/>
    FALSE: Solid section will not be assigned to junctions elements of inflation mesh.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if successful.
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMpaContinuumShellSection.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMpaFndInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

