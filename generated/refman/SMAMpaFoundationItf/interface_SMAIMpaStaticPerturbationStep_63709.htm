<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SMAMpaFoundationItf Interface SMAIMpaStaticPerturbationStep</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../SMAMpaFoundationItf.htm" href="../SMAMpaFoundationItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "SMAMpaFoundationItf";	}
		function getCurrentObjectName() { 
 	return "SMAIMpaStaticPerturbationStep"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>SMAMpaFoundationItf Interface SMAIMpaStaticPerturbationStep</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SMAIMpaStaticPerturbationStep_63709','SMAIMpaStaticPerturbationStep','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>SMAIMpaStaticPerturbationStep</b>
</p>
<p>
<b><i> Interface to access data within a static perturbation step.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"><b>CreateLinearLoadCase</b></a>(SMAIMpaLinearLoadCase_var&amp;)
<dd>  Creates a linear load case.
 <dt> o 
    <a href="#DeleteLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"><b>DeleteLinearLoadCase</b></a>(SMAIMpaLinearLoadCase_var&amp;)
<dd>  Deletes the specified linear load case.
 <dt> o 
    <a href="#GetLinearLoadCases(CATListValCATBaseUnknown_var&amp;)"><b>GetLinearLoadCases</b></a>(CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the list of all linear load cases.
 <dt> o 
    <a href="#GetMatrixStorageScheme(SMAMpaMatrixStorageScheme&amp;)"><b>GetMatrixStorageScheme</b></a>(SMAMpaMatrixStorageScheme&amp;)
<dd>  Retrieves the matrix storage scheme.
 <dt> o 
    <a href="#GetSolutionTechnique(SolutionTechnique&amp;)"><b>GetSolutionTechnique</b></a>(SolutionTechnique&amp;)
<dd>  Retrieves the solution technique.
 <dt> o 
    <a href="#SetMatrixStorageScheme(SMAMpaMatrixStorageScheme)"><b>SetMatrixStorageScheme</b></a>(SMAMpaMatrixStorageScheme)
<dd>  Sets the matrix storage scheme.
 <dt> o 
    <a href="#SetSolutionTechnique(SolutionTechnique)"><b>SetSolutionTechnique</b></a>(SolutionTechnique)
<dd>  Sets the solution technique.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#SolutionTechnique"><b>SolutionTechnique</b></a>
<dd>  The solution technique
 
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateLinearLoadCase"></a><a name="CreateLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"></a> <dt> o <b>CreateLinearLoadCase</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateLinearLoadCase</b>(<td><script type="text/javascript"> activateLink('SMAIMpaLinearLoadCase_var','SMAIMpaLinearLoadCase_var&amp;')</script> <td><tt>ospLoadCase</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a linear load case.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospLoadCase</tt>
   <dd> [out]    The created linear load case.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="DeleteLinearLoadCase"></a><a name="DeleteLinearLoadCase(SMAIMpaLinearLoadCase_var&amp;)"></a> <dt> o <b>DeleteLinearLoadCase</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteLinearLoadCase</b>(<td><script type="text/javascript"> activateLink('SMAIMpaLinearLoadCase_var','SMAIMpaLinearLoadCase_var&amp;')</script> <td><tt>ispLoadCase</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes the specified linear load case.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispLoadCase</tt>
   <dd> [in]    The deleted linear load case.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetLinearLoadCases"></a><a name="GetLinearLoadCases(CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetLinearLoadCases</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLinearLoadCases</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>ospLoadCases</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of all linear load cases.
 Each of the objects returned will adhere to SMAIMpaLinearLoadCase interface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospLoadCases</tt>
   <dd> [out]    The list of all linear load cases.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetMatrixStorageScheme"></a><a name="GetMatrixStorageScheme(SMAMpaMatrixStorageScheme&amp;)"></a> <dt> o <b>GetMatrixStorageScheme</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMatrixStorageScheme</b>(<td><script type="text/javascript"> activateLink('SMAMpaMatrixStorageScheme','SMAMpaMatrixStorageScheme&amp;')</script> <td><tt>oMatrixStorageScheme</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the matrix storage scheme.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMatrixStorageScheme</tt>
   <dd> [out]    The matrix storage scheme.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="GetSolutionTechnique"></a><a name="GetSolutionTechnique(SolutionTechnique&amp;)"></a> <dt> o <b>GetSolutionTechnique</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSolutionTechnique</b>(<td><script type="text/javascript"> activateLink('SolutionTechnique','SolutionTechnique&amp;')</script> <td><tt>oSolutionTechnique</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the solution technique.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSolutionTechnique</tt>
   <dd> [out]    The solution technique.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetMatrixStorageScheme"></a><a name="SetMatrixStorageScheme(SMAMpaMatrixStorageScheme)"></a> <dt> o <b>SetMatrixStorageScheme</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMatrixStorageScheme</b>(<td><script type="text/javascript"> activateLink('SMAMpaMatrixStorageScheme','SMAMpaMatrixStorageScheme')</script> <td><tt>iMatrixStorageScheme</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the matrix storage scheme.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMatrixStorageScheme</tt>
   <dd> [in]    The matrix storage scheme.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
<a name="SetSolutionTechnique"></a><a name="SetSolutionTechnique(SolutionTechnique)"></a> <dt> o <b>SetSolutionTechnique</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSolutionTechnique</b>(<td><script type="text/javascript"> activateLink('SolutionTechnique','SolutionTechnique')</script> <td><tt>iSolutionTechnique</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the solution technique.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSolutionTechnique</tt>
   <dd> [in]    The solution technique.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <code>S_OK</code> if successful.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="SolutionTechnique"> <dt> o <b>SolutionTechnique</b>
<dl>
  <dd>
<pre>
enum <b>SolutionTechnique</b> {
  FullNewton,
  LCP
}
</pre>
 The solution technique
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FullNewton</tt>
   <dd>    The standard full Newton solution technique is used.
 </dd>
    <dt><tt> LCP</tt>
   <dd>    The full Newton solution technique is used with linear restrictions.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>SMAIMpaStaticPerturbationStep.h</b><br>
If needed, your Imakefile.mk should include the module: <b>SMAMpaFndInterfaces</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

