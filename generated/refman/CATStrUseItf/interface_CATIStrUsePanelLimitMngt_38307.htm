<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATIStrUsePanelLimitMngt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStrUsePanelLimitMngt"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATIStrUsePanelLimitMngt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStrUsePanelLimitMngt_38307','CATIStrUsePanelLimitMngt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStrUsePanelLimitMngt</b>
</p>
<p>
<b><i> <b>Role</b>: Interface to manage the limits of SFD panel, SDD panel and SDD plate.</i></b><br>
 A limit can be:
     - curve / surface
     - Panel: if the Panel is planar, it is the CanonicMoldedSurface, if not it is the
              delimited one.
     - Profile: if it is Straight, it is the CanonicTrace, if not the delimited one.
 Why do we use the canonic support? it is for realizing reciprocal limits without having
 an update lifecycle: for instance, Panel P1 is limites by Panel P2 and P2 is limited by P1.
 Why do we use sometimes delimited support? because in case the Panel is a complex surface, we
 prefer to use the delimited support because it is smaller in size and the reciprocal limits
 is not really a valid use case as well.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetLimitType(CATStrPlateLimitType&amp;,int)"><b>GetLimitType</b></a>(CATStrPlateLimitType&amp;,int)
<dd>  Gets the Limit Orientation for a limit at the position iIndexLimit on the Panel.
 <dt> o 
    <a href="#GetLimitingObject(CATIMmiMechanicalFeature_var&amp;,int)"><b>GetLimitingObject</b></a>(CATIMmiMechanicalFeature_var&amp;,int)
<dd>  
 <dt> o 
    <a href="#GetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"><b>GetLimitingObject</b></a>(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)
<dd>  Gets a limiting object of a panel or a plate.
 <dt> o 
    <a href="#GetLimitingObjects(CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATListOfInt&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATListOfInt&amp;)"><b>GetLimitingObjects</b></a>(CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATListOfInt&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATListOfInt&amp;)
<dd>  
 <dt> o 
    <a href="#GetNbOfLimits(int&amp;)"><b>GetNbOfLimits</b></a>(int&amp;)
<dd>  Gives the number of limits that have already been defined.
 <dt> o 
    <a href="#GetNormalOffset(CATICkeParm_var&amp;,int)"><b>GetNormalOffset</b></a>(CATICkeParm_var&amp;,int)
<dd>  Gets the normal offset from a panel limit.
 <dt> o 
    <a href="#GetOffset(CATICkeParm_var&amp;,int)"><b>GetOffset</b></a>(CATICkeParm_var&amp;,int)
<dd>  Gets the Limit offset for a limit at the position iIndexLimit on the Panel.
 <dt> o 
    <a href="#GetOrientation(CATStrOrientation&amp;,int)"><b>GetOrientation</b></a>(CATStrOrientation&amp;,int)
<dd>  Gets the Limit Orientation for a limit at the position iIndexLimit on the Panel.
 <dt> o 
    <a href="#InvertLimit(int)"><b>InvertLimit</b></a>(int)
<dd>  Inverts the Limit Orientation for a limit at the position iIndexLimit on the Panel.
 <dt> o 
    <a href="#IsLimitUseful(int)"><b>IsLimitUseful</b></a>(int)
<dd>  Simulates the build of the panel's delimited molded surface and tells whether the
 designed limit actually contributes or not.
 <dt> o 
    <a href="#RemoveLimit(int)"><b>RemoveLimit</b></a>(int)
<dd>  Removes the limit at the position iIndexLimit.
 <dt> o 
    <a href="#SetLimitType(CATStrPlateLimitType&amp;,int)"><b>SetLimitType</b></a>(CATStrPlateLimitType&amp;,int)
<dd>  Sets the Limit Type for a limit at the position iIndexLimit on the Panel.
 <dt> o 
    <a href="#SetLimitingObject(CATIMmiMechanicalFeature_var&amp;,int,CATStrOrientation&amp;,CATStrPlateLimitType,CATUnicodeString&amp;)"><b>SetLimitingObject</b></a>(CATIMmiMechanicalFeature_var&amp;,int,CATStrOrientation&amp;,CATStrPlateLimitType,CATUnicodeString&amp;)
<dd>  
 <dt> o 
    <a href="#SetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"><b>SetLimitingObject</b></a>(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)
<dd>  Sets a limit on the panel or plate.
 <dt> o 
    <a href="#SetOrientation(CATStrOrientation,int)"><b>SetOrientation</b></a>(CATStrOrientation,int)
<dd>  Sets the Limit Orientation for a limit at the position  iIndexLimit on the Panel.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetLimitType"></a><a name="GetLimitType(CATStrPlateLimitType&amp;,int)"></a> <dt> o <b>GetLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitType</b>(<td><script type="text/javascript"> activateLink('CATStrPlateLimitType','CATStrPlateLimitType&amp;')</script> <td><tt>oLimitType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Limit Orientation for a limit at the position iIndexLimit on the Panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLimitType</tt>
   <dd>     Limit type.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitingObject"></a><a name="GetLimitingObject(CATIMmiMechanicalFeature_var&amp;,int)"></a> <dt> o <b>GetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitingObject</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oLimitingObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R418 use #GetLimitingObject
 Gets the Limiting Object on the Panel
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLimitingObject</tt>
   <dd>     Limit Feature to be retrieved.
     Can be a geometric curves, surfaces or a SFD Profile, or a SFD Panel.
      The exported feature is retrieved if possible, otherwise the import.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitingObject"></a><a name="GetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>GetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitingObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oLimitingObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ospContextOfLimitingObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ospContextOfPanel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oucLimitKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets a limiting object of a panel or a plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLimitingObject</tt>
   <dd>   The limiting object.
 </dd>
    <dt><tt> ospContextOfLimitingObject</tt>
   <dd>   The context of the limiting object, which is the product occurrence where it has been
   imported from. Is valuated only if the import has been done with a contextual link.
   Is always NULL_var in SFD.
 </dd>
    <dt><tt> ospContextOfPanel</tt>
   <dd>   The context of this panel or plate. Is valuated only if the import of the limiting
   object has been done with a contextual link. Is always NULL_var in SFD.
 </dd>
    <dt><tt> oucLimitKey</tt>
   <dd>   The key of the face of the SFD profile used as limit. Is "" if not applicable.
   Is always "" in SDD.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>   Position of the limit to be retrieved. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitingObjects"></a><a name="GetLimitingObjects(CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATListOfInt&amp;,CATLISTV(CATIMmiMechanicalFeature_var)&amp;,CATListOfInt&amp;)"></a> <dt> o <b>GetLimitingObjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitingObjects</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>oLimitingObjects</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oListOfOrientations</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATIMmiMechanicalFeature_var)','CATLISTV(CATIMmiMechanicalFeature_var)&amp;')</script> <td><tt>oListOfOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oListOfLimitTypes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R418 use #GetLimitingObject #GetOrientation #GetLimitType #GetNbOfLimits
 Gets the list of Limiting Objects, the limit orientations and the limit offsets on the Panel
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLimitingObjects</tt>
   <dd>     Can be a geometric curves, surfaces or a SFD Profile, or a SFD Panel.
      The exported feature is retrieved if possible, otherwise the import.
 </dd>
    <dt><tt> oListOfOrientations</tt>
   <dd>     List of the Limit Orientations. 
 </dd>
    <dt><tt> oListOfOffset</tt>
   <dd>      List of the Limit offsets .list of knowledge parameters. see CATICkeParm.
 </dd>
    <dt><tt> oListOfLimitTypes</tt>
   <dd>      List of the Limit types.</dd>
</dl>
</dl>
</dl>
<a name="GetNbOfLimits"></a><a name="GetNbOfLimits(int&amp;)"></a> <dt> o <b>GetNbOfLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbOfLimits</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbOfLimits</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gives the number of limits that have already been defined.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbOfLimits</tt>
   <dd>   The number of limits</dd>
</dl>
</dl>
</dl>
<a name="GetNormalOffset"></a><a name="GetNormalOffset(CATICkeParm_var&amp;,int)"></a> <dt> o <b>GetNormalOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNormalOffset</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ospNormalOffset</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the normal offset from a panel limit.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospNormalOffset</tt>
   <dd>   The retrieved normal offset.
 </dd>
    <dt><tt> iLimitIndex</tt>
   <dd>   The index of the limit from which to retrieve the normal offset. Starts at 1. -1 refers to the last limit</dd>
</dl>
</dl>
</dl>
<a name="GetOffset"></a><a name="GetOffset(CATICkeParm_var&amp;,int)"></a> <dt> o <b>GetOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOffset</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ospOffset</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Limit offset for a limit at the position iIndexLimit on the Panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospOffset</tt>
   <dd>     Limit offset to be retrieved.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(CATStrOrientation&amp;,int)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrientation</b>(<td><script type="text/javascript"> activateLink('CATStrOrientation','CATStrOrientation&amp;')</script> <td><tt>oOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Limit Orientation for a limit at the position iIndexLimit on the Panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>     Limit Orientation to be retrieved.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<a name="InvertLimit"></a><a name="InvertLimit(int)"></a> <dt> o <b>InvertLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertLimit</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the Limit Orientation for a limit at the position iIndexLimit on the Panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<a name="IsLimitUseful"></a><a name="IsLimitUseful(int)"></a> <dt> o <b>IsLimitUseful</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsLimitUseful</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Simulates the build of the panel's delimited molded surface and tells whether the
 designed limit actually contributes or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      E_FAIL: The build simulation failed, usually because the result is empty
     S_FALSE: The limit is not contributing to the result
     S_OK: The limit is contributing to the result
</dl>
</dl>
<a name="RemoveLimit"></a><a name="RemoveLimit(int)"></a> <dt> o <b>RemoveLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveLimit</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes the limit at the position iIndexLimit.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexLimit</tt>
   <dd>   Position of the Limit.
 if iIndexLimit = -1, the last Limit is removed
 if iIndexLimit = -99, all the limits are removed</dd>
</dl>
</dl>
</dl>
<a name="SetLimitType"></a><a name="SetLimitType(CATStrPlateLimitType&amp;,int)"></a> <dt> o <b>SetLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitType</b>(<td><script type="text/javascript"> activateLink('CATStrPlateLimitType','CATStrPlateLimitType&amp;')</script> <td><tt>iLimitType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Limit Type for a limit at the position iIndexLimit on the Panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitType</tt>
   <dd>     Limit type.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<a name="SetLimitingObject"></a><a name="SetLimitingObject(CATIMmiMechanicalFeature_var&amp;,int,CATStrOrientation&amp;,CATStrPlateLimitType,CATUnicodeString&amp;)"></a> <dt> o <b>SetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitingObject</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>iLimitingObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATStrOrientation','CATStrOrientation&amp;')</script> <td><tt>iOrientation</tt><td><tt>= StrUnknownOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATStrPlateLimitType','CATStrPlateLimitType')</script> <td><tt>iLimitType</tt><td><tt>= catStrPlateLimitWeld</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iucLimitKey</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  R418 use #SetLimitingObject #SetOrientation #SetLimitType
 Sets the Limiting Object on the Panel. The orientation is automatically computed.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitingObject</tt>
   <dd>     Limit Feature to be set on the panel
     Can be a geometric curves, surfaces or a SFD Profile, or a SFD Panel.
      The import is managed by the implementation.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     If iIndexLimit == -1 (default value): the new limit is added at the end of the list of limits.
     If iIndexLimit >  0  : the new limit is set at the position iIndexLimit.
 </dd>
    <dt><tt> iOrientation</tt>
   <dd>   Current orientation of the plate limit.
    Default Value: SfmUnknownOrientation.
   if iOrientation == SfmUnknownOrientation, the value of the Orientation is automatically
   computed, depending on the value Set in the PRM ressources.
   We advised to use the default value, so that the automatic computation is performed.
 </dd>
    <dt><tt> iLimitType</tt>
   <dd>   Default cutting strategy is set to Weld.
 </dd>
    <dt><tt> iucLimitKey</tt>
   <dd>   Key of the face of the feature.
   Default Values:
   2 - Plate (Corresponds to one face of the Plate.)
   22 - Stiffener (Corresponds to top face of flange of the Stiffener.)</dd>
</dl>
</dl>
</dl>
<a name="SetLimitingObject"></a><a name="SetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>SetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitingObject</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ispLimitingObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ispContextOfLimitingObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ispContextOfPanel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iucLimitKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a limit on the panel or plate. In case a new limit is created, the other methods
 (#SetOrientation, #SetLimitType) have to be called as those attributes will not be
 automatically intialized.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispLimitingObject</tt>
   <dd>   The limiting object. It can be a surface, a curve, a plate, a profile or a
   selecting object (CATIMmiUseBRepAccess)
 </dd>
    <dt><tt> ispContextOfLimitingObject</tt>
   <dd>   The product occurrence where the limiting object has been taken from.
   This argument has to be NULL_var in SFD.
 </dd>
    <dt><tt> ispContextOfPanel</tt>
   <dd>   The product occurrence where this plate or panel is.
   This argument has to remain NULL_var in SFD.
 </dd>
    <dt><tt> iucLimitKey</tt>
   <dd>   In the case where the ispLimitingObject is a SFD profile, it refers to the key
   of the face which has to be used as limiting object (e.g. "22" for the face of the
   top flange). Keys can be found in CATStrSectionNamingKeys.CATRsc.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>   If positive, the index of the limit for which the limiting object has to be
   replaced.
   If -1, a new limit will be created.</dd>
</dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(CATStrOrientation,int)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrientation</b>(<td><script type="text/javascript"> activateLink('CATStrOrientation','CATStrOrientation')</script> <td><tt>iOrientation</tt><td><tt>= StrUnknownOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexLimit</tt><td><tt>= -1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Limit Orientation for a limit at the position  iIndexLimit on the Panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>     Limit Orientation to be set.
     Use StrUnknownOrientation if you want this orientation to be automatically decided following molded conventions
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>     Position of the limit. -1 refers to the last limit.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStrUsePanelLimitMngt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

