<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATIStrUseOpeningStandardExt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStrUseOpeningStandardExt"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATIStrUseOpeningStandardExt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStrUseOpeningStandardExt_48951','CATIStrUseOpeningStandardExt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStrUseOpeningStandardExt</b>
</p>
<p>
<b><i> Interface representing a Standard Opening.</i></b><br>

 <b>Role</b>: The CATIStrUseOpeningStandardExt interface is conditionally. 
 implemented for the Opening object, depending on
 whether the Opening has the Standard Opening CreationMode.
 This interface provides functions specific to Standard
 Openings.
 This interface allows access to the Standard Opening catalog
 to be encapsulated within the modeler, and combines the list
 of Standard Opening catalog contours with the built-in and 
 locally defined (in the design model) Standard Opening contours. 
 This also combines the list of positioning strategies in the 
 Standard Opening catalog with built-in and locally defined 
 positioning strategies.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPositioningAngle(CATICkeParm_var&amp;,CATBoolean)"><b>GetPositioningAngle</b></a>(CATICkeParm_var&amp;,CATBoolean)
<dd>  Retrieves the Angle value for the positioning strategy .
 <dt> o 
    <a href="#GetPositioningStrategy(CATUnicodeString&amp;)"><b>GetPositioningStrategy</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the positioning strategy name.
 <dt> o 
    <a href="#GetPositioningUCurve(CATIMmiMechanicalFeature_var&amp;)"><b>GetPositioningUCurve</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Retrieves the U curve value for the positioning strategy .
 <dt> o 
    <a href="#GetPositioningVCurve(CATIMmiMechanicalFeature_var&amp;)"><b>GetPositioningVCurve</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Retrieves the V curve value for the positioning strategy .
 <dt> o 
    <a href="#SetPositioningStrategy(CATUnicodeString&amp;)"><b>SetPositioningStrategy</b></a>(CATUnicodeString&amp;)
<dd>  Sets the positioning strategy name to the name given as input.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPositioningAngle"></a><a name="GetPositioningAngle(CATICkeParm_var&amp;,CATBoolean)"></a> <dt> o <b>GetPositioningAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPositioningAngle</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ospAngleParm</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iCreateIfNotExisting</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Angle value for the positioning strategy .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospAngleParm.</tt>
   <dd>   Returns the angle value for positioning.
 </dd>
    <dt><tt> iCreateIfNotExisting.</tt>
   <dd>   Creates the Angle param if it is not existing.
   S_OK if everything ran ok.
   E_FAIL if something went wrong.</dd>
</dl>
</dl>
</dl>
<a name="GetPositioningStrategy"></a><a name="GetPositioningStrategy(CATUnicodeString&amp;)"></a> <dt> o <b>GetPositioningStrategy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPositioningStrategy</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oPosStrategyName</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the positioning strategy name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPosStrategyName.</tt>
   <dd>   Gets the positioning strategy Name.
   S_OK if everything ran ok.
   E_FAIL if something went wrong.</dd>
</dl>
</dl>
</dl>
<a name="GetPositioningUCurve"></a><a name="GetPositioningUCurve(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetPositioningUCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPositioningUCurve</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ospUCurve</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the U curve value for the positioning strategy .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospUCurve.</tt>
   <dd>   Retrieves the U curve value for positioning.
   S_OK if everything ran ok.
   E_FAIL if something went wrong.</dd>
</dl>
</dl>
</dl>
<a name="GetPositioningVCurve"></a><a name="GetPositioningVCurve(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetPositioningVCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPositioningVCurve</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>ospVCurve</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the V curve value for the positioning strategy .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospVCurve.</tt>
   <dd>   Returns the V curve value for positioning.
   S_OK if everything ran ok.
   E_FAIL if something went wrong.</dd>
</dl>
</dl>
</dl>
<a name="SetPositioningStrategy"></a><a name="SetPositioningStrategy(CATUnicodeString&amp;)"></a> <dt> o <b>SetPositioningStrategy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPositioningStrategy</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPosStrategyName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the positioning strategy name to the name given as input.
 It prepares the internal model accordingly to the used strategy type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosStrategyName.</tt>
   <dd>   Sets the positioning strategy Name.
   S_OK if everything ran ok.
   E_FAIL if something went wrong.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStrUseOpeningStandardExt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

