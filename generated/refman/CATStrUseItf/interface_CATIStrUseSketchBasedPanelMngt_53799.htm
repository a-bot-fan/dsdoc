<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATStrUseItf Interface CATIStrUseSketchBasedPanelMngt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATStrUseItf.htm" href="../CATStrUseItf.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATStrUseItf";	}
		function getCurrentObjectName() { 
 	return "CATIStrUseSketchBasedPanelMngt"; } 
	function getCurrentType() { 
 	return "interface"; }  
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATStrUseItf Interface CATIStrUseSketchBasedPanelMngt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStrUseSketchBasedPanelMngt_53799','CATIStrUseSketchBasedPanelMngt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStrUseSketchBasedPanelMngt</b>
</p>
<p>
<b><i> This interface allows the management of sketch based panels or plates.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ApplyChanges()"><b>ApplyChanges</b></a>()
<dd>  Applies the changes in the model, the same way the Apply button does in the parametric
 plate interactive command.
 <dt> o 
    <a href="#Get3DAxisSystem(CATIMf3DAxisSystem_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)"><b>Get3DAxisSystem</b></a>(CATIMf3DAxisSystem_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)
<dd>  Gets the 3D Axis system used to position this parametric panel or plate.
 <dt> o 
    <a href="#GetContour(CATUnicodeString&amp;)"><b>GetContour</b></a>(CATUnicodeString&amp;)
<dd>  Gets the name of the used contour.
 <dt> o 
    <a href="#GetContourParameters(CATListValCATICkeParm_var&amp;)"><b>GetContourParameters</b></a>(CATListValCATICkeParm_var&amp;)
<dd>  Gets the parameters that are used as input for the contour.
 <dt> o 
    <a href="#GetLimitMode(CATStrUseBracketPositionMode&amp;)"><b>GetLimitMode</b></a>(CATStrUseBracketPositionMode&amp;)
<dd>  Gets the limit mode with which this parametric panel or plate has been created.
 <dt> o 
    <a href="#GetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"><b>GetLimitingObject</b></a>(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)
<dd>  Gets one limiting object used to position this parametric panel or plate.
 <dt> o 
    <a href="#GetNbOfLimits(int&amp;)"><b>GetNbOfLimits</b></a>(int&amp;)
<dd>  Gets the number of geometrical inputs this sketch based panel or plates has.
 <dt> o 
    <a href="#GetOrientation(CATStrOrientation&amp;,int)"><b>GetOrientation</b></a>(CATStrOrientation&amp;,int)
<dd>  Gets the orientation of one limit.
 <dt> o 
    <a href="#Set3DAxisSystem(CATIMf3DAxisSystem_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)"><b>Set3DAxisSystem</b></a>(CATIMf3DAxisSystem_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)
<dd>  Sets the 3D Axis system to be used to position this parametric panel or plate.
 <dt> o 
    <a href="#SetContour(CATUnicodeString&amp;)"><b>SetContour</b></a>(CATUnicodeString&amp;)
<dd>  Sets the contour to be used for this parametric panel or plate.
 <dt> o 
    <a href="#SetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"><b>SetLimitingObject</b></a>(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)
<dd>  Sets one limiting object to be used to position this parametric panel or plate.
 <dt> o 
    <a href="#SetOrientation(CATStrOrientation,int)"><b>SetOrientation</b></a>(CATStrOrientation,int)
<dd>  Sets the orientation of one limit.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ApplyChanges"></a><a name="ApplyChanges()"></a> <dt> o <b>ApplyChanges</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ApplyChanges</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Applies the changes in the model, the same way the Apply button does in the parametric
 plate interactive command.
</dl>
<a name="Get3DAxisSystem"></a><a name="Get3DAxisSystem(CATIMf3DAxisSystem_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)"></a> <dt> o <b>Get3DAxisSystem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Get3DAxisSystem</b>(<td><script type="text/javascript"> activateLink('CATIMf3DAxisSystem_var','CATIMf3DAxisSystem_var&amp;')</script> <td><tt>ospAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ospContextOfAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ospContextOfSBPanel</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the 3D Axis system used to position this parametric panel or plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospAxis</tt>
   <dd>   The 3D Axis system used to position this parametric panel or plate.
 </dd>
    <dt><tt> ospContextOfAxis</tt>
   <dd>   The context of the 3D Axis system, which is the product occurrence where it has been
   imported from. Is valuated only if the import has been done with a contextual link.
   Is always NULL_var in SFD.
 </dd>
    <dt><tt> ospContextOfSBPanel</tt>
   <dd>   The context of this sketch based panel or plate. Is valuated only if the import of the
   limiting object has been done with a contextual link. Is always NULL_var in SFD.</dd>
</dl>
</dl>
</dl>
<a name="GetContour"></a><a name="GetContour(CATUnicodeString&amp;)"></a> <dt> o <b>GetContour</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContour</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oContourName</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the name of the used contour.
 <b>ATTENTION</b>: The returned contour name comes from the alias of the used sketch.
                   Thus, if the sketch name has been altered previously, then the
                   returned result might not match the value set in #SetContour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContourName</tt>
   <dd>   The name of the contour product from which the used sketch is used.</dd>
</dl>
</dl>
</dl>
<a name="GetContourParameters"></a><a name="GetContourParameters(CATListValCATICkeParm_var&amp;)"></a> <dt> o <b>GetContourParameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContourParameters</b>(<td><script type="text/javascript"> activateLink('CATListValCATICkeParm_var','CATListValCATICkeParm_var&amp;')</script> <td><tt>oListOfContourParameters</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the parameters that are used as input for the contour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfContourParameters</tt>
   <dd>   The list of contour parameters.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitMode"></a><a name="GetLimitMode(CATStrUseBracketPositionMode&amp;)"></a> <dt> o <b>GetLimitMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitMode</b>(<td><script type="text/javascript"> activateLink('CATStrUseBracketPositionMode','CATStrUseBracketPositionMode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the limit mode with which this parametric panel or plate has been created.
 <b>Note</b>: The position mode is set at creation and cannot be changed afterwards.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>   The positioning mode with which this parametric panel or plate has been created.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitingObject"></a><a name="GetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>GetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimitingObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ospObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ospContextOfLimitingObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ospContextOfSBPanel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oLimitKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets one limiting object used to position this parametric panel or plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ospObject</tt>
   <dd>   The limiting object used to position this parametric panel or plate.
 </dd>
    <dt><tt> ospContextOfAxis</tt>
   <dd>   The context of the limiting object, which is the product occurrence where it has been
   imported from. Is valuated only if the import has been done with a contextual link.
   Is always NULL_var in SFD.
 </dd>
    <dt><tt> ospContextOfSBPanel</tt>
   <dd>   The context of this sketch based panel or plate. Is valuated only if the import of the
   limiting object has been done with a contextual link. Is always NULL_var in SFD.
 </dd>
    <dt><tt> oLimitKey</tt>
   <dd>   The key of the face of the SFD profile used as limit. Is "" if not applicable.
   Is always "" in SDD.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>   Position of the limit to be retrieved starting 1.</dd>
</dl>
</dl>
</dl>
<a name="GetNbOfLimits"></a><a name="GetNbOfLimits(int&amp;)"></a> <dt> o <b>GetNbOfLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbOfLimits</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbOfLimits</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of geometrical inputs this sketch based panel or plates has.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbOfLimits</tt>
   <dd>   The number of inputs</dd>
</dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation(CATStrOrientation&amp;,int)"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrientation</b>(<td><script type="text/javascript"> activateLink('CATStrOrientation','CATStrOrientation&amp;')</script> <td><tt>oOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the orientation of one limit.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>   The orientation of the limit. The only possible values are StrNormalOrientation and
   StrInvertOrientation.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>   Position of the limit to be considered starting 1.</dd>
</dl>
</dl>
</dl>
<a name="Set3DAxisSystem"></a><a name="Set3DAxisSystem(CATIMf3DAxisSystem_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;)"></a> <dt> o <b>Set3DAxisSystem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Set3DAxisSystem</b>(<td> const <script type="text/javascript"> activateLink('CATIMf3DAxisSystem_var','CATIMf3DAxisSystem_var&amp;')</script> <td><tt>ispAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ispContextOfAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ispContextOfSBPanel</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the 3D Axis system to be used to position this parametric panel or plate.
 <b>Note</b>: This method can be called only if the parametric panel or plate has been
              created with 3D Axis positioning
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispAxis</tt>
   <dd>    The 3D Axis to be used.
 </dd>
    <dt><tt> ispContextOfAxis</tt>
   <dd>   The product occurrence where the axis has been taken from.
   This argument has to be NULL_var in SFD.
 </dd>
    <dt><tt> ispContextOfSBPanel</tt>
   <dd>   The product occurrence where this sketch based plate or panel is.
   This argument has to remain NULL_var in SFD.</dd>
</dl>
</dl>
</dl>
<a name="SetContour"></a><a name="SetContour(CATUnicodeString&amp;)"></a> <dt> o <b>SetContour</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetContour</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iContourName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the contour to be used for this parametric panel or plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContourName</tt>
   <dd>   The name of the contour product in which is defined the sketch to be used.</dd>
</dl>
</dl>
</dl>
<a name="SetLimitingObject"></a><a name="SetLimitingObject(CATBaseUnknown_var&amp;,CATIPLMNavOccurrence_var&amp;,CATIPLMNavOccurrence_var&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>SetLimitingObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLimitingObject</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ispObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ispContextOfLimitingObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIPLMNavOccurrence_var','CATIPLMNavOccurrence_var&amp;')</script> <td><tt>ispContextOfSBPanel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLimitKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets one limiting object to be used to position this parametric panel or plate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispObject</tt>
   <dd>    The limiting object to be used. In both SFD and SDD, it can be a surface or a
    2D selecting object (CATIMmiUseBRepAccess). In SFD only, it can be a panel or
    a stiffener.
 </dd>
    <dt><tt> ispContextOfLimitingObject</tt>
   <dd>   The product occurrence where the limiting object has been taken from.
   This argument has to be NULL_var in SFD.
 </dd>
    <dt><tt> ispContextOfSBPanel</tt>
   <dd>   The product occurrence where this sketch based plate or panel is.
   This argument has to remain NULL_var in SFD.
 </dd>
    <dt><tt> iucLimitKey</tt>
   <dd>   In the case where the ispLimitingObject is a SFD profile, it refers to the key
   of the face which has to be used as limiting object (e.g. "22" for the face of the
   top flange). Keys can be found in CATStrSectionNamingKeys.CATRsc.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>   The index, starting 1, of the limit for which the limiting object has to be
   replaced.</dd>
</dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(CATStrOrientation,int)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrientation</b>(<td><script type="text/javascript"> activateLink('CATStrOrientation','CATStrOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the orientation of one limit.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>   The orientation of the limit. The only authorized values are StrNormalOrientation and
   StrInvertOrientation.
 </dd>
    <dt><tt> iIndexLimit</tt>
   <dd>   Position of the limit to be considered starting 1.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStrUseSketchBasedPanelMngt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATStrUseItf</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

