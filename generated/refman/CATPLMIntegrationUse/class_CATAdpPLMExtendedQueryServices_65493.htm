<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATPLMIntegrationUse Class CATAdpPLMExtendedQueryServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<link href="../_index/cdg.css" rel="stylesheet" type="text/css"> 
<script type="text/javascript">var PubDirExist = false; var ProDirExist = false; var PrivDirExist = false;</script> 
<script type="text/javascript" src="../_index/cdg.js"></script> 
<script language="Javascript" id="jsLinkjs" type="text/javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" id="jsFwLinkjs" type="text/javascript" src="jsFwLink.js"></script> 
<script language="Javascript" id="jsTreejs" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<div class="menu1" id="menuViewPPP" > 
 	<a href="javascript:writeIndex('IPublic')" name="viewPPP" id="PublicView"  class="ongletPub" > Public View</a> 
 	<a href="javascript:writeIndex('IProtected')" name="viewPPP" id="ProtectedView" class="ongletPro"  > Protected View</a>  
 	<a href="javascript:writeIndex('IPrivate')" name="viewPPP" id="PrivateView" class="ongletPriv" > Private View</a> 
 </div> 
 <div id="indexView" class="menu1">	 
 <a name="multiview" class="onglet" rel="../_index/main.htm" href="../_index/main.htm">All Frameworks</a>   
 <a name="multiview" class="onglet"  rel="../_index/tree.htm" href="../_index/tree.htm">Class Hierarchy</a>   
 <a name="multiview" class="onglet"  rel="../CATPLMIntegrationUse.htm" href="../CATPLMIntegrationUse.htm">This Framework</a>
<a name="multiview" class="onglet"  rel="../_index/HomeIdx.htm" href="../_index/HomeIdx.htm">Indexes</a>  
 <a id="multiviewP" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'0')"  >Previous</a>  
 	<a id="multiviewN" class="onglet" href="javascript:openLinkNP(getCurrentObjectName(),getCurrentType(),'1')"  >Next</a> 
 </div> 
<script type="text/javascript" > 
 	function getCurrentLevel() { 
 return "";	} 
	function getCurrentFw() { 
	return "CATPLMIntegrationUse";	}
		function getCurrentObjectName() { 
 	return "CATAdpPLMExtendedQueryServices"; } 
	function getCurrentType() { 
 	return "class"; }  
 function writeClassCharacteristic() { 
 	    var objtype = getCurrentType(); 
 	    var objname = getCurrentObjectName(); 
 	    var objdsCh = getDsCharacteristic(objname, objtype); 
 	    if (objdsCh!=null) document.write(objdsCh); 
 	} 
 function callInit() { 
 		if (PubDirExist == true || ProDirExist == true || PrivDirExist == true) {  
 			var parent = document.getElementById("indexView"); 
 			if (parent && (ProDirExist == true || PrivDirExist == true) ) { 
 			var elem = document.getElementById("multiviewP"); 
 			if(elem) parent.removeChild(elem); 
 			elem = document.getElementById("multiviewN"); 
 			if(elem) parent.removeChild(elem); }
 			initData(); 
 		} else { 
 			var elem; 
 			var parent = document.getElementById("menuViewPPP"); 
 			if (parent) { 
 				elem = document.getElementById("PublicView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("ProtectedView"); 
 				parent.removeChild(elem); 
 				elem = document.getElementById("PrivateView"); 
 				parent.removeChild(elem); 
 			} 
 if (locateObject(getCurrentObjectName(), getCurrentType(), '0')==0) { 
 				elem = document.getElementById("multiviewP"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 			if (locateObject(getCurrentObjectName(), getCurrentType(), '1')==0) { 
 				elem = document.getElementById("multiviewN"); 
 				if (elem) { elem.removeAttribute("href"); elem.removeAttribute("onclick"); } 
 			} 
 }	 
 	} 
 	window.onload = callInit; 
  </script> 
 
<h1>CATPLMIntegrationUse <script type="text/javascript" > writeClassCharacteristic(); </script> CATAdpPLMExtendedQueryServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAdpPLMExtendedQueryServices_65493','CATAdpPLMExtendedQueryServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAdpPLMExtendedQueryServices</b>
</p>
<p>
<b><i> Class to manage queries on PLM component in database.</i></b><br>


 <br><b>Role</b>: Provides basic functions to query PLM data.</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetElementsFromQueryFilter(CATAdpPLMQueryFilter&amp;,CATAdpPLMComponentsInfos&amp;,CATIAdpPLMErrorReviewer*)"><b>GetElementsFromQueryFilter</b></a>(CATAdpPLMQueryFilter&amp;,CATAdpPLMComponentsInfos&amp;,CATIAdpPLMErrorReviewer*)
<dd>   Retrieves in the current repository the objects corresponding to a set of attributes of any type.
 <dt> o 
    <a href="#GetRepresentationsFromReference(CATBaseUnknown*,CATIType*,CATAdpPLMComponentReferences&amp;,CATAdpPLMComponentsInfos&amp;,CATIAdpPLMErrorReviewer*)"><b>GetRepresentationsFromReference</b></a>(CATBaseUnknown*,CATIType*,CATAdpPLMComponentReferences&amp;,CATAdpPLMComponentsInfos&amp;,CATIAdpPLMErrorReviewer*)
<dd>  Retrieves the representations instantiated under a given reference.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetElementsFromQueryFilter"></a><a name="GetElementsFromQueryFilter(CATAdpPLMQueryFilter&amp;,CATAdpPLMComponentsInfos&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>GetElementsFromQueryFilter</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElementsFromQueryFilter</b>(<td> const <script type="text/javascript"> activateLink('CATAdpPLMQueryFilter','CATAdpPLMQueryFilter&amp;')</script> <td><tt>iQueryFilter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMComponentsInfos','CATAdpPLMComponentsInfos&amp;')</script> <td><tt>oComponentsInfos</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Retrieves in the current repository the objects corresponding to a set of attributes of any type.

 <br><b>Role</b>: This method retrieves in the current repository the objects matching the input defined criterion.
 <ul>
 <li> The input criterion is defined with a query filter  (see further on for more accurate description).</li>
 <li> If no provider is currently connected, the query will result in an E_FAIL return.</li>
 <li> If more than one provider is connected, the query will result in an E_FAIL return.</li>
 <li> See 
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMQueryFilter','','CATAdpPLMQueryFilter') </script> to create filter.</li> </ul>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iQueryFilter</tt>
   <dd> [in]   The Filter to adress a query with possible extension and supporting any kind of attributes.
   This filter owns a CATAdpPLMQueryAttributeSet corresponding to the main type of object to be retrieved and a list of 
   CATAdpPLMQueryAttributeSet corresponding each to constraint on an extension.
   see (</dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMQueryFilter','','CATAdpPLMQueryFilter') </script> )  for more informations.    The attribute set that the searched object should match. It contains the names , values and operators ("EQ", "NOT_EQ", 
   "GT" , "LTEQ", "LT" , "GTEQ" , "LIKE")  of the attributes which will be used during the search operation. 
   It must not be empty for a set corresponding to an extension type.
 <ul>
 <li> Inside a attribute set, attribute constraint can be combined through a ‘AND’ condition or a 'OR' condition .</li>
 <li> Between two attribute sets, the ‘AND’ condition is applied .</li>
 <li> These attributes should be of only string, double, integer, time, boolean types.</li>
 <li> Multi valuated attributes are not supported.</li>
 <li> Wildcard are supported as attribute values on string attribute type.</li>
 </ul>
   A set is invalid if :
 <ul>
 <li> The attribute set is empty and if its type corresponds to an extension.</li>
 <li> The attribute set is empty and if its type corresponds to the main type and if there is no extension set defined and if the
      mode attribute completion with query mask is not set, see (
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMQueryFilter','','CATAdpPLMQueryFilter') </script> ) for more information.</li> <li> Or, one of the attributes available in the set is not defined for such a 
<script type="text/javascript"> activateLinkAnchor('CATIType','','CATIType') </script> in the metadata.</li> </ul>
 
    <dt><tt> oComponentsInfos</tt>
   <dd> [out]   Returned Informations on the found components. 
 <ul>
 <li> These components are not loaded in a session. </li>
 <li> Components are identified through </dd>
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script> by using the 
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMComponentsInfosIter','NextInfos','CATAdpPLMComponentsInfosIter.NextInfos') </script> method.</li> <li> The return attributes on each Component are those which are specified according to completion of query result mode on iQueryFilter.
      See 
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMQueryFilter','ReturnQueryAttributes','CATAdpPLMQueryFilter.ReturnQueryAttributes') </script> to have detailed informations.      Be aware that this service returns only attributes belonging to the query mask (it is the same on extension). When the 
      
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMQueryFilter','FromQueryMaskAttributes','CATAdpPLMQueryFilter.FromQueryMaskAttributes') </script> mode is set on iQueryFilter object, an attribute is filtered from output if      it is not part of the Query mask and a warning is generated in param iopErrorMonitor (if it is defined).</li>
 
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]   The ErrorMonitor dedicated to store and handle all PLM Errors raised during the execution of this service.
 </ul>

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><code>S_OK</code> if a component was found in the database.</li>
   <li><code>S_FALSE</code> if no component matching the criterion was found in the database.</li>
   <li><code>E_FAIL</code> if an error occured. If a blocking error occured, it can be accessed through 
<script type="text/javascript"> activateLinkAnchor('CATError','CATGetLastError','CATError.CATGetLastError') </script> method.</li>   <li><code>E_INVALIDARG</code> if the provided <tt>iType</tt> or <tt>iQueryFilter</tt> is invalid.</li>
   </ul>

</dl>
</dl>
<a name="GetRepresentationsFromReference"></a><a name="GetRepresentationsFromReference(CATBaseUnknown*,CATIType*,CATAdpPLMComponentReferences&amp;,CATAdpPLMComponentsInfos&amp;,CATIAdpPLMErrorReviewer*)"></a> <dt> o <b>GetRepresentationsFromReference</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRepresentationsFromReference</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIType','CATIType*')</script> <td><tt>iRepresentationType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMComponentReferences','CATAdpPLMComponentReferences&amp;')</script> <td><tt>oRepresentations</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAdpPLMComponentsInfos','CATAdpPLMComponentsInfos&amp;')</script> <td><tt>oComponentsInfos</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIAdpPLMErrorReviewer','CATIAdpPLMErrorReviewer*')</script> <td><tt>iopErrorReviewer</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the representations instantiated under a given reference.

 Only representations whose types have the property CustomerExposition
 set to "Programmer" will be retrieved.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReference</tt>
   <dd> [in]   The reference under which the representations to retrieve are instantiated.
   It can be either a </dd>
<script type="text/javascript"> activateLinkAnchor('CATIAdpPLMIdentificator','','CATIAdpPLMIdentificator') </script> or a pointer to a PLM objet   already loaded in session.

 
    <dt><tt> iRepresentationType</tt>
   <dd> [in]   The type of the representations to retrieve. If NULL, all available representations
   instantiated under the reference will be retrieved. Note that if NULL, the performance
   of the service may suffer.

 </dd>
    <dt><tt> oRepresentations</tt>
   <dd> [out]   The resulting map between the retrieved representation instances and their associated
   representations (see </dd>
<script type="text/javascript"> activateLinkAnchor('CATAdpPLMComponentReferences)','','CATAdpPLMComponentReferences)') </script>. Note that all retrieved   representation instances will have their owner referring to the input reference.
 
 
    <dt><tt> oComponentsInfos</tt>
   <dd> [out]   The attributes of all the retrieved components, either representation or representation
   instances. The retrieved attributes are the ones of the query mask.

 </dd>
    <dt><tt> iopErrorReviewer</tt>
   <dd> [inout]    The ErrorMonitor dedicated to store and handle all PLM Errors raised during
   the execution of this service.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <dl><dt>S_OK</dt><dd>
       The service correctly ended and some representations have been found.
   </dd><dt>S_FALSE</dt><dd>
       The service correctly ended but no representations have been found. 
   </dd><dt>E_INVALIDARG</dt><dd>
      * The given iReference is NULL or neither a CATIAdpPLMIdentificator nor
        a PLM object loaded in session or the object in session is not saved in DB.
        In this case the ERR_INVALID_REFERENCE will be posted in iopErrorReviewer.
      * The given iRepresentationType is not NULL but does not refer to a PLMType.
        In this case, the ERR_INVALID_TYPE will be posted in iopErrorReviewer.
   </dd><dt>E_FAIL/E_UNEXPECTED</dt><dd>
       The service failed. Available details may be found in iopErrorReviewer.</dd></dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAdpPLMExtendedQueryServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPLMIntegrationUse</b>
<hr/><p><i>
Copyright &#169; 1999-2015, Dassault Syst&#232;mes. All rights reserved.
</i></p>
</body>

</html>

