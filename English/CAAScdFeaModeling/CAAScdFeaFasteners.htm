<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="idl" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating a Fastener Connection Property</title>
<style type="text/css">
    .padded td, .padded th {
        padding: 5px;
        border: 1px solid black;
    }
.auto-style1 {
	font-family: "Courier New", Courier;
	font-size: 9pt;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader1">
			<h1>Creating a Fastener Connection Property</h1>
		</td>
	</tr>
	<tr>
		<td class="DocHeader3" style="width: 1807px">
		<table class="DocHeaderIntro">
			<tr>
				<td class="Intro1">
					<p class="header">This use case primarily focuses on the 
					methodology to create a fastener connection property.</p>
					<hr class="header" />
				</td>
			</tr>
			<tr>
				<td class="Intro2"><span class="run-in">Before you begin:</span> 
					<ul>
						<li>Launch CATIA and then import and 
						open the
						<code>CAAScdFeaPumpModel.3dxml</code> file supplied in 
						the folder <code>
						InstallRootFolder\CAADoc\Doc\English\CAAScdFeaScenario\samples\</code> 
						where <code>InstallRootFolder</code><span class="auto-style1">
						</span>is the folder 
						where the API CD-ROM is installed.</li>
						<li>CA media is required in order to create and edit fasteners.</li>
            <li>Note: Creation of new PLM objects via scripting, as in this 
                use case, requires an enabling license in addition to the
                interactive Roles needed to access the functionality.</li>                                    
					</ul>
					<p><span class="run-in">Where to find the macro: 						<a href="CAAScdFeaFastenersSource.htm">
					CAAScdFeaFastenersSource.htm</a></span></p>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td>
		<p>This use case can be divided in seven steps:</p>
		<ol>
			<li><a href="#Step1">Retrieving the active product</a></li>
			<li><a href="#Step2">Retrieving the publications and composing links</a></li>
			<li><a href="#Step3">Creating and initializing a core material</a></li>
			<li><a href="#Step4">Creating an engineering connection</a></li>
			<li><a href="#Step5">Creating the FEM representation and retrieving its root object</a></li>
			<li><a href="#Step6">Creating and initializing a line fastener connection property</a></li>
			<li><a href="#Step7">Creating and initializing a point fastener connection property</a></li>
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Retrieving the active product</strong></p>
			<p>As a first step, the UC retrieves the active product. </p>
<pre class="code">... 
<span class="keyword">Dim </span>myEditor<span class="keyword"> As </span>Editor
<span class="keyword">Set </span>myEditor = CATIA.ActiveEditor

<span class="keyword">Dim </span>myProdService<span class="keyword"> As </span>PLMProductService
<span class="keyword">Set </span>myProdService = myEditor.GetService(&quot;PLMProductService&quot;)

<span class="keyword">Dim </span>myEntities<span class="keyword"> As </span>PLMEntities
<span class="keyword">Set </span>myEntities = myProdService.EditedContent

<span class="keyword">Dim </span>myRootProduct<span class="keyword"> As </span>VPMReference
<span class="keyword">Set </span>myRootProduct = myEntities.Item(1)
...
</pre>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieving the publications and composing links</strong></p>
			<p>In this step UC retrieves the publications aggregated by the root 
			product and composes links.</p>
<pre class="code">...
<span class="keyword">Dim </span>myPublications <span class="keyword"> As </span>VPMPublications
<span class="keyword">Set </span>myPublications  = myRootProduct.Publications

<span class="keyword">Dim </span>myPumpHousing<span class="keyword"> As </span>VPMPublication
<span class="keyword">Set </span>myPumpHousing = myPublications.GetItem(&quot;Pump_Housing&quot;)
...
 
<span class="comment">' Composing link to the publication</span>
 
<span class="keyword">Dim </span>myRootOccurrence<span class="keyword"> As </span>VPMRootOccurrence
<span class="keyword">Set </span>myRootOccurrence = myProdService.RootOccurrence

<span class="keyword">Dim </span>myRepInstance<span class="keyword"> As </span>VPMRepInstance
<span class="keyword">Set </span>myRepInstance = Nothing <span class="comment">' Because we use publications</span>

<span class="keyword">Dim </span>myLinkToPumpHousing<span class="keyword"> As </span>AnyObject
<span class="keyword">Set </span>myLinkToPumpHousing = myProdService.ComposeLink(myRootOccurrence, myRepInstance, myPumpHousing)
...
</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>Creating and initializing a core material</strong></p>
			<p>In this step UC creates a core material which will be applied on fastener properties.</p>
			<p>For further information about creating a core material refer to the article
				<a href="../CAAScdMat/CAAScdFeaSimulationMaterialDomain.htm">
					Creating and Modifying Simulation Material Domain</a>.
			</p>
			</li>
			<li>
			<p><strong><a name="Step4"></a>Creating an engineering connection</strong></p>
			<p>In this step UC creates an engineering connection.</p>
			<p>For further information about creating a rigid engineering connection refer to the article
				<a href="../CAAScdAssDesign/CAAScdAssUcCstCreation.htm">
					Creating an Assembly Constraint Between Two Instances of a Basic Pad</a>.
			</p>
			</li>
			<li>
			<p><strong><a name="Step5"></a>Creating the FEM representation and 
			retrieving its root object</strong></p>
			<p>In this step UC creates a new FEM representation object. To 
			perform the creation, a simulation representation factory have to be 
			retrieved on the reference object on which the FEM rep will be 
			aggregated.</p>
			<pre class="code">...
<span class="keyword">Dim</span> myPrdRepFactory <span class="keyword">As</span> SimPrdRepFactory
<span class="keyword">Set</span> myPrdRepFactory = myRootProduct.GetItem(&quot;SimPrdRepFactory&quot;)

<span class="keyword">Dim</span> myFemRepRef <span class="keyword">As</span> VPMRepReference
<span class="keyword">Set</span> myFemRepRef = myPrdRepFactory.CreatePrdRep(&quot;FEM&quot;)

<span class="keyword">Dim</span> myFemRepRoot <span class="keyword">As</span> SimFemRoot
<span class="keyword">Set</span> myFemRepRoot = myFemRepRef.GetItem(&quot;SimFemRoot&quot;)
...
</pre>

			</li>
			<li>
				<p><strong><a name="Step6"></a>Creating and initializing a line fastener connection property</strong></p>
				<p>In this step UC creates a line fastener connection property.</p>
				<pre class="code">...
<span class="comment">' Creating the line fastener connection property</span>

<span class="keyword">Dim</span> myMCXProperties <span class="keyword">As</span> SimMCXProperties
<span class="keyword">Set</span> myMCXProperties = myEngineeringConnection.GetItem(&quot;SimMCXProperties&quot;)

<span class="keyword">Dim</span> myLineFastener <span class="keyword">As</span> SimLineFastener
<span class="keyword">Set</span> myLineFastener = myMCXProperties.Add(&quot;SimLineFastener&quot;, myFemRepRoot)

<span class="comment">' Setting the line fastener connection property supports</span>

<span class="keyword">Dim</span> myLineFastenerLinkAccess <span class="keyword">As</span> SimLinkAccess
<span class="keyword">Set</span> myLineFastenerLinkAccess = myLineFastener.GetItem(&quot;SimLinkAccess&quot;)

myLineFastenerLinkAccess.AddLink &quot;PRD1&quot;, myLinkToPumpHousing <span class="comment">' PRD1 attribute is for master surface</span>
myLineFastenerLinkAccess.AddLink &quot;PRD2&quot;, myLinkToCover <span class="comment">' PRD2 attribute is for slave surface</span>
myLineFastenerLinkAccess.AddLink &quot;Handler1D&quot;, myLinkToLine <span class="comment">' Handler1D attribute is for fasteners placements</span>

<span class="comment">' Setting the line fastener connection property material</span>

<span class="keyword">Dim</span> myLinkToLineFastener <span class="keyword">As</span> AnyObject
<span class="keyword">Set</span> myLinkToLineFastener = myProdService.ComposeLink(myRootOccurrence, Nothing, myLineFastener)

<span class="keyword">Dim</span> myCoreAppliedMaterial <span class="keyword">As</span> AppliedMaterial
myMaterialService.SetMaterialCore myLinkToLineFastener, myCoreMatRef, myCoreAppliedMaterial

<span class="comment">' Setting the line fastener connection property attributes</span>

myLineFastener.ConstructType = SimLineFastenerShell
myLineFastener.CouplingType = SimCouplingKinematic
myLineFastener.MeshCompatibility = SimLineFastenerNonCompatible
myLineFastener.Height = 0.001
myLineFastener.MaximumAngle = 2
myLineFastener.Spacing = 0.003
myLineFastener.Width = 0.004
...
				</pre>
			</li>
			<li>
				<p><strong><a name="Step7"></a>Creating and initializing a point fastener connection property</strong></p>
				<p>In this step UC creates a point fastener connection property.</p>
				<pre class="code">...
<span class="comment">' Creating the point fastener connection property</span>

<span class="keyword">Dim</span> myPointFastener <span class="keyword">As</span> SimPointFastener
<span class="keyword">Set</span> myPointFastener = myMCXProperties.Add(&quot;SimPointFastener&quot;, myFemRepRoot)

<span class="comment">' Setting the point fastener connection property supports</span>

<span class="keyword">Dim</span> myPointFastenerLinkAccess <span class="keyword">As</span> SimLinkAccess
<span class="keyword">Set</span> myPointFastenerLinkAccess = myPointFastener.GetItem(&quot;SimLinkAccess&quot;)

myPointFastenerLinkAccess.AddLink &quot;PRD1&quot;, myLinkToPumpHousing <span class="comment">' PRD1 attribute is for master surface</span>
myPointFastenerLinkAccess.AddLink &quot;PRD2&quot;, myLinkToCover <span class="comment">' PRD2 attribute is for slave surface</span>
myPointFastenerLinkAccess.AddLink &quot;Handler0D&quot;, myLinkToLine <span class="comment">' Handler0D attribute is for fasteners placements</span>

<span class="comment">' Setting the point fastener connection property material</span>

<span class="keyword">Dim</span> myLinkToPointFastener <span class="keyword">As</span> AnyObject
<span class="keyword">Set</span> myLinkToPointFastener = myProdService.ComposeLink(myRootOccurrence, Nothing, myPointFastener)

myMaterialService.SetMaterialCore myLinkToPointFastener, myCoreMatRef, myCoreAppliedMaterial

<span class="comment">' Setting the point fastener connection property attributes</span>

myPointFastener.ConstructType = SimLineFastenerRigid
myPointFastener.CouplingType = SimCouplingKinematic
myPointFastener.FastenerDiameter = 0.002

<span class="keyword">Dim</span> myPointFastenerPlacement <span class="keyword">As</span> SimPointFastenerPlacement
<span class="keyword">Set</span> myPointFastenerPlacement = myPointFastener.PointFastenerPlacement
myPointFastenerPlacement.FastenerPlacementMethod = SimPointFastenerPlacementLine
myPointFastenerPlacement.NumberOfFastenersAlongLines = 20
...
				</pre>
			</li>			
	</ol>
	</td>
	</tr>
</table>	

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
