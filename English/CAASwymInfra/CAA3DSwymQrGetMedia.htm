<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
	<meta http-equiv="Content-Language" content="en-us" />
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
	<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
	<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
	<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
	<title>Get Media</title>
</head>

<body onload="createToc();highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
			<h1><a name="Top"></a>Get Media</h1>
		</td>
	</tr>
</table>

<table class="abstract">
	<tr><td><div id="toc"></div></td></tr>
</table>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<h2><a name="Role"></a>Role</h2>
<p>Returns information about an existing media.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<h2><a name="Request"></a>Request</h2>

<table class="fill">
	<tr><th>&nbsp;Method&nbsp;</th><th>&nbsp;Path&nbsp;</th></tr>
	<tr>
		<td>POST</td>
		<td>api/media/get</td>
	</tr>
</table>

<h3><a name="Parameters"></a>Parameters</h3>
<p>None.</p>
<h3><a name="Post"></a>POST Body</h3>
<p>The value is a JSON composed as follows:</p>
<table class="fill">
	<tr>
		<th>&nbsp;Name&nbsp;</th>
		<th>&nbsp;Require&nbsp;</th>
		<th>&nbsp;Value&nbsp;</th>
		<th>&nbsp;Description&nbsp;</th>
	</tr>
	<tr>
		<td>params</td>
		<td>yes</td>
			<td>The value is a JSON composed as follows:

			<table class="fill">
				<tr>
					<th>&nbsp;Name&nbsp;</th>
					<th>&nbsp;Require&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
				</tr>
				<tr>
					<td>id_media</td>
					<td>yes</td>
					<td>A positive number.</td>
					<td>Identifier of the media to get.</td>
				</tr>
			</table>
			</td>

		<td>Container for all POST parameters.</td>
	</tr>
	<tr>
		<td>request_id</td>
		<td>yes</td>
		<td>0</td>
		<td>For internal use.</td>
	</tr>
</table>

<script type="text/javascript">insertLinkToTop();</script>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<h2><a name="Response"></a>Response</h2>

<p>The response is a standard 3DSwym JSON (see <a href="CAA3DSwymTaAboutWS.htm#JSON">JSON as Output</a>) where the key result is itself a JSON composed as follows:</p>

<table class="fill">
	<tr>
		<th>&nbsp;Key&nbsp;</th>
		<th>&nbsp;Description&nbsp;</th>
		<th>&nbsp;Value&nbsp;</th>
		<th>&nbsp;Applicability&nbsp;</th>
	</tr>
	<tr>
		<td>_acl</td>
		<td>Access Control List (ACL) per action for current user for the media.</td>
		<td>
			<p>The value is a JSON composed as follows:</p>

			<table class="fill">
				<tr>
					<th>&nbsp;Key&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Applicability&nbsp;</th>
				</tr>
				<tr>
					<td>delete</td>
					<td>Delete ACL for the media.</td>
					<td>
						<p>The value is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>access</td>
								<td>Accessibility for the current user.</td>
								<td>
									 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>groupIdentifier</td>
								<td></td>
								<td></td>
								<td>no</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>update</td>
					<td>Update ACL for the media.</td>
					<td>
						<p>The value is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>access</td>
								<td>Accessibility for the current user.</td>
								<td>
									 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>groupIdentifier</td>
								<td></td>
								<td></td>
								<td>no</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
			</table>
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>_acl_comment</td>
		<td>Access Control List (ACL) per action for current user for the media comments.</td>
		<td>
			<p>The value is a JSON composed as follows:</p>

			<table class="fill">
				<tr>
					<th>&nbsp;Key&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Applicability&nbsp;</th>
				</tr>
				<tr>
					<td>insert</td>
					<td>Comments insertion ACL.</td>
					<td>
						<p>The value is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>access</td>
								<td>Accessibility for the current user.</td>
								<td>
									 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>groupIdentifier</td>
								<td></td>
								<td></td>
								<td>no</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
			</table>
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>_community</td>
		<td>Community where the media has been published.</td>
		<td>
			<p>The value is a JSON composed as follows:</p>

			<table class="fill">
				<tr>
					<th>&nbsp;Key&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Applicability&nbsp;</th>
				</tr>
				<tr>
					<td>_acl</td>
					<td>Access Control List (ACL) of the community for the user.</td>
					<td>
						<p>The value is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>Dsi_Ideation_Ideation</td>
								<td>ACL for Ideas in the community.</td>
								<td>
									<p>The value is a JSON composed as follows:</p>

									<table class="fill">
										<tr>
											<th>&nbsp;Key&nbsp;</th>
											<th>&nbsp;Description&nbsp;</th>
											<th>&nbsp;Value&nbsp;</th>
											<th>&nbsp;Applicability&nbsp;</th>
										</tr>
										<tr>
											<td>insert</td>
											<td>insertion ACL for the user.</td>
											<td>
												<p>The value is a JSON composed as follows:</p>

												<table class="fill">
													<tr>
														<th>&nbsp;Key&nbsp;</th>
														<th>&nbsp;Description&nbsp;</th>
														<th>&nbsp;Value&nbsp;</th>
														<th>&nbsp;Applicability&nbsp;</th>
													</tr>
													<tr>
														<td>access</td>
														<td>Accessibility for the current user.</td>
														<td>
															 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
														</td>
														<td>yes</td>
													</tr>
													<tr>
														<td>privilege</td>
														<td></td>
														<td></td>
														<td>no</td>
													</tr>
												</table>
											</td>
											<td>yes</td>
										</tr>
									</table>
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>Media</td>
								<td>ACL for Media uploading in the community.</td>
								<td>
									<p>The value is a JSON composed as follows:</p>

									<table class="fill">
										<tr>
											<th>&nbsp;Key&nbsp;</th>
											<th>&nbsp;Description&nbsp;</th>
											<th>&nbsp;Value&nbsp;</th>
											<th>&nbsp;Applicability&nbsp;</th>
										</tr>
										<tr>
											<td>insert</td>
											<td>insertion ACL for the user.</td>
											<td>
												<p>The value is a JSON composed as follows:</p>

												<table class="fill">
													<tr>
														<th>&nbsp;Key&nbsp;</th>
														<th>&nbsp;Description&nbsp;</th>
														<th>&nbsp;Value&nbsp;</th>
														<th>&nbsp;Applicability&nbsp;</th>
													</tr>
													<tr>
														<td>access</td>
														<td>Accessibility for the current user.</td>
														<td>
															 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
														</td>
														<td>yes</td>
													</tr>
													<tr>
														<td>privilege</td>
														<td></td>
														<td></td>
														<td>no</td>
													</tr>
												</table>
											</td>
											<td>yes</td>
										</tr>
									</table>
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>Post</td>
								<td>ACL for Post creation in the community.</td>
								<td>
									<p>The value is a JSON composed as follows:</p>

									<table class="fill">
										<tr>
											<th>&nbsp;Key&nbsp;</th>
											<th>&nbsp;Description&nbsp;</th>
											<th>&nbsp;Value&nbsp;</th>
											<th>&nbsp;Applicability&nbsp;</th>
										</tr>
										<tr>
											<td>insert</td>
											<td>insertion ACL for the user.</td>
											<td>
												<p>The value is a JSON composed as follows:</p>

												<table class="fill">
													<tr>
														<th>&nbsp;Key&nbsp;</th>
														<th>&nbsp;Description&nbsp;</th>
														<th>&nbsp;Value&nbsp;</th>
														<th>&nbsp;Applicability&nbsp;</th>
													</tr>
													<tr>
														<td>access</td>
														<td>Accessibility for the current user.</td>
														<td>
															 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
														</td>
														<td>yes</td>
													</tr>
													<tr>
														<td>privilege</td>
														<td></td>
														<td></td>
														<td>no</td>
													</tr>
												</table>
											</td>
											<td>yes</td>
										</tr>
									</table>
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>QnaQuestion</td>
								<td>ACL for asking Question in the community.</td>
								<td>
									<p>The value is a JSON composed as follows:</p>

									<table class="fill">
										<tr>
											<th>&nbsp;Key&nbsp;</th>
											<th>&nbsp;Description&nbsp;</th>
											<th>&nbsp;Value&nbsp;</th>
											<th>&nbsp;Applicability&nbsp;</th>
										</tr>
										<tr>
											<td>insert</td>
											<td>insertion ACL for the user.</td>
											<td>
												<p>The value is a JSON composed as follows:</p>

												<table class="fill">
													<tr>
														<th>&nbsp;Key&nbsp;</th>
														<th>&nbsp;Description&nbsp;</th>
														<th>&nbsp;Value&nbsp;</th>
														<th>&nbsp;Applicability&nbsp;</th>
													</tr>
													<tr>
														<td>access</td>
														<td>Accessibility for the current user.</td>
														<td>
															 A boolean: <ul> <li>true: current user can access.</li> <li>false: current user cannot access.</li> </ul> 
														</td>
														<td>yes</td>
													</tr>
													<tr>
														<td>privilege</td>
														<td></td>
														<td></td>
														<td>no</td>
													</tr>
												</table>
											</td>
											<td>yes</td>
										</tr>
									</table>
								</td>
								<td>yes</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>access</td>
					<td>Visibility of the community by the employees of the platform.</td>
					<td>
						 A number, possible values are: <ul> <li>0: private ; community is returned in search results but cannot be accessed by employees. </li> <li>1: public ; every employee on the platform can see it. </li> <li>4: secret ; community is not returned in search results and cannot be accessed by employees. </li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>content_update</td>
					<td>Last update date of the content in the community.</td>
					<td>
						A date (see <a href="CAA3DSwymTaAboutWS.htm#DateFormatting">Date Format</a>).
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>crdate</td>
					<td>Community creation date.</td>
					<td>
						A date (see <a href="CAA3DSwymTaAboutWS.htm#DateFormatting">Date Format</a>).
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>description</td>
					<td>The description of the community.</td>
					<td>
						
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>extranet_access</td>
					<td>Visibility of the community for contractors of the platform.</td>
					<td>
						 A number. Possible values are: <ul> <li>0: private ; community is returned in search results but cannot be accessed by partners. </li> <li>1: public ; everybody on the platform can see it. </li> <li>4: secret ; community is not returned in search results and cannot be accessed by partners. </li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>extranet_access_enabled</td>
					<td>Community visibility for contractors of the platform.</td>
					<td>
						 A boolean: <ul> <li>0: the community cannot be seen by partners. </li> <li>1: the community can be seen by partners. </li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>id</td>
					<td>Community identifier.</td>
					<td>
						A positive number.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>ideation_is_enabled</td>
					<td>Status of ideation on the community.</td>
					<td>
						 A boolean: <ul> <li>1: ideation is enabled on the community.</li> <li>0: ideation is not enabled on the community.</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>ideation_min_acl</td>
					<td>Minimum current user access level for Ideation creation.</td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor.</li> <li>2: author.</li> <li>3: owner.</li> <li>4: super user, a.k.a. platform administrator (disabled for most users).</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>ideation_status_min_acl</td>
					<td>Minimum current user access level for edition of Ideation status.</td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor.</li> <li>2: author.</li> <li>3: owner.</li> <li>4: super user, a.k.a. platform administrator (disabled for most users).</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>logo</td>
					<td>How the community thumbnail is defined.</td>
					<td>
						 A number. Possible values are: <ul> <li>0: default logo.</li> <li>1: community specific logo.</li> <li>2: media thumbnail.</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>logo_media_id</td>
					<td> The identifier of the media for which the thumbnail is the community thumbnail. The value is only valid if the logo comes from a media.  (i.e. the value of the key <em>logo</em> equals 2) </td>
					<td>
						null or a number.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>postit</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>postit_title</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>qna_is_enabled</td>
					<td>Are Questions enabled on the community?</td>
					<td>
						A boolean. <ul> <li>0:  </li> <li>1:  </li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>qna_min_acl</td>
					<td> Minimum user access level for iQuestions edition.  </td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor </li> <li>2: author </li> <li>3: owner </li> <li>4: super user, a.k.a. platform administrator</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>share_is_enabled</td>
					<td>Sharing policy on social network for the community.</td>
					<td>
						 A boolean: <ul> <li>true: share on social network is enabled on the community.</li> <li>false: share on social network is not enabled on the community.</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>short_title</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>stats_min_acl</td>
					<td> Minimum user access level for Statistics tab in the User Interface. For instance, if set to 3, user has to be owner in the community to see the <em>Statistics</em> tab. </td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor.</li> <li>2: author.</li> <li>3: owner.</li> <li>4: super user, a.k.a. platform administrator (disabled for most users).</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>survey_is_enabled</td>
					<td>Survey activation on this community.</td>
					<td>
						A boolean: <ul> <li>0: the community does not have a survey. </li> <li>1: the community has a survey. </li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>survey_min_acl</td>
					<td>Minimum user access level for survey creation.</td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor.</li> <li>2: author.</li> <li>3: owner.</li> <li>4: super user, a.k.a. platform administrator (disabled for most users).</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>tenant_id</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>this->getCurrentUserRights</td>
					<td> Defines current user access to the community. </td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor ; user can read content in the community depending on moderation rules and write comments.</li> <li>2: author ; same rights than contributor ; user can additionally create content in the community such as Posts.</li> <li>3: co-owner ; same rights than author ; user can additionally accept users in the community and change its settings.</li> <li>4: current user is super user of the platform, a.k.a. platform administrator ; he/she has full access to the community.</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>title</td>
					<td>Title of the community.</td>
					<td>
						A String.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>type_id</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>type_id.title</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>update</td>
					<td> Last update date. </td>
					<td>
						 A date (see <a href="CAA3DSwymTaAboutWS.htm#DateFormatting">Date Format</a>). 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>user_id</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>user_id.first_name</td>
					<td>Main owner of the community first name.</td>
					<td>
						A string.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>user_id.hash_key</td>
					<td>Main owner of the community crypted identifier.</td>
					<td>
						A hash key.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>user_id.last_name</td>
					<td>Main owner of the community last name.</td>
					<td>
						A string.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>user_id.login</td>
					<td>Main owner of the community login.</td>
					<td>
						A string.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>user_id.nickname</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>user_id.picture_update</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>wiki_edit_min_acl</td>
					<td></td>
					<td></td>
					<td>no</td>
				</tr>
				<tr>
					<td>wiki_is_enabled</td>
					<td>Availability of the wiki.</td>
					<td>
						A boolean: <ul> <li>0: the community does not have a wiki. </li> <li>1: the community has a wiki. </li> </ul> 
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>wiki_min_acl</td>
					<td> Minimum user access level for edition of wiki. </td>
					<td>
						 A number. Possible values are: <ul> <li>1: contributor.</li> <li>2: author.</li> <li>3: owner.</li> <li>4: super user, a.k.a. platform administrator (disabled for most users).</li> </ul> 
					</td>
					<td>yes</td>
				</tr>
			</table>
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>best_fit</td>
		<td></td>
		<td>
			A string. Format is <s|m|l>:<width>:<height> (e.g. m:640x480).
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>category_id</td>
		<td>Category identifier to classify the media.</td>
		<td>
			A positive number. The category is one from the list associated to the community where the content has been published.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>category_label</td>
		<td>Category to classify the media.</td>
		<td>
			A string. The category is one from the list associated to the community where the content has been published.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>community_id</td>
		<td>Community identifier the media has been published into.</td>
		<td>
			A positive number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>community_title</td>
		<td>Community title the media has been published into.</td>
		<td>
			A string.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>crdate</td>
		<td>Media creation date.</td>
		<td>
			A date (see <a href="CAA3DSwymTaAboutWS.htm#DateFormatting">Date Format</a>).
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>current_user_endorse</td>
		<td>Current user endorsement status on the media.</td>
		<td>
			 A boolean: <ul> <li>true: current user has endorsed (I like) the content.</li> <li>false: current user has not endorsed (I like) the content.</li> </ul> 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>description</td>
		<td>Media description.</td>
		<td>
			A string.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>download_original_file</td>
		<td>Download enable status of the original media file.</td>
		<td>
			A boolean. <ul> <li>0: download of the original file is disable.</li> <li>1: download of the original file is enable.</li> </ul> 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>height</td>
		<td>Height of the original media file.</td>
		<td>
			A positive number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td><b>id_media</b></td>
		<td>Media identifier.</td>
		<td>
			A positive number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>is_community_logo</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>is_illustration</td>
		<td>Indicates if a picture is an illustration.</td>
		<td>
			A boolean. <ul> <li>0: media is High Semantic and appears in What's New.</li> <li>1: picture is an Illustration.</li> </ul> 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>media_type</td>
		<td>Type of the media.</td>
		<td>
			A string. Possible values are: <ul> <li>document</li> <li>picture</li> <li>sound</li> <li>video</li> <li>3d_model: 3D model</li> <li>drawing</li> </ul> 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>nb_comments</td>
		<td>Number of comments on the media.</td>
		<td>
			A number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>orig_name</td>
		<td>Original source file name.</td>
		<td>
			A string (e.g. CATIA-Systems-Modeling.pptx). 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>original_path</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>play</td>
		<td>Depending on media type, list of available formats and resolution</td>
		<td>
			<p>The value is a JSON composed as follows:</p>

			<table class="fill">
				<tr>
					<th>&nbsp;Key&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Applicability&nbsp;</th>
				</tr>
				<tr>
					<td>download_original_url</td>
					<td>Information for download of original media file.</td>
					<td>
						<p>The value is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>authorized_by_owner</td>
								<td>Download enable status of the original media file. A boolean.0: download of the original file is  disabled.1: download of the original file is enabled.</td>
								<td>
									1
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>format</td>
								<td>File extension of the original file.</td>
								<td>
									png
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>transient_url</td>
								<td>Transient URL to get the original media file if download is authorized.</td>
								<td>
									https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/original/id/32/update/2e3415b08b2eec12caa49737ba52298e.png
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>transient_url_as_attachment</td>
								<td>URL to get the original media file as an attachment triggering a Save as... popup in browsers (not available for for picture view and audio/video play).</td>
								<td>
									https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/original/output/download/id/32/update/2e3415b08b2eec12caa49737ba52298e.png
								</td>
								<td>yes</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>view</td>
					<td>For pictures, available sizes ; for audio and video, similar section for streaming is called av_streams ;  for 3d models, similar section is called 3d_streams</td>
					<td>
						<p>The value is an array. Each element of the array is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>alias</td>
								<td>Alias of the size ; for example, m for medium.</td>
								<td>
									s
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>format</td>
								<td>File extension of the picture ; usually, png.</td>
								<td>
									png
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>size</td>
								<td>Image size, widthxheight in pixels ; ex: 640x680.</td>
								<td>
									A positive number. Value in bytes.
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>transient_url</td>
								<td>Transient URL to get the image. See "Image as Output" section of the technical article</td>
								<td>
									https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/picture/id/32/key/s/update/2e3415b08b2eec12caa49737ba52298e.png
								</td>
								<td>yes</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
			</table>
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>preview</td>
		<td> Available preview in different sizes.  </td>
		<td>
			<p>The value is a JSON composed as follows:</p>

			<table class="fill">
				<tr>
					<th>&nbsp;Key&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Applicability&nbsp;</th>
				</tr>
				<tr>
					<td>thumbnails</td>
					<td> Available 2D thumbnails in different sizes.  </td>
					<td>
						<p>The value is an array. Each element of the array is a JSON composed as follows:</p>

						<table class="fill">
							<tr>
								<th>&nbsp;Key&nbsp;</th>
								<th>&nbsp;Description&nbsp;</th>
								<th>&nbsp;Value&nbsp;</th>
								<th>&nbsp;Applicability&nbsp;</th>
							</tr>
							<tr>
								<td>alias</td>
								<td>Alias of the thumbnail ; for example, s for small.</td>
								<td>
									s
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>format</td>
								<td>File extension of the thumbnail ; usually, png.</td>
								<td>
									png
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>size</td>
								<td>Image size, widthxheight in pixels ; ex: 66x50.</td>
								<td>
									A positive number. Value in bytes.
								</td>
								<td>yes</td>
							</tr>
							<tr>
								<td>transient_url</td>
								<td>Transient URL to get the image. See "Image as Output" section of the technical article</td>
								<td>
									https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/thumb/id/32/key/s_thumb/update/2e3415b08b2eec12caa49737ba52298e.png
								</td>
								<td>yes</td>
							</tr>
						</table>
					</td>
					<td>yes</td>
				</tr>
			</table>
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>preview_fingerprint</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>processed_path</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>published</td>
		<td>Indicates if the media is published or is a draft.</td>
		<td>
			 A boolean: <ul> <li>0: draft (not published). </li> <li>1: published. </li> </ul> 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>ratio</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>size</td>
		<td>Size of the original media file.</td>
		<td>
			A positive number. Value in bytes.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>stats_comments</td>
		<td>Number of comments on the media.</td>
		<td>
			A number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>stats_nb_endorse</td>
		<td>Number of endorsements (I like) on the media.</td>
		<td>
			A number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>stats_viewed</td>
		<td>Number of times the media has been viewed.</td>
		<td>
			A number. A object is considered has viewed if its URL has been loaded.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>status</td>
		<td>Status of the media.</td>
		<td>
			A string. Possible values are: <ul> <li>ready-to-process:</li> <li>processing:</li> <li>processed:</li> <li>non-processed:</li> <li>Error:</li> </ul> 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>subject6wuri</td>
		<td>Current Object Identification for 6W Tagging</td>
		<td>
			swym:dev:1:community:2
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>sys_name</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>tags6w</td>
		<td>structure describing for each 6W Explicit Tag its predicate, its identifier and its value</td>
		<td>
			
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>tags6w_implicit</td>
		<td>structure describing for each 6W Implicit Tag its predicate and its value ; implicit tags are deduced from attributes</td>
		<td>
			<p>The value is an array. Each element of the array is a JSON composed as follows:</p>

			<table class="fill">
				<tr>
					<th>&nbsp;Key&nbsp;</th>
					<th>&nbsp;Description&nbsp;</th>
					<th>&nbsp;Value&nbsp;</th>
					<th>&nbsp;Applicability&nbsp;</th>
				</tr>
				<tr>
					<td>predicate</td>
					<td>predicate</td>
					<td>
						ds6w:who/ds6w:responsible
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>tag</td>
					<td>Value of the tag.</td>
					<td>
						A string.
					</td>
					<td>yes</td>
				</tr>
				<tr>
					<td>type</td>
					<td>type of the tag</td>
					<td>
						xsd:string or xsd:date
					</td>
					<td>yes</td>
				</tr>
			</table>
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>this->getCommunity</td>
		<td>Community identifier into which the media has been published.</td>
		<td>
			A positive number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>title</td>
		<td>Media title.</td>
		<td>
			A String.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>update</td>
		<td>Last update date of the media.</td>
		<td>
			 A date (see <a href="CAA3DSwymTaAboutWS.htm#DateFormatting">Date Format</a>). 
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>user.first_name</td>
		<td>Media uploader first name.</td>
		<td>
			Enovia
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>user.hash_key</td>
		<td>Media uploader crypted identifier.</td>
		<td>
			9ced08a9938135f7af531b45d87dc8a9
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>user.id</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>user.last_name</td>
		<td>Media uploader last name.</td>
		<td>
			Enovia_Cloud
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>user.nickname</td>
		<td>Media uploader display name.</td>
		<td>
			Enovia Enovia_Cloud
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>user.picture_update</td>
		<td>Media uploader picture last update date.</td>
		<td>
			2016-02-09 07:33:44
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>user_id</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>user_picture_fingerprint</td>
		<td></td>
		<td></td>
		<td>no</td>
	</tr>
	<tr>
		<td>username</td>
		<td>Username, identifies the user.</td>
		<td>
			A String.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>viewed</td>
		<td>Number of times the media has been viewed. A media is considered has viewed if its URL has been loaded.</td>
		<td>
			A number.
		</td>
		<td>yes</td>
	</tr>
	<tr>
		<td>width</td>
		<td>Width of the original media file.</td>
		<td>
			A positive number.
		</td>
		<td>yes</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<h2><a name="Example"></a>Example</h2>
<p>Example of trace file</p>

<pre class="code">
##CLIENT REQUEST
##------------------------------------------------------------
[POST] https://&lt;3DSwym Server Authority&gt;/api/media/get
  [HEADER] X-DS-SWYM-CSRFTOKEN (CSRF token): 23d1ef6f
POST Data : {"request_id":"0","params":{"id_media":"32"}}
Content-Type=application/json; charset=UTF-8

##SERVER RESPONSE [200] OK
##--------------------

#RESPONSE HEADER : 
#--------------------
HTTP/1.1 200 OK
Date: Tue, 09 Feb 2016 09:58:51 GMT
Server: Apache/2.2.23 (Unix) mod_ssl/2.2.23 OpenSSL/1.0.1e-fips PHP/5.5.26
X-Powered-By: PHP/5.5.26
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Pragma: no-cache
Cache-Control: no-cache
X-H: 1,0,8,1,6,1,8,7,2
Content-Length: 5648
Content-Type: application/json
Vary: Accept-Encoding
Keep-Alive: timeout=5, max=98
Connection: Keep-Alive

#RESPONSE BODY
#--------------------
{
  "monitoring": {"last_exec_time": 0.27441620826721},
  "nb_result": 1,
  "request_id": "0",
  "result": {
    "_acl": {
      "delete": {
        "access": true,
        "groupIdentifier": "CONTENT_OWNER"
      },
      "update": {
        "access": true,
        "groupIdentifier": "CONTENT_OWNER"
      }
    },
    "_acl_comment": {"insert": {
      "access": true,
      "groupIdentifier": "COMMUNITY_OWNER"
    }},
    "_community": {
      "_acl": {
        "Dsi_Ideation_Ideation": {"insert": {
          "access": true,
          "privilege": "COMMUNITY_OWNER"
        }},
        "Media": {"insert": {
          "access": true,
          "privilege": "COMMUNITY_OWNER"
        }},
        "Post": {"insert": {
          "access": true,
          "privilege": "COMMUNITY_OWNER"
        }},
        "QnaQuestion": {"insert": {
          "access": true,
          "privilege": "COMMUNITY_OWNER"
        }}
      },
      "access": "4",
      "content_update": "2016-02-09 09:58:51",
      "crdate": "2016-02-09 09:48:45",
      "description": "Jolie communautÃ©",
      "extranet_access": "4",
      "extranet_access_enabled": "1",
      "id": "13",
      "ideation_is_enabled": true,
      "ideation_min_acl": "2",
      "ideation_status_min_acl": "3",
      "logo": "",
      "logo_media_id": "1",
      "postit": "Le postit de la communautÃ© de test ws",
      "postit_title": "",
      "qna_is_enabled": true,
      "qna_min_acl": "2",
      "share_is_enabled": false,
      "short_title": "",
      "stats_min_acl": "3",
      "survey_is_enabled": true,
      "survey_min_acl": "2",
      "tenant_id": "1",
      "this-&gt;getCurrentUserRights": "3",
      "title": "EGD-Test-A-iJfaov++++++3++8UA+84",
      "type_id": "4",
      "type_id.title": "operation_type_title",
      "update": "2016-02-09 09:58:51",
      "user_id": "2",
      "user_id.first_name": "Enovia",
      "user_id.hash_key": "9ced08a9938135f7af531b45d87dc8a9",
      "user_id.last_name": "Enovia_Cloud",
      "user_id.login": "enovia_cloud",
      "user_id.nickname": "Enovia Enovia_Cloud",
      "user_id.picture_update": "2016-02-09 07:33:44",
      "wiki_edit_min_acl": "2",
      "wiki_is_enabled": true,
      "wiki_min_acl": "2"
    },
    "best_fit": "m:640x480",
    "category_id": "13",
    "category_label": "Other",
    "community_id": "13",
    "community_title": "EGD-Test-A-iJfaov++++++3++8UA+84",
    "crdate": "2016-02-09 09:48:48",
    "current_user_endorse": false,
    "description": "media-edit-description",
    "download_original_file": "1",
    "height": "506",
    "id_media": "32",
    "is_community_logo": false,
    "is_illustration": "0",
    "media_type": "picture",
    "nb_comments": "0",
    "orig_name": "ArchiPicture.png",
    "original_path": "dc/d5/enovia_cloud/2016/02/09",
    "play": {
      "download_original_url": {
        "authorized_by_owner": "1",
        "format": "png",
        "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/original/id/32/update/2e3415b08b2eec12caa49737ba52298e.png",
        "transient_url_as_attachment": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/original/output/download/id/32/update/2e3415b08b2eec12caa49737ba52298e.png"
      },
      "view": [
        {
          "alias": "s",
          "format": "png",
          "size": "320x240",
          "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/picture/id/32/key/s/update/2e3415b08b2eec12caa49737ba52298e.png"
        },
        {
          "alias": "m",
          "format": "png",
          "size": "640x480",
          "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/picture/id/32/key/m/update/2e3415b08b2eec12caa49737ba52298e.png"
        },
        {
          "alias": "l",
          "format": "png",
          "size": "960x800",
          "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/picture/id/32/key/l/update/2e3415b08b2eec12caa49737ba52298e.png"
        }
      ]
    },
    "preview": {"thumbnails": [
      {
        "alias": "s",
        "format": "png",
        "size": "66x50",
        "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/thumb/id/32/key/s_thumb/update/2e3415b08b2eec12caa49737ba52298e.png"
      },
      {
        "alias": "m",
        "format": "png",
        "size": "200x150",
        "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/thumb/id/32/key/m_thumb/update/2e3415b08b2eec12caa49737ba52298e.png"
      },
      {
        "alias": "l",
        "format": "png",
        "size": "320x240",
        "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/thumb/id/32/key/l_thumb/update/2e3415b08b2eec12caa49737ba52298e.png"
      },
      {
        "alias": "xl",
        "format": "png",
        "size": "520x390",
        "transient_url": "https://&lt;3DSwym Server Authority&gt;/api/media/stream/type/thumb/id/32/key/xl_thumb/update/2e3415b08b2eec12caa49737ba52298e.png"
      }
    ]},
    "preview_fingerprint": "2e3415b08b2eec12caa49737ba52298e",
    "processed_path": "dc/d5/enovia_cloud/2016/02/09",
    "published": "1",
    "ratio": "2/1",
    "size": "310023",
    "stats_comments": "0",
    "stats_nb_endorse": "0",
    "stats_viewed": "0",
    "status": "processed",
    "subject6wuri": "swym:66aa8ab9-ca58-431e-9cf3-8872d09a68fd:OID3DSWYMONLY:media:32",
    "sys_name": "ebcf21e52e1bae0d6fc66ebe5e252132.png",
    "tags6w": [],
    "tags6w_implicit": [
      {
        "predicate": "ds6w:who/ds6w:responsible",
        "tag": "Enovia Enovia_Cloud",
        "type": "xsd:string"
      },
      {
        "predicate": "ds6w:when/ds6w:modified",
        "tag": "2016-02-09 09:58:50",
        "type": "xsd:date"
      },
      {
        "predicate": "ds6w:when/ds6w:created",
        "tag": "2016-02-09 09:48:48",
        "type": "xsd:date"
      },
      {
        "predicate": "ds6w:where/ds6w:context/ds6w:community",
        "tag": "EGD-Test-A-iJfaov++++++3++8UA+84",
        "type": "xsd:string"
      },
      {
        "predicate": "ds6w:what/ds6w:type",
        "tag": "swym:Picture",
        "type": "xsd:string"
      },
      {
        "predicate": "ds6w:what/ds6w:social/ds6w:comments",
        "tag": "0",
        "type": "xsd:integer"
      },
      {
        "predicate": "ds6w:what/ds6w:social/ds6w:endorsements",
        "tag": "0",
        "type": "xsd:integer"
      },
      {
        "predicate": "ds6w:what/ds6w:kind",
        "tag": "ds6w:kind.swym_highsemanticmedia",
        "type": "xsd:string"
      },
      {
        "predicate": "ds6w:what/ds6w:category",
        "tag": "Other",
        "type": "xsd:string"
      }
    ],
    "this-&gt;getCommunity": "13",
    "title": "media-edit-title",
    "update": "2016-02-09 09:58:50",
    "user.first_name": "Enovia",
    "user.hash_key": "9ced08a9938135f7af531b45d87dc8a9",
    "user.id": "2",
    "user.last_name": "Enovia_Cloud",
    "user.nickname": "Enovia Enovia_Cloud",
    "user.picture_update": "2016-02-09 07:33:44",
    "user_id": "2",
    "user_picture_fingerprint": "0a009574d59003c10282ae22ddfc901a",
    "username": "enovia_cloud",
    "viewed": "0",
    "width": "971"
  }
}
</pre>

<script type="text/javascript">insertCopyright();</script>
</body>
</html>

