<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Testing SFD Collar</title>
<style type="text/css">
.style1 {
	color: #1A79B1;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Testing SFD Collar</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to retrieve and set collar information.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASfdTestCollar Use Case</a>
			<ul>
				<li><a href="#What">What does CAASfdTestCollar do</a></li>
				<li><a href="#How">How to Launch CAASfdTestCollar</a></li>
				<li><a href="#Where">Where to Find the CAASfdTestCollar 
				code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SFD(Structure Functional Design) Interfaces. Its main intent is to allow you to retrieve and set collar information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASfdTestCollar Use Case</h2>
<p>CAASfdTestCollar.m is a use case of the CAAStructureFuncDesignDoc.edu framework 
that illustrates the CATIA SFD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASfdTestCollar Do?</h3>
<p>The goal of CAASfdTestCollar use case is to show how to retrieve and set collar information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASfdTestCollar ?</h3>
<p>To launch CAASfdTestCollar, you will need to set up the build time 
environment, then compile CAASfdTestCollar along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASfdTestCollar Repository Server Login_ticket Title Version&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		PLM1</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>Login_ticket</th>
		<td>The login ticket to connect to the base.</td>
	</tr>
	<tr>
		<th>Title</th>
		<td>The Title of a PLM Reference or PLM Representation Reference be browsed.</td>
	</tr>
	<tr>
		<th>Version</th>
		<td>Version</td>
	</tr>
</table>
<p>* The input model is retrieved by importing the <strong>CAASfdTestCollar.3dxml</strong>
    file from the  <strong>CAAStructureFuncDesign.edu</strong> framework.
</p>
<pre class="code">
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdCGR.3dxml</code>
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdSR.3dxml</code>
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdSteel_A90.3dxml</code>
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdL8x8x1.3dxml</code>
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdTestCollar.3dxml</code></pre>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>Title</strong></code></a>:
    <code>SFD_Collar</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASfdTestCollar Code</h3>
<p>The CAASfdTestCollar sample is made of a single class named CAASfdTestCollar 
located in the CAASfdTestCollar.m module of the CAAStructureFuncDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\CAASfdTestCollar.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table>
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCollarMngt</em></td>
		<td>Interface to manage Collar.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCollar</em></td>
		<td>Interface to create collar.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 10 logical steps in Main:</p>
<table>
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Creating a Session</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Opening the P<span class="style1">roduct</span></a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Getting the CATIMmiPrtContainer and Part from It</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Retrieving &quot;Longitudinal Bulkhead_2&quot;</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Retrieving CATIStrUseSlotMngt Interface and Slot from it</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Retrieving CATIStrUseCollarMngt Interface and Collar from it</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Retrieving Collar Methods</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Test CATIStrUseCollarMngt Methods</a></td>
	</tr>

	
	<tr>
		<td>10</td>
		<td><a href="#Step11">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
 if (6 != argc)
 {
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;CAASfdTestCollar &lt;Repository&gt; &lt;Server&gt; &lt;Login_ticket&gt; &lt;Title&gt; &lt;Version&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Login_ticket: The login ticket to connect to the base.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;Title: The Title of a PLM Reference or PLM Representation Reference be browsed. &quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Version: Version.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
  retCode = 1;
  goto EscapeWay;
 }

   //------------------------------------------------------------------
  // - For Setting Repository
  //------------------------------------------------------------------  
  repository = argv[1];

  //------------------------------------------------------------------
  // - For creation of session
  //------------------------------------------------------------------
  cout &lt;&lt;&quot;   Connection Parameters init: begin&quot; &lt;&lt; endl;
  server_name = argv[2];
  login_ticket = argv[3];
  comp_title  = argv[4];
  comp_version = argv[5]; 
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Creating a Session</h3>
<pre class="code">...
 retCode = CAASfdGeneralServices::InitSession(repository,server_name,login_ticket);
  if(retCode != 0)
	goto EscapeWay;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Opening the Product</h3>
<pre class="code">...
  retCode = CAASfdGeneralServices::OpenProduct(comp_title, &quot;&quot, comp_version,spRepOnRoot,Bag);
  if(retCode != 0)
	goto EscapeWay;
  CHK_SP_EQ(NULL_var, spRepOnRoot, retCode, 12);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Getting the CATIMmiPrtContainer and Part from It</h3>
<pre class="code">...
  hr  =  SwitchToDesignModeAndReturnPartContainer(pIPLMProduct,pIPrtCont,pPlatePart);  
  if((NULL == pIPrtCont) || (NULL == pPlatePart)) 
  {  
    retCode  =  13;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving "Longitudinal Bulkhead_2"</h3>
<pre class="code">...
  hr = GetPartObj(pPlatePart,"Longitudinal Bulkhead_2", spSfdPanel);
  if(NULL_var == spSfdPanel)  
  {  
    retCode = 14;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Retrieving CATIStrUseSlotMngt Interface and Slot from it</h3>
<pre class="code">...
  spStrSlotMngt = spSfdPanel;
  if(NULL_var == spStrSlotMngt)  
  {  
    retCode = 15;  
    goto EscapeWay;  
  }  
  hr = spStrSlotMngt-&gt;GetSlots(spListOfSlot);
  if(!SUCCEEDED(hr))
  {
    retCode = 16;
    goto EscapeWay;
  }
  spSlot = spListOfSlot[1];
  if(NULL_var == spSlot)  
  {  
    retCode = 17;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Retrieving CATIStrUseCollarMngt Interface and Collar from it</h3>
<pre class="code">...
  spStrCollarMngt = spSlot;
  if(NULL_var == spStrCollarMngt)  
  {  
    retCode = 18;  
    goto EscapeWay;  
  }
  hr = spStrCollarMngt-&gt;GetCollars( spListOfCollars );
  if(!SUCCEEDED(hr))
  {
    retCode = 19;
    goto EscapeWay;
  }
  spStrCollar = spListOfCollars[1];
  if(NULL_var == spStrCollar)
  {
    retCode = 20;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<h3><a name="Step8"></a>Retrieving Collar Methods</h3>
<pre class="code">...
  hr = spStrCollar-&gt;<strong>SetMaterial</strong> ("Steel A90");
  if(!SUCCEEDED(hr))
  {
    retCode = 21;
    goto EscapeWay;
  }
  hr = spStrCollar-&gt;<strong>GetMaterial</strong> (sCollarMaterial);
  if(!SUCCEEDED(hr))
  {
    retCode = 22;
    goto EscapeWay;
  }
  hr = spStrCollar-&gt;<strong>SetMaterialThrowOrientation</strong> (catStrCollarThrowOrientationNormal);
  if(!SUCCEEDED(hr))
  {
    retCode = 23;
    goto EscapeWay;
  }
  hr = spStrCollar-&gt;<strong>GetMaterialThrowOrientation</strong> (oCollarMaterialThrowOrientation);
  if(NULL == oCollarMaterialThrowOrientation)
  {
    return hr;
  }
  hr = spStrCollar-&gt;<strong>GetThickness</strong> (spCollarThickness);
  spCollarThickness-&gt;Valuate(sValue);
  if(!SUCCEEDED(hr))  
  {
    retCode = 24;
    goto EscapeWay;
  }
  hr = spStrCollar-&gt;<strong>GetParameters</strong> (spListOfParameters);
  if(!SUCCEEDED(hr))  
  {
    retCode = 25;
    goto EscapeWay;
  }
  if( spListOfParameters.Size() &gt; 0 )
  {
      CATUnicodeString sValue_1 = "205mm";
      CATUnicodeString sValue_2 = "35deg";
      spListOfParameters[1]-&gt;Valuate(sValue_1);
      spListOfParameters[2]-&gt;Valuate(sValue_2);
  }
...</pre>

<p>
SetMaterial/GetMaterial: 
Sets and gets the material of collar resp.</p>
<p>
SetMaterialThrowOrientation/GetMaterialThrowOrientation: 
Sets and gets the collar material throw orientation resp. 0 -&gt; catStrCollarThrowOrientationInvert, 1 -&gt; catStrCollarThrowOrientationNormal, 2 -&gt; catStrCollarThrowOrientationCentered</p>
<p>
GetThickness: 
Gets the thickness of collar. Valuate it as required.</p>
<p>
GetParameters: 
Get the public parameters of collar. Valuate them as required.</p>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Test CATIStrUseCollarMngt Methods</h3>
<pre class="code">...
  hr = TestCATIStrUseCollarMngt(spSlot);
  if(!SUCCEEDED(hr))
  {
    retCode = 26;
    goto EscapeWay;
  }
...</pre>

<pre class="code">...
  CATIStrUseCollarMngt_var   spStrCollarMngt;
  spStrCollarMngt = ispSlot;
  if(NULL_var == spStrCollarMngt)  
    return hr;
  CATIMmiMechanicalFeature_var spCollar;
  hr = spStrCollarMngt-&gt;AddCollar(spCollar);
  if(!SUCCEEDED(hr))  
    return hr;
  hr = spStrCollarMngt-&gt;RemoveCollar(spCollar);
  if(!SUCCEEDED(hr))  
    return hr;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
 int retCodeForClose = 0;
  retCodeForClose = CAASfdGeneralServices::CloseSession();
  if (retCodeForClose != 0) 
  {
    cout  &lt;&lt;&quot;The SESSION is not Closed &quot;&lt;&lt;endl;
	if(retCode == 0)
		retCode = retCodeForClose;
  }
...</pre>

<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to test sfd collar.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Dec 2012]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>



