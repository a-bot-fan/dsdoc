<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating SFD UserConnection</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Creating SFD UserConnection</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to create UserConnection.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASfdCreateUserConnection Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASfdCreateUserConnection Do</a></li>
				<li><a href="#How">How to Launch CAASfdCreateUserConnection</a></li>
				<li><a href="#Where">Where to Find the CAASfdCreateUserConnection 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SFD(Structure Functional Design) Interfaces. Its main intent is to allow you to create UserConnection.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASfdCreateUserConnection Use Case</h2>
<p>CAASfdCreateUserConnection.m is a use case of the CAAStructureFuncDesignDoc.edu framework 
that illustrates the CATIA SFD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASfdCreateUserConnection Do</h3>
<p>The goal of CAASfdCreateUserConnection use case is to show how to create  
UserConnection.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASfdCreateUserConnection</h3>
<p>To launch CAASfdCreateUserConnection , you will need to set up the build time 
environment, then compile CAASfdCreateUserConnection along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASfdCreateUserConnection Repository Server LoginTicket Title Version&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>LoginTicket</th>
		<td>Defined by one string</td>
	</tr>
	<tr>
		<th>Title</th>
		<td>The Title of a PLM Reference or PLM Representation Reference be browsed.</td>
	</tr>
	<tr>
		<th>Version</th>
		<td>Version</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>CAASfdCreateUserConnection.3dxml</strong>
    file from the  <strong>CAAStructureFuncDesign.edu</strong> framework.
</p>
<p>
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdCGR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdSR.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdSteel_A42.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdWT18x179_5.3dxml</code><br />
<code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\InputData\CAASfdCreateUserConnection.3dxml</code>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>Title</strong></code></a>:
    <code>SfdProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASfdCreateUserConnection Code</h3>
<p>The CAASfdCreateUserConnection sample is made of a single class named CAASfdCreateUserConnection 
located in the CAASfdCreateUserConnection.m module of the CAAStructureFuncDesign.edu 
framework: <code>InstallRootFolder\CAADoc\CAAStructureFuncDesign.edu\CAASfdCreateUserConnection.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCategoryMngt</em></td>
		<td>Interface to set/get category.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseUserConnectionMngt</em></td>
		<td>Interface to manage UserConnection.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseUserConnection</em></td>
		<td>Interface to dedicated to UserConnection.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseDetailFeature</em></td>
		<td>Interface for manage detail feature.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 19 logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;UserConnectionModel&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting the CATIMmiPrtContainer and Part from It</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Retrieving Member.1</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Creating UserConnection</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Setting Category of the UserConnection</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Setting Eeference Element for UserConnection</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Adding Connected Objects</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Setting Intersecting Eelement</a></td>
	</tr>
	<tr>
		<td>16</td>
		<td><a href="#Step16">Updating Detail Feature</a></td>
	</tr>
	<tr>
		<td>17</td>
		<td><a href="#Step17">Updating UserConnection</a></td>
	</tr>
	<tr>
		<td>18</td>
		<td><a href="#Step18">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (8 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAASfdCreateUserConnection &lt;Repository&gt; &lt;Server&gt; &lt;Login Ticket&gt; &lt;Title&gt; &lt;Version&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Login Ticket: Defined by one string.&quot; &lt;&lt;endl ;
cout &lt;&lt;&quot;Title: The Title of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Version: Version&quot; &lt;&lt;endl;
cout &lt;&lt; endl;
retCode = 1;
goto EscapeWay;
}

//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];

//------------------------------------------------------------------
// - For Setting the Connection Parameters
//------------------------------------------------------------------
cout &lt;&lt;&quot;Connection Parameters init: begin&quot; &lt;&lt; endl;
server_name = argv[2];
login_ticket = argv[3];
comp_Title  = argv[4];
comp_version = argv[5];

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
retCode = CAASfdGeneralServices::InitSession(repository,server_name,login_ticket);
if(retCode != 0)
goto EscapeWay;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;UserConnectionModel&quot; Model (arg[4])</h3>
<pre class="code">...
hr = CAASfdGeneralServices::OpenProduct(comp_Title, "" ,comp_version,spRepOnRoot,Bag);
if(FAILED(hr) || (!spRepOnRoot))
{
  cout &lt;&lt;&quot;ERROR Product Opening&quot; &lt;&lt;endl;
  return rc;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the CATIMmiPrtContainer and Part from It</h3>
<pre class="code">...
  hr  =  SwitchToDesignModeAndReturnPartContainer(pIPLMProduct,pIPrtCont,pProfilePart);  
  if((NULL == pIPrtCont) || (NULL == pProfilePart)) 
  {  
    retCode  =  13;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving Member.1</h3>
<pre class="code">...
  hr = GetPartObj(pProfilePart,"Member.1", spSfdMember);
  if(NULL_var == spSfdMember)  
  {  
    retCode = 14;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">    insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Creating UserConnection</h3>
<pre class="code">...
  spStrUserConnectionMngt = spSfdMember;
  if(NULL_var == spStrUserConnectionMngt)  
  {  
    retCode = 15;  
    goto EscapeWay;  
  }

  hr = spStrUserConnectionMngt-&gt;AddUserConnection(spMmiUserConnection);
  spUserConnection = spMmiUserConnection;
  if(NULL_var == spUserConnection)  
  {  
    retCode = 16;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Setting Category of the UserConnection</h3>
<pre class="code">...
  spStrCategoryMngt = spUserConnection; 
  if(NULL_var == spStrCategoryMngt)  
  {  
    retCode = 17;  
    goto EscapeWay;  
  }

  hr = spStrCategoryMngt-&gt;SetCategory("SldUserConnection"); 
  if(FAILED(hr))  
  {  
    retCode = 18;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Setting Reference Element for UserConnection</h3>
<pre class="code">...
  hr = spUserConnection-&gt;SetReferenceElement(spSfdMember);
  if(FAILED(hr))  
  {  
    retCode = 19;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Adding Connected Objects</h3>
<pre class="code">...
  hr = GetPartObj(pProfilePart,"Member.2", spConnectedObj1);
  if(NULL_var == spConnectedObj1)  
  {  
    retCode = 20;  
    goto EscapeWay;  
  }

  hr = spUserConnection-&gt;AddConnectedObject(spConnectedObj1);
  if(FAILED(hr))  
  {  
    retCode = 21;  
    goto EscapeWay;  
  }

  hr = GetPartObj(pProfilePart,"Member.2", spConnectedObj2);
  if(NULL_var == spConnectedObj2)  
  {  
    retCode = 22;  
    goto EscapeWay;  
  }

  hr = spUserConnection-&gt;AddConnectedObject(spConnectedObj2);
  if(FAILED(hr))  
  {  
    retCode = 23;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Setting Intersecting Element</h3>
<pre class="code">...
  hr = spUserConnection-&gt;SetIntersectingElement(spConnectedObj1);
  if(FAILED(hr))  
  {  
    retCode = 24;  
    goto EscapeWay;  
  }
...</pre>
<p>Here type of profile is set. Profile is created using intersections of two surfaces so type is set to catStrProfileSurfSurf.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Updating Detail Feature</h3>
<pre class="code">...
  spStrDetailFeature = spUserConnection;
  if(NULL_var == spStrDetailFeature)  
  {  
    retCode = 25;  
    goto EscapeWay;  
  }

  hr = spStrDetailFeature-&gt;Update();
  if(FAILED(hr))  
  {  
    retCode = 26;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Updating UserConnection</h3>
<pre class="code">...
  hr = pProfilePart-&gt;Update();
  if(FAILED(hr))  
  {  
    retCode = 27;  
    goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step18"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
  retCode = CAASfdGeneralServices::CloseSession();
  if (retCode != 0) 
  {
    cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to create sfd UserConnection.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
