<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<meta name="topictype" content="Qr" />
<meta name="devlang" content="js" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">
/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">
/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">
/* */</script>
<title>Widget Class Reference</title>
</head>

<body onload="createToc();highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Widget Class Reference</h1>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<div id="toc">
		</div>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Evts"></a>Events</h2>
<h3><a name="endEdit"></a>endEdit</h3>
<h4>Description</h4>
<p>Triggered when edition of preferences ending.</p>
<h4>Callback argument</h4>
<p>There is no argument.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="onEdit"></a>onEdit</h3>
<h4>Description</h4>
<p>Triggered when edition of preferences begins.</p>
<h4>Callback argument</h4>
<p>There is no argument.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="onKeyboardAction"></a>onKeyboardAction</h3>
<h4>Description</h4>
<p>Triggered when a key is pressed within the widget's area.</p>
<h4>Callback argument</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>key</td>
		<td>String</td>
		<td>The pressed key's code.</td>
	</tr>
	<tr>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="onLoad"></a>onLoad</h3>
<h4>Description</h4>
<p>Triggered when the widget is launched.</p>
<h4>Callback argument</h4>
<p>There is no argument.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="onRefresh"></a>onRefresh</h3>
<h4>Description</h4>
<p>Triggered when the widget is refreshed (manually or programmatically).</p>
<h4>Callback argument</h4>
<p>There is no argument.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="onResize"></a>onResize</h3>
<h4>Description</h4>
<p>Triggered when the widget size (height and width values) changes. It can happend 
if the end-user resizes the widget's window, or if the widget's contents increases/decreases 
the window's height.</p>
<h4>Callback argument</h4>
<p>There is no argument.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="onViewChange"></a>onViewChange</h3>
<h4>Description</h4>
<p>Triggered when the widget is windowed, maximized or minimized.</p>
<h4>Callback argument</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>Event</td>
		<td>Object</td>
		<td>If you use <code>event.type</code>, you get which action has triggered the event. It is a string 
		with "windowed", "maximized" or "minimized" as possible alues.</td>
	</tr>
	<tr>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="prop"></a>Properties</h2>
<h3><a name="body"></a>body</h3>
<h4>Description</h4>
<p>It is the <code>widget</code>'s body similar to <code>document.body</code>. The 
main HTML element of the <code>widget</code>. Value is null until the <code>widget</code> 
is fully registered in the Environment. Should not be used before onLoad event is 
fired. </p>
<h4>Type</h4>
<p>HTMLElement</p>
<h4>Example</h4>
<pre class="code">
var myElt=createElement('div');
myElt.innerHTML = '&lt;h1&gt;Welcome!&lt;/h1&gt;';
widget.body.innerHTML = '';
widget.body.appendChild(myElt);
</pre>
<p>Whatever the previous body's contents, it's contents is now:</p>
<pre class="code">
&lt;body&gt;
&lt;div&gt;
&lt;h1&gt;Welcome!&lt;/h1&gt;
&lt;/div&gt;
&lt;/body&gt;
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="id"></a>id</h3>
<h4>Description</h4>
<p>Unique identifier of the <code>widget</code>. The value depends on the execution 
environment, but once the widget is instantiated in a given environment, its id 
will never change anymore. </p>
<h4>Type</h4>
<p>a <code>String</code></p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="metas"></a>metas</h3>
<h4>Description</h4>
<p>Stores the <code>widget</code>'s metadata.</p>
<h4>Type</h4>
<p>Object</p>
<h4>Example</h4>
<pre class="code">
&lt;meta name="description" content="CAA Web Apps basic use case " /&gt;
....
var myDataDescription= widget.metas.description;
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="lang"></a>lang</h3>
<h4>Description</h4>
<p>The ISO code associated with the current language selected by the end user in the Dashboard top bar.</p>
<h4>Type</h4>
<p>string. The value can be:</p>
<ul>
<li>en, for English</li>
<li>fr, for French</li>
<li>de, for German</li>
<li>ja, for Japaneese</li>
<li>zh, for Chinesee</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="methods"></a>Methods</h2>
<h3><a name="addEvent"></a>addEvent</h3>
<pre class="code">
addEvent(name, listener, bind, priority)
</pre>
<h4>Description</h4>
<p>Adds a listener related to the given event name.</p>
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>name</td>
		<td>String</td>
		<td>The event's name. It can be one among those listed on the
		<a href="#Evts">top</a> of this document, or your own.</td>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>listener</td>
		<td>Function</td>
		<td>The listener function that will be executed when event is triggered.</td>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>bind</td>
		<td>Object</td>
		<td>(optional) Context on which listener will be executed (object that should 
		represent the this variable inside listener function). If left undefined, 
		the context on which listener will be executed will be the one passed to "dispatchEvent"
		, which defaults to this widget.</td>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>priority</td>
		<td>Number</td>
		<td>(optional) The priority level of the listener. Listeners with higher 
		priority will be executed before listeners with lower priority. Listeners 
		with same priority level will be executed in the same order they were added. 
		(default = 0)</td>
	</tr>
	<tr>
	</tr>
</table>
<h4>Return</h4>
<p>an <code>Object</code> type</p>
<p>The current widget instance. </p>
<h4>Example</h4>
<pre class="code">
var MyWidget = {
   onLoadCB: function() {
      ...
   },
   onMyOwnEventCB: function() {
      ...
   }
}
...
widget.<b>addEvent</b>('onLoad', MyWidget.onLoadCB);
widget.<b>addEvent</b>('onMyOwnEvent', MyWidget.onMyOwnEventCB);
...
</pre>
<p>For your own event, use the <a name="#dispatchEvent">dispatchEvent</a> method 
to send the event.
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
</p>
<h3><a name="dispatchEvent"></a>dispatchEvent</h3>
<pre class="code">
dispatchEvent(name, args, bind)
</pre>
<h4>Description</h4>
<p>Executes the listener method related to the given event name.</p>
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>name</td>
		<td>String</td>
		<td>The event's name. It can be one among those listed on the
		<a href="#Evts">top</a> of this document, or your own.</td>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>args</td>
		<td>Array</td>
		<td>Array of parameters that should be passed to each listener.</td>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>bind</td>
		<td>Object</td>
		<td>Context on which listener will be executed (object that should represent 
		the this variable inside listener function)</td>
	</tr>
	<tr>
	</tr>
</table>
<h4>Return</h4>
<p>an <code>Object</code> type</p>
<p>The current widget instance.</p>
<h4>Example</h4>
<pre class="code">
...
var paramList= ["FirstName", "LastName", age] ;
widget.<b>dispatchEvent</b>('onMyOwnEvent', paramList);
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="getValue"></a>getValue</h3>
<pre class="code">
getValue(name)
</pre>
<h4>Description</h4>
<p>Returns the value of a given user preference.</p>
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>name</td>
		<td>String</td>
		<td>The name of the user preference we want the value of</td>
	</tr>
	<tr>
	</tr>
</table>
<p>If <code>name</code> is not the name of a user preference defined by <widget:preference> 
XML tag, the behavior of the API is not guaranteed.</p>
<h4>Return</h4>
<p>a <code>void</code> type</p>
<p>The value can be:</p>
<ul>
	<li><b>undefined</b>, if no default value has been declared in the <code>widget:preference</code> 
	XML tag, and the preference has not been valuated (code/ui) yet. </li>
	<li><b>a value</b>, either the default value declared in the <code>widget:preference</code> 
	XML tag, or a data coming from a valuation (code/ui).</li>
</ul>
<h4>Example</h4>
<pre>
&lt;widget:preferences&gt;
   &lt;widget:preference <b>name="OperationChoice"</b> type="list" label="Operation Choices" defaultValue="NFirst" &gt;
      &lt;widget:option label="NFirst" value="NFirst"&gt;&lt;/widget:option&gt;
      &lt;widget:option label="Abs" value="Abs"&gt;&lt;/widget:option&gt;
   &lt;/widget:preference&gt;
&lt;/widget:preferences&gt;
...
var operation= widget.<b>getValue</b>('<b>OperationChoice</b>');
if ( operation == 'NFirst' )  {
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="setValue"></a>setValue</h3>
<pre class="code">
SetValue(name,value)
</pre>
<h4>Description</h4>
<p>Sets the value of a given user preference.</p>
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>name</td>
		<td>String</td>
		<td>The name of the user preference</td>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>value</td>
		<td>String</td>
		<td>The value of the user preference</td>
	</tr>
	<tr>
	</tr>
</table>
<p>In case of bad inputs:</p>
<ul>
	<li>If <code>name</code> is not the name of a user preference defined by <widget:preference> 
	XML tag, the next <i>getValue</i> is not guaranteed. The Preferences edition 
	dialog box will not take into account this name.</li>
	<li>For a valid <code>name</code>, if <code>value</code> is invalid, the next
	<i>getValue</i> is not guaranteed. The value displayed in the Preferences dialog 
	box is not guaranteed.
	<p></p>
	</li>
</ul>
<h4>Return</h4>
<p>a <code>String</code> type</p>
<p>The new value of the user preference.</p>
<h4>Example</h4>
<pre>
&lt;widget:preferences&gt;
   &lt;widget:preference <b>name="OperationChoice"</b> type="list" label="Operation Choices" defaultValue="NFirst" &gt;
      &lt;widget:option label="NFirst" value="NFirst"&gt;&lt;/widget:option&gt;
      &lt;widget:option label="Abs" value="Abs"&gt;&lt;/widget:option&gt;
   &lt;/widget:preference&gt;
&lt;/widget:preferences&gt;
...
var valSet= widget.<b>SetValue</b>('OperationChoice','Abs');
...
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="getTitle"></a>getTitle</h3>
<pre class="code">
getTitle()
</pre>
<h4>Description</h4>
<p>Returns the contextual part of the widget title.</p>
<h4>Return</h4>
<p>a <code>String</code> type</p>
<p>The string as displayed in the widget title: blanks before the first char, and the last ones are stripped. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="setTitle"></a>setTitle</h3>
<pre class="code">
setTitle(name)
</pre>
<h4>Description</h4>
<p>Sets up the contextual part of the widget title. </p>
<p>The title of a widget app is the concatenation of two strings separated by the hyphen char: </p>
<pre class="code">widget app name + '-' + a contextual string </pre>
<p>This method enables you to set up the contextual string. See the 
<a href="../CAAWebAppsJS/CAAWebAppsTaWidgetWriting.htm#Title">widget title</a> section 
of the referenced article for complete details
about the widget title construction.</p> 
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>name</td>
		<td>String</td>
		<td>The contextual part of the widget title. All blanks before the first char, and the 
		ones after the last char are removed. The HTML tags are injected as text instead HTML to prevent XSS attacks.</td>
	</tr>
	<tr>
	</tr>
</table>
<h4>Return</h4>
<p>a <code>String</code> type</p>
<p>The string passes as input argument.</p>
<h4>Example</h4>
<p>Let's suppose the widget app name is 'My App'. </p>
<pre class="code">
...
widget.setTitle("   communities");
...
</pre>
<p>The final widget title is as follows:</p>
<table>
	<tr>
		<td><img alt="list" src="images/CAAWebAppsTitle.png"/></td>
	</tr>
</table>
<p>The hyphen is automatically added. The first blanks are removed.</p>
<pre class="code">
...
widget.setTitle("<a href="http://www.3ds.com">3DS</a>");
...
</pre>
<p>The final widget title is as follows:</p>
<table>
	<tr>
		<td><img alt="list" src="images/CAAWebAppsTitle.png"/></td>
	</tr>
</table>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="addPreferences"></a>addPreference</h3>
<pre class="code">
addPreference(preference)
</pre>
<h4>Description</h4>
<p>Adds a single preference to the existing preferences of the widget, or replaces 
the previous preference if a preference of the same name is already defined.</p>
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>preference</td>
		<td>Object</td>
		<td>A preference in its JSON serialization.</td>
	</tr>
	<tr>
	</tr>
</table>
<h4>Example</h4>
<pre>
widget.addPreference({
   name: "paging",
   type: "boolean",
   label: "Enable pagination",
   defaultValue: "`false`"
});
</pre>
<p>The keys are the attributes you retrieve in the HTML preference definition
<a href="CAAWebAppsQrPreferences.htm">User Preferences Reference</a> . </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="deletePreferences"></a>getPreference</h3>
<pre class="code">
getPreference(name)
</pre>
<h4>Description</h4>
<p>Returns the preference definition with it's current value.</p>
<h4>Input Parameters</h4>
<table class="fill">
	<tr>
		<th>Name</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
	</tr>
	<tr>
		<td>name</td>
		<td>String</td>
		<td>The name of the preference</td>
	</tr>
	<tr>
	</tr>
</table>
<h4>Return</h4>
<p>A preference in its JSON serialization with it's current value. </p>
<h4>Example</h4>
<p>For this preference:</p>
<pre class="code">
...
&lt;widget:preference name="<b>limit</b>" type="range" label="Number of items to display" defaultValue="5" step="1" min="1" max="25" /&gt;
...
</pre>
<p>The code :</p>
<pre class="code">
...
widget.getPreference("limit"),
...
</pre>
<p>will return:</p>
<pre class="code">
{
   name: "limit",
   type: "range",
   label: "Number of items to display",
   defaultValue: "5",
   step: "1",
   min: "1",
   max: "25",
   value: "5"
}
</pre>
<p>The current value is 5, while the end user, or a setValue, has not changed the 
current value. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
