<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="idl" />
<meta name="devlang" content="idl" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Creating and Executing a Simulation</title>
</head>

<body onload="highlightSearchTerms();">

<table class="table1">
	<tr>
		<td class="DocHeader1">
			<h1>Creating and Executing a Simulation</h1>
		</td>
	</tr>
	<tr>
		<td class="DocHeader3" style="width: 1807px">
		<table class="DocHeaderIntro">
			<tr>
				<td class="Intro1">
					<p class="header">This article explains how to create and execute a simulation.</p>
					<hr class="header" />
				</td>
			</tr>
			<tr>
				<td class="Intro2"><span class="run-in">Before you begin:</span> 
					<ul>
						<li>Launch CATIA and then import and 
						open the
						<code>CAAScdFeaPumpModel.3dxml</code> file supplied in 
						the folder <code>InstallRootFolder\CAADoc\Doc\English\CAAScdFeaScenario\samples\</code> 
						where <code>InstallRootFolder</code> is the folder where 
						the API CD-ROM is installed.</li>
						<li>Make sure that you have all of the licenses required for launching execution and perform the solve operation in the interactive session for a similar simulation to test the licenses.</li>
						<li>CA media is required in order to use the simulation object initialization service.</li>
            <li>Note: Creation of new PLM objects via scripting, as in this 
                use case, requires an enabling license in addition to the
                interactive Roles needed to access the functionality.</li>                                                
					</ul>
					<p><span class="run-in">Where to find the macro: <a href="CAAScdFeaStaticSimulationSource.htm">
					CAAScdFeaStaticSimulationSource.htm</a></span></p>
				</td>
			</tr>
		</table>
		</td>
	</tr>
</table>
<table class="indented">
	<tr>
		<td>
		<p>This use case can be divided in 12 steps:</p>
		<ol>
			<li><a href="#Step1">Retrieving the active Product</a></li>
			<li><a href="#Step2">Retrieving the Publications and Composing Links</a></li>
			<li><a href="#Step3">Creating the FEM Rep and Retrieving its Rep Manager</a></li>
			<li><a href="#Step4">Creating a Mesh on a Part</a></li>	
			<li><a href="#Step5">Creating a Property</a></li>		
			<li><a href="#Step6">Initializing and Creating the Simulation PLM Object</a></li>		
			<li><a href="#Step7">Retrieving the Scenario Manager</a></li>		
			<li><a href="#Step8">Associating the Structural Analysis Case with the FEM Rep</a></li>		
			<li><a href="#Step9">Creating and Initializing the Static Step</a></li>		
			<li><a href="#Step10">Retrieving the Features Set</a></li>		
			<li><a href="#Step11">Creating features</a></li>		
			<li><a href="#Step12">Launching the Simulation</a></li>			
		</ol>
		</td>
	</tr>
</table>
<table class="table1">
	<tr>
		<td>
		<ol class="task">
			<li>
			<p><strong><a name="Step1"></a>Retrieving the active Product</strong></p>
			<p>As a first step, the UC retrieves the active product. </p>
<pre class="code">... 
<span class="keyword">Dim </span>myEditor<span class="keyword"> As </span>Editor
<span class="keyword">Set </span>myEditor = CATIA.ActiveEditor

<span class="keyword">Dim </span>myProdService<span class="keyword"> As </span>PLMProductService
<span class="keyword">Set </span>myProdService = myEditor.GetService(&quot;PLMProductService&quot;)

<span class="keyword">Dim </span>myEntities<span class="keyword"> As </span>PLMEntities
<span class="keyword">Set </span>myEntities = myProdService.EditedContent

<span class="keyword">Dim </span>myRootProduct<span class="keyword"> As </span>VPMReference
<span class="keyword">Set </span>myRootProduct = myEntities.Item(1)
...
</pre>
			</li>
			<li>
			<p><strong><a name="Step2"></a>Retrieving the Publications and Composing Links</strong></p>
			<p>In this step UC retrieves the publications aggregated by the root 
			product and composes links.</p>
<pre class="code">...
<span class="keyword">Dim </span>myPublications <span class="keyword"> As </span>VPMPublications
<span class="keyword">Set </span>myPublications  = myRootProduct.Publications
	
<span class="keyword">Dim </span>myCoverContactFace<span class="keyword"> As </span>VPMPublication
<span class="keyword">Set </span>myCoverContactFace= myPublications.GetItem(&quot;Cover_Contact_Face&quot;)
 
<span class="comment">' Composing link to the publication</span>
 
<span class="keyword">Dim </span>myRootOccurrence<span class="keyword"> As </span>VPMRootOccurrence
<span class="keyword">Set </span>myRootOccurrence = myProdService.RootOccurrence
	
<span class="keyword">Dim </span>myRepInstance<span class="keyword"> As </span>VPMRepInstance
<span class="keyword">Set </span>myRepInstance = Nothing <span class="comment">' Because we use publications</span>
	
<span class="keyword">Dim</span> myLinkToCoverContactFace <span class="keyword">As</span> AnyObject
<span class="keyword">Set</span> myLinkToCoverContactFace = myProdService.ComposeLink(myRootOccurrence, myRepInstance, myCoverContactFace)
...
</pre>
			</li>
			<li>
			<p><strong><a name="Step3"></a>Creating the FEM Rep and Retrieving its Rep Manager</strong></p>
			<p>In this step UC creates a finite element representation model on the product which was just opened.</p>
			<p>For further information about creating the FEM Rep and retrieving its Rep Manager, refer to the article
				<a href="../CAAScdFeaModeling/CAAScdFeaCreateFEM.htm">
					Creating FEM representation</a>.
			</p>
			</li>
			<li>
				<p><strong><a name="Step4"></a>Creating a Mesh on a Part</strong></p>
				<p>In this step UC retrieves the nodes and elements set from the FEM Representation, creates a mesh on a part and sets the mesh attributes.</p>
				<p>For further information about the creation and management of mash parts, refer to the article
				<a href="../CAAScdFeaModeling/CAAScdFeaCreateMP.htm">
					Creating Mesh Part</a>.
				</p>
			</li>
			<li>
				<p><strong><a name="Step5"></a>Creating a Property</strong></p>
				<p>In this step UC creates a solid section on the part and sets its individual attributes. </p>
				<p>For further information about the creation and management of properties, refer to the article
				<a href="../CAAScdFeaModeling/CAAScdFeaCreateSections.htm">
					Managing FEM section features</a>.
				</p>
			</li>
			<li>
				<p><strong><a name="Step6"></a>Initializing and Creating the Simulation PLM Object</strong></p>
				<p>In this step UC creates a simulation object.</p>
				<p><b>Important : </b>Note that CA media is required in order to use the initialization service.</p>
				<pre class="code">...
<span class="comment">' Initializing the simulation PLM Object</span>

<span class="keyword">Dim</span> myInitService <span class="keyword">As</span> SimInitializationService
<span class="keyword">Set</span> myInitService = CATIA.GetSessionService(&quot;SimInitializationService&quot;)

myInitService.SetSimulationMethod SimInitializationServiceStructuralMechanics

<span class="comment">' Creating the simulation PLM Object</span>

<span class="keyword">Dim</span> mySimPLMService <span class="keyword">As</span> SIMPLMService
<span class="keyword">Set</span> mySimPLMService = CATIA.GetSessionService(&quot;SIMPLMService&quot;)

<span class="keyword">Dim</span> mySimulationReference <span class="keyword">As</span> SimulationReference
mySimPLMService.PLMCreate &quot;NewSimObject&quot;, &quot;SMAFeaPLMNewSimu&quot;, myModel, mySimulationReference, myEditor
...
				</pre>
				<p>For further information about the initialization of a simulation object, refer to the article <a href="CAAScdFeaScenarioInitialization.htm">
					Initializing a Simulation Object</a>.
				</p>
			</li>
			<li>
				<p><strong><a name="Step7"></a>Retrieving the Scenario Manager</strong></p>
				<p>In this step UC retrieves the scenario manager.</p>
				<pre class="code">...
<span class="keyword">Dim</span> myScenarioManager <span class="keyword">As</span> SimScenarioManager
<span class="keyword">Set</span> myScenarioManager = mySimulationReference.GetItem(&quot;SimScenarioManager&quot;)
...
				</pre>
			</li>	
			<li>
				<p><strong><a name="Step8"></a>Associating the Structural Analysis Case with the FEM Rep</strong></p>
				<p>In this step UC retrieves the analysis case and associates it with the FEM rep.</p>
				<pre class="code">...
<span class="keyword">Dim</span> myAnalysisCases <span class="keyword">As</span> SimAnalysisCases
<span class="keyword">Set</span> myAnalysisCases = myScenarioManager.AnalysisCases

<span class="keyword">Dim</span> myAnalysisCase <span class="keyword">As</span> SimAnalysisCase
<span class="keyword">Set</span> myAnalysisCase = myAnalysisCases.Item(1)

myAnalysisCase.FEMRep = myFEMRoot 
...
				</pre>
			</li>
			<li>
				<p><strong><a name="Step9"></a>Creating and Initializing the Static Step</strong></p>
				<p>In this step UC creates and initializes a static step.</p>
				<pre class="code">...
<span class="keyword">Dim</span> mySteps <span class="keyword">As</span> SimSteps
<span class="keyword">Set</span> mySteps = myAnalysisCase.Steps

<span class="keyword">Dim</span> myStaticStep <span class="keyword">As</span> SimStaticStep
<span class="keyword">Set</span> myStaticStep = mySteps.Add(&quot;SimStaticStep&quot;)

myAnalysisCase.CreateDefaultElementTypeAssignment
myStaticStep.CreateAnalysisDefaultOutputRequests
myStaticStep.MaximumIncrements = 1000
...
				</pre>
				<p>You can find the available late types for steps creation in the <a href="CAAScdFeaScenarioLateTypes.htm">
					Creation Late Types for Scenario Features</a> article.
				</p>
			</li>	
			<li>
				<p><strong><a name="Step10"></a>Retrieving the Features Set</strong></p>
				<p>In this step UC retrieves the features set.</p>
				<pre class="code">...
<span class="keyword">Dim</span> myFeatures <span class="keyword">As</span> SimFeatures
<span class="keyword">Set</span> myFeatures = myAnalysisCase.Features

<span class="keyword">Dim</span> myFeatureStates <span class="keyword">As</span> SimFeatureStates
<span class="keyword">Set</span> myFeatureStates = myStaticStep.FeatureStates
...
				</pre>
			</li>	
			<li>
				<p><strong><a name="Step11"></a>Creating features</strong></p>
				<p>In this step UC creates features for the simulation.</p>
				<pre class="code">...
<span class="keyword">Dim</span> myClamp <span class="keyword">As</span> SimClamp
<span class="keyword">Set</span> myClamp = myFeatures.Add(&quot;SimClamp&quot;)

<span class="comment">' Setting feature support</span>

<span class="keyword">Dim</span> myLinkAccess <span class="keyword">As</span> SimLinkAccess
<span class="keyword">Set</span> myLinkAccess = myClamp.GetItem(&quot;SimLinkAccess&quot;)
myLinkAccess.AddLink "MainSupport", myLinkToClampSupport
	
<span class="comment">' Creating feature state</span>
	
myFeatureStates.CreateFeatureState myClamp
...
				</pre>
				<p>You can find the available late types for features creation in the <a href="CAAScdFeaScenarioLateTypes.htm">
					Creation Late Types for Scenario Features</a> article.
				</p>

			</li>	
			<li>
				<p><strong><a name="Step12"></a>Launching the Simulation</strong></p>
				<p>In this step UC launch the simulation and shows the results.</p>
				<pre class="code">...
<span class="keyword">Dim</span> myExecutionService <span class="keyword">As</span> SimExecutionService
<span class="keyword">Set</span> myExecutionService = myEditor.GetService(&quot;SimExecutionService&quot;)

myExecutionService.BasicExecuteAll mySimulationReference

<span class="comment">' Switching to the results visualization workbench</span>

CATIA.StartWorkbench &quot;SMAHvcResultsVisualizationWorkbench&quot;
...
				</pre>
			</li>				
	</ol>
	</td>
	</tr>
</table>	

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
