<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Listing out Published 3D Parts to Be Deleted</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Listing out Published 3D Parts to Be Deleted</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATAGTAccommodationUseItf use case. This use case 
		explains how to get the List of Published 3D Parts to be deleted.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAAAGTPLMPublicationDelete Use Case</a>
			<ul>
				<li><a href="#What">What Does CAAAGTPLMPublicationDelete Do</a></li>
				<li><a href="#How">How to Launch CAAAGTPLMPublicationDelete</a></li>
				<li><a href="#Where">Where to Find the CAAAGTPLMPublicationDelete Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#History">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA AGT(Accommodation Design) Interfaces. Its main intent is to allow you to 
retrive List of Published 3D parts to be deleted.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAAAGTPLMPublicationDelete Use Case</h2>
<p>CAAAGTPLMPublicationDelete.m is a use case of the CAAAGTAccommodationDoc.edu framework 
that illustrates the CATIA AGT Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAAAGTPLMPublicationDelete Do</h3>
<p>The goal of CAAAGTPLMPublicationDelete use case is to show how to get the list of 
published 3D parts of deleted Accommodation feature.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAAAGTPLMPublicationDelete</h3>
<p>To launch CAAAGTPLMPublicationDelete, you will need to set up the build time 
environment, then compile CAAAGTPLMPublicationDelete along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAAAGTPLMPublicationDelete Repository Server Login_ticket PLM_ExternalID V_version &quot;</em></pre>
<p>where:</p>

<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>Login_ticket</th>
		<td>Login ticket.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The value of the <code>PLM_ExternalID</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>Version of Representation.</td>
	</tr>
</table>

<p>Table to get <code>AGTFeatureType</code>:</p>

<p>* The input model is retrieved by importing the <strong>Root_Data_Test ---.000.3dxml</strong>
    file from the  <strong>CAAAGTPLMPublicationDelete.edu</strong> framework.
</p>
<p><code>InstallRootFolder\CAADoc\CAAAGTAccommodation.edu\InputData\Root_Data_Test.3dxml</code></p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>V_Name</strong></code></a>:
    <code>Root_Data_Test</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAAAGTPLMPublicationDelete Code</h3>
<p>The CAAAGTPLMPublicationDelete use case is made of single file located in the 
CAAAGTPLMPublicationDelete.m module of the CAAAGTAccommodation.edu framework:</p>
<p><code>InstallRootFolder\CAADoc\CAAAGTAccommodation.edu\CAAAGTPLMPublicationDelete.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<th><em>CATPLMSessionServices</em></th>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<th><em>PLMPSISessionHelpers</em></th>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<th><em>CATAdpDictionaryServices</em></th>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<th><em>CATAdpQueryServices</em></th>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<th><em>CATAdpOpenSaveServices</em></th>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<th><em>CATIAGTPLMPublication</em></th>
		<td>Interface dedicated to navigate the Accommodation System.</td>
	</tr>
	<tr>
		<th><em>CATIAGTFeatPLMPublication</em></th>
		<td>Interface dedicated to navigate the features Accommodation System</td>
	</tr>
</table>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>The now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are 13 logical steps in Main:</p>
<ol>
	<li><a href="#Step1">Checking the Input Data</a></li>
	<li><a href="#Step2">Setting the Connection Parameters & Creating a Session</a></li>
    <li><a href="#Step3">Opening the Root Reference</a></li>
    <li><a href="#Step4">Getting AGTSystem, i.e. Pointer to <em>&quot;CATIPLMPublication&quot;</em></a></li>
    <li><a href="#Step5">Retrieving List of Features Allowed to Be Published</a></li>
    <li><a href="#Step6">Checking for Deleted Objects and Creating List</a></li>
    <li><a href="#Step7">Closing PLM Session</a></li>
</ol>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (6 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAAAGTPLMPublicationDelete &lt;Repository&gt; &lt;Server&gt; &lt;Login_Ticket&gt; &lt;PLM_ExternalID&gt;&lt;V_version&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Login_Ticket: Login Ticket to connect database.&quot; &lt;&lt;endl ;
cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;V_version: Version of product &lt;&lt;endl;
cout &lt;&lt; endl;
retCode = 91;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<h3><a name="Step2"></a>Setting the Connection Parameters & Creating a Session</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
  const char* repository = argv[1];
  const char* Server = argv[2];
  const char* login_ticket = argv[3];
  const char* V_Name  = argv[4];
  const char* V_version = argv[5];
  CATBoolean traceok = TRUE;
  hr = ::CAAAdpCreateSession(repository,Server,login_ticket,traceok);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<h3><a name="Step3"></a>Opening the Root Reference</h3>
<pre class="code">...

   CATBoolean ExpandAllMode = TRUE;
   hr = ::CAAOpenPLMComponent(&quot;VPMReference&quot;, V_Name,V_version, IID_CATIPLMNavReference,(void **)&amp;pIPLMNavRefOnRoot,lifeCycleRootSessionBag,ExpandAllMode);

   CATPrdGetOccurrenceMngt(pIPrdOccurrenceMngt);
   hr = pIPrdOccurrenceMngt->GetOrCreateRootOccurrence(pIPLMNavRefOnRoot, hRootNavOccurrence);   

   if(!!hRootNavOccurrence)
     hr = hRootNavOccurrence-&gt;QueryInterface(IID_CATBaseUnknown, (void**)&amp;pIPLMProduct) ;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>

<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a>Getting AGTSystem, i.e. pointer to <em>&quot;CATIPLMPublication&quot;</em></h3>
<pre class="code" >...
  hr = GetAGTSystem(pIPLMProduct,pIUseAGTPLMPublication,pIUnkOccuAGTSystem);
</pre>
<p>Logic for GetAGTSystem is as given below:</p>
<pre class="code">...
  hNavOccurrence = ipIUnkRootObj;
  if( NULL_var != hNavOccurrence )
  {
    hr = hNavOccurrence-&gt;ListChildren(ListofPtrNavOccurrence) ;
    if( SUCCEEDED(hr) )
    {
      sizeChildren = ListofPtrNavOccurrence.Size() ;
      for(index = 1;index &lt;= sizeChildren ; index++)
      {
        if(NULL != pNavRef)  
        {  
          pNavRef-&gt;Release();  
          pNavRef = NULL;  
        } 

        pIElemNavOccurrence = ListofPtrNavOccurrence[index] ;
        if( NULL != pIElemNavOccurrence )
        {
          pIElemNavOccurrence-&gt;GetRelatedReference(pNavRef);
          if( NULL != pNavRef )
          {
            hr = pNavRef-&gt;QueryInterface(IID_CATIPLMPublication,(void  **) &amp;opIUseAGTPLMPublication);
            if( SUCCEEDED(hr) )
            {
              hr = pIElemNavOccurrence-&gt;QueryInterface(IID_CATBaseUnknown,(void  **) &amp;opIUnkOccuAGTSystem);
              break;
            }
            else
            {
              rc = GetAGTSystem( pIElemNavOccurrence, opIUseAGTPLMPublication, opIUnkOccuAGTSystem);
              if( SUCCEEDED( rc ) &amp;&amp; (NULL != opIUseAGTPLMPublication) &amp;&amp; ( NULL != opIUnkOccuAGTSystem ) )
                break;
            }
          }
        }
      }
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Retrieving List of Features Allowed to Be Published</h3>
<pre class="code">...
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTCeiling,     oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTConnector,   oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTCovering,    oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTDraughtStop, oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTFireBridge,  oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTInsulation,  oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTSill,        oListOfFeatures );
  pIUseAGTPLMPublication -&gt; GetFeatByType( CATAGTType::AGTWall,        oListOfFeatures );
...</pre>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Checking for Deleted Objects and Creating List</h3>
<h5>1. Retrieving UUID of AGTSystem</h5>
<pre class="code">...
CATUnicodeString ucUUIDSystem;
pIUseAGTPLMPublication-&gt;GetAGTSystemUUID(ucUUIDSystem);            // UUID AGT System
...</pre>

<h5>2. Creating List of UUID of AGTFeatures.</h5>
<pre class="code">...
CATListOfCATUnicodeString ListFeatureUUIDs;

for(int ctr = 1; ctr &lt;= iListOfFeatures.Size(); ctr++ )
{
  CATUnicodeString ucFeatureUUID;
  CATIAGTFeatPLMPublication_var spFeature( iListOfFeatures[ctr] );
  if( !!spFeature )
  {
    spFeature-&gt;GetAGTFeatureUUID ( ucFeatureUUID );
    ListFeatureUUIDs.Append( ucFeatureUUID );
  }
}
...</pre>


<h5>3. Querying with Name &quot;*_ucUUIDSystem*&quot;.</h5>
<pre class="code">...
CATUnicodeString ucQueryName = "*"+ ucUUIDSystem + "*";

CATAdpPLMQueryAttributeSet piCATAdpPLMQueryAttributeSet;
localhr = piCATAdpPLMQueryAttributeSet.AddStringAttribute("V_Name", ucQueryName, CATAdpPLMQueryAttributeOperator::COND_LIKE);

localhr = CATCkePLMNavPublicServices::RetrieveKnowledgeType("VPMReference", hTypeModeler);

// Create the Filter Consists of PLMType and Attribute Set
CATAdpPLMQueryFilter iQueryFilter( hTypeModeler,piCATAdpPLMQueryAttributeSet, CATAdpPLMQueryAttributeOperator::OR );

// Retrieve the Element from Database By using Filter
CATAdpPLMComponentsInfos oComponentsInfos;
if(SUCCEEDED(localhr)) 
  localhr= CATAdpPLMExtendedQueryServices::GetElementsFromQueryFilter( iQueryFilter, oComponentsInfos );
...</pre>

<h5>4. Retrieving Synch ID from the Queried Object and Comparing Try to Locate in UUIDs 
List.</h5>
<pre class="code">...
for( int ctr = 1; ctr &lt;= ListPublishInstance.Size(); ctr++)
{
  CATIPrdObject_var spThisPrdOcc( ListPublishInstance[ctr] );
  if( !!spThisPrdOcc )
  {
    // Get the reference
    CATIPrdObject *piRefPrdObj = NULL;
    spThisPrdOcc-&gt;GetReferenceObject((CATBaseUnknown *&amp;)piRefPrdObj);
    CATICkeObject_var spInstanciated = piRefPrdObj;

    if( !spInstanciated  ) continue;

    CATUnicodeString ucFeatureUUID = "", uc3DPartName;
    rc = CATCkeObjectAttrReadServices::GetValueAsString( spInstanciated, "SyncId", ucFeatureUUID  ); 
    rc = CATCkeObjectAttrReadServices::GetValueAsString( spInstanciated, "V_Name", uc3DPartName ); 

    if( ListFeatureUUIDs.Locate( ucFeatureUUID ) == 0 )
      cout &lt;&lt; uc3DPartName &lt;&lt; " Needs to Delete" &lt;&lt; endl;
  }
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Closing PLM Session</h3>
<pre class="code">...
hr = ::CAAAdpCloseSession();
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to list out published 3D parts of deleted Accommodation features.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [July 2014]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
