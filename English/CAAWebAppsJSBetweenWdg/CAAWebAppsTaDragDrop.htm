<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=iso-8859-1" http-equiv="Content-Type" />
<meta name="topictype" content="Ta" />
<meta name="devlang" content="js" />
<link href="../CAADocStyleSheets/caav5.css" rel="stylesheet" type="text/css"/>
<script src="../CAADocJavaScript/DSDocTocToc.js" type="text/javascript">
/* */</script>
<script src="../CAADocJavaScript/DSDocHighlight.js" type="text/javascript">
/* */</script>
<script src="../CAADocJavaScript/submit.js" type="text/javascript">
/* */</script>
<title>HTML5 Drag and Drop Protocol</title>
</head>

<body onload="createToc();highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>HTML5 Drag and Drop Protocol</h1>
		</td>
	</tr>
	<tr>
		<td class="tech">Technical Article</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>The widget platform provides a set of API to manage the drag and drop 
		from and to the 3DDashboard. This article explains the principles, and presents 
		the API.</p>
		<div id="toc">
		</div>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Needs"></a>Principles</h2>
<p>HTML5 includes the Drag and Drop (DandD) API [<a href="#References">1</a>], which 
gives us the ability to natively drag, drop, and transfer data to HTML elements. 
But to avoid having every developer immersing himself inside the DandD HTML5 API 
and its common pitfalls, the widget platform provides a set of API.</p>
<p>Common pitfalls include:</p>
<ul>
	<li>Inconsistency in drag image displayed</li>
	<li>Event mess (7 events)</li>
	<li>Inconsistency in implementing the W3C specification across browsers</li>
	<li>Security issues with the data object</li>
	<li>Inconsistency in cursor feedback</li>
	<li>...</li>
</ul>
<p>If it responds to a scenario such as:</p>
<ul>
	<li>native app -&gt; web </li>
	<li>web -&gt; native app </li>
	<li>web -&gt; web </li>
</ul>
<p>the widget platform API only works in a web application. </p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="TAPI"></a>API</h2>
<p>The API are available through the
<a href="#" onclick="CAAlink('JS', 'WebappsUtils', 'DataDragAndDrop', 'DataDragAndDrop'); return false;">
DS/DataDragAndDrop/DataDragAndDrop</a> module. It basically exposes three methods 
for this protocol:</p>
<ul>
	<li><b>droppable(elementDOM, options)</b>
	<p>This is the method to declare a DOM element is sensitive to the drop.
	<code>options</code> - a JSON structure - contains the callback functions for 
	the <code>leave,enter,drop,over</code> events.</p>
	</li>
	<li><b>draggable(elementDOM, options)</b>
	<p>This is the method to declare a DOM element is sensitive to the drag.
	<code>options</code> - a JSON structure - contains the data and the callback 
	functions for the <code>start</code> and <code>stop</code> events.</p>
	<p></p>
	</li>
	<li><b>clean(elementDOM)</b>
	<p>This is the method to remove a DOM element from the drag or drop protocol.</p>
	</li>
</ul>
<p>There are two others to group together drag and drop declarations</p>
<ul>
	<li><b>on(elementDragDOMs,elementDropDOMs,options)</b>
	<p>This is the method to declare a group of elements sensitive to the drag, 
	and another for the drop. <code>elementDragDOMs</code> and <code>elementDropDOMs</code> 
	are arrays of DOM Element for respectevly the drag and drop.<code>options</code> 
	- a JSON structure - contains callback functions for the drag (<code>data</code>,
	<code>start</code>and <code>stop</code>), and the drop (<code>leave,enter,drop,over</code>).
	</p>
	<p>This function is usefull if a group of DOM elements shares the same behavior 
	for the drag, and another group shares the same behavior for the drop. </p>
	</li>
	<li><b>off(elementDragDOMs,elementDropDOMs)</b>
	<p>This is the method to remove more than one DOM Elements from the drag 
	or drop protocol.</p>
	</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="T2"></a>Example</h2>
<p>Let's suppose a first widget having a label displaying the name of an object. This name can be drag and dropped 
in an editor of the same widget or in another one.   </p>
<p>The <b>Drag</b> declaration:</p>
<p>
<pre class="code">
define(...,[<b>'DS/DataDragAndDrop/DataDragAndDrop'</b>], function (<b>DataDragAndDrop</b>) {
    ...
    var myTitle, datatodrag, labelTitle ;
    ...
	
    myTitle = ... ;  // a string
    <b>datatodrag</b> = { Sender: 'CAADragAndDropExample', ObjectTitle : myTitle } ;
    labelTitle = ... ; // a DOM object
   
    DataDragAndDrop.<b>draggable</b>( labelTitle , { <b>data</b> : JSON.stringify(datatodrag),...} );

})
</pre>
<p>The draggable DOM element is the label (<code>labelTitle</code>) containing the object's name. How the object's name (<code>myTitle</code>) 
is retrieved, and how the label (<code>labelTitle</code>) is created/modified are not explained here. </p>
<p>The data to drag is the value of the <code>data</code> key of the JSON structure passed as second argument of the <i>draggable</i> method. In this 
example, the data is not the plain object name (<code>myTitle</code>), but a JSON structure (as a string) with this string and another information. It enables us to limit the drop location. 
Only the DOM elements recognizing this structure as droppable for them could use it.</p>
<p>The <b>Drop</b> declaration:</p>
<p>This piece of code is the same widget as just above, or another one. </p>
<pre class="code">
define(...,[<b>'DS/DataDragAndDrop/DataDragAndDrop'</b>], function (<b>DataDragAndDrop</b> ) {
    ...
    var inputData= ...;  // a DOM object
	...
    DataDragAndDrop.<b>droppable</b>( inputData , {  
        <b>drop</b> : function(<b>data</b>) {
            try {
                var dataJSON=JSON.parse(data);
                if ( dataJSON && dataJSON.Sender && dataJSON.Sender === "CAADragAndDropExample") {
                   //Our choice to control where comme from the title. 
                   inputData.innerHTML(dataJSON.ObjectTitle );
                   ...
                }	
            }	
            catch (e) {
                 ...
            }					
        } 
    } ); 
});
</pre>
<p>Let's suppose <code>inputData</code> is a text zone. The first element of the <i>droppable</i> method is the DOM element, and the second one a 
structure having <code>drop</code>  as key. The value of this key is the method invoked when an HTML element is dropped on <code>inputData</code>. You can 
notice that this method controls the contents of the drop which is a string.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="T3"></a>Limitations</h2>
<p>There are some limitations:</p>
<ul>
	<li>These API are not meant for native context such as CATIA, iOS, 
	Android</li>
	<li>It is specific to web developers and only to them since the browser support 
	on mobile is non-existent and because dragging between applications on mobile 
	is not possible at the time</li>
	<li>There is no placeholder image since its support is very limited in today's 
	browsers</li>
	<li>The MIME type (or contenttype) is forced to text. This is because of a compatibility 
	 issue with IE</li>
</ul>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="#" onclick="javascript:CAAlinkUrl('https://dev.opera.com/articles/drag-and-drop/');return false;">
		HTML5 Drag and Drop</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="History"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [January 2015]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
