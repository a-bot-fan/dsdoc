<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js"></script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js"></script>
<title>Retrieving SSM data</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Retrieving SPL Objects</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATSplUseItf use case. This use case 
		explains how to retrieve SPL Objects.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASpaceAllocation Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASpaceAllocation Do</a></li>
				<li><a href="#How">How to Launch CAASpaceAllocation</a></li>
				<li><a href="#Where">Where to Find the CAASpaceAllocation Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SPL(Space Planning) Interfaces. Its main intent is to allow you to retrieve SPL Objects.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASpaceAllocation Use Case</h2>
<p>CAASpaceAllocation.m is a use case of the CAASpaceAllocationDoc.edu framework 
that illustrates the CATIA SPL Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASpaceAllocation Do</h3>
<p>The goal of CAASpaceAllocation use case is to show how to retrieve SPL data.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASpaceAllocation</h3>
<p>To launch CAASpaceAllocation , you will need to set up the build time 
environment, then compile CAASpaceAllocation along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASpaceAllocation Repository Server Login_ticket PLM_ExternalID V_version &quot;</em></pre>
<p>where:</p>
<table class="border1">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host:port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>Login_ticket</th>
		<td>The login ticket to connect to the database.</td>
	</tr>
	<tr>
		<th>PLM_ExternalID</th>
		<td>The <code>PLM_ExternalID</code> attribute of the SPL root product reference.</td>
	</tr>
	<tr>
		<th>V_version</th>
		<td>The Version of product.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>CAASpaceAllocation.3dxml</strong>
    file from the  <strong>CAASpaceAllocation.edu</strong> framework.
</p>
<p>
<code> InstallRootFolder\CAADoc\CAASpaceAllocation.edu\InputData\CAASpaceAllocation.3dxml</code><br>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>PLM_ExternalID</strong></code></a>:
      prd00059745</li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASpaceAllocation Code</h3>
<p>The CAASpaceAllocation sample is made of a single class named CAASpaceAllocation 
located in the CAASpaceAllocation.m module of the CAASpaceAllocation.edu 
framework: <code>InstallRootFolder\CAADoc\CAASpaceAllocation.edu\CAASpaceAllocation.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table>
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATISsmUseMoldedSurface</em></td>
		<td>Interface dedicated to the Molded Surface.</td>
	</tr>
	<tr>
		<td><em>CATISsmUseMSLimitMngt</em></td>
		<td>Interface dedicated to the Molded Surface to access limits</td>
	</tr>
  <tr>
		<td><em>CATISsmUseSpaceManager</em></td>
		<td>Interface dedicated to Space Manager.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseSpaceInput</em></td>
		<td>Interface dedicated to External Set entities of Space Manager.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseSsmTool</em></td>
		<td>Interface dedicated to Internal,Cutting and Space Cell set of Space Manager.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseCuttingFamily</em></td>
		<td>Interface dedicated to Cutting Family of Space Manager.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseCuttingInput</em></td>
		<td>Interface dedicated to Cutting Family entities of Space Manager.</td>
	</tr>
	<tr>
		<td><em>CATISsmUseSpace</em></td>
		<td>Interface dedicated to Space reference.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseDesignSpace</em></td>
		<td>Interface dedicated to Design Space reference.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseManufacturingSpace</em></td>
		<td>Interface dedicated to Manufacturing Space reference.</td>
	</tr>
	<tr>
		<td><em>CATISsmUseSpaceConceptNode</em></td>
		<td>Interface dedicated to Space Concept Node.</td>
	</tr>
	<tr>
		<td><em>CATISsmUseSpaceConceptRoot</em></td>
		<td>Interface dedicated to Space Concept Root.</td>
	</tr>
	<tr>
		<td><em>CATISsmUseSpaceRoot</em></td>
		<td>Interface dedicated to Space Root.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseSpaceSystem</em></td>
		<td>Interface dedicated to Space System.</td>
	</tr>
  <tr>
		<td><em>CATISsmUseSpaceFolder</em></td>
		<td>Interface dedicated to Space Folder.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main . There are 24 logical steps in Main:</p>
<table>
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Parameters</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step2">Setting the Connection Parameters</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step4">Retrieving the Model (arg[4])</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step5">Getting the Root Occurrence from Root Product</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step6">Getting Space Root</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Getting Space System</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step8">Loading Space System Part</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting Space Manager</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Getting Space Manager's Bounding Box and External Volume</a></td>
	</tr>
  <tr>
		<td>11</td>
		<td><a href="#Step11">Getting Space Manager's Internal Set, Cutting Set and 
		Family</a></td>
	</tr>
  <tr>
		<td>12</td>
		<td><a href="#Step12">Getting Space Manager's Space Cell Set</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Getting Molded Surface</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Getting Molded Surface Attributes</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Getting Space Concept Root</a></td>
	</tr>
  <tr>
		<td>16</td>
		<td><a href="#Step16">Getting Space Concept Nodes in the Space Concept Root</a></td>
	</tr>
  <tr>
		<td>17</td>
		<td><a href="#Step17">Getting Space Concept Nodes in the Space Concept Node</a></td>
	</tr>
  <tr>
		<td>18</td>
		<td><a href="#Step18">Getting Space Reference&#39;s Propertie</a>s</td>
	</tr>
	<tr>
		<td>19</td>
		<td><a href="#Step19">Getting Space Folder</a></td>
	</tr>
  <tr>
		<td>20</td>
		<td><a href="#Step20">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input parameters</h3>
<pre class="code">...
if (6 != argc)
{
  cout &lt;&lt; endl;
  cout &lt;&lt;&quot;Usage: CAASpaceAllocation &lt;Repository&gt; &lt;Server&gt; &lt;User&gt; &lt;Password&gt; &lt;SecurityCtx&gt; &lt;PLM_ExternalID&gt;&quot;&lt;&lt; endl;
  cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;Login_ticket: The login ticket to connect to the database.&quot; &lt;&lt;endl ;
  cout &lt;&lt;&quot;PLM_ExternalID: The PLM_ExternalID of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
  cout &lt;&lt;&quot;V_version: The Version of product.&quot; &lt;&lt;endl;
  cout &lt;&lt; endl;
...
}
</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step2"></a>Setting the Connection Parameters</h3>
<p>Connection Parameters initialization.</p>
<pre class="code">...
const char* repository = argv[1];
const char* server_name = argv[2];
const char* Login_ticket = argv[3];
const char* comp_externalId = argv[4];
const char* version = argv[5];
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
hr = ::CAAAdpCreateSession(repository, server_name, Login_ticket, traceok);
if (FAILED(hr)){ cout &lt;&lt; "\nERROR in creating session" &lt;&lt; endl;  retCode = 2; goto EscapeWay; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4">R</a>etrieving the Model (arg[4])</h3>
<pre class="code">...
CATBoolean ExpandAllMode = TRUE;
hr = ::CAAOpenPLMComponent("VPMReference",comp_externalId,version,
                          IID_CATIPLMRepInstances,(void **)&pIPLMProduct,lifeCycleRootSessionBag,ExpandAllMode);

if ( (FAILED(hr)) || (NULL == pIPLMProduct) ){ cout &lt;&lt; "\nERROR in retrieving the product" &lt;&lt; endl;  retCode = 3; goto EscapeWay; }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step5"></a>Getting the Root Occurrence from Root Product</h3>
<pre class="code">...
  hr = pIPLMProduct-&gt;QueryInterface(IID_CATIPLMNavReference, (void**)&amp;pIPLMNavRefOnRoot);
  if(SUCCEEDED(hr))
  {
    hr = CATPrdGetOccurrenceMngt(pIPrdOccurrenceMngt);
    if( SUCCEEDED(hr) &amp;&amp; ( NULL != pIPrdOccurrenceMngt ) )
    {
      hr = pIPrdOccurrenceMngt-&gt;GetOrCreateRootOccurrence(pIPLMNavRefOnRoot, hRootNavOccurrence);
    }
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step6"></a>Getting Space Root</h3>
<pre class="code">...
  hNavOccurrence = ipIUnkRootObj;
  if( NULL_var != hNavOccurrence )
  {
    hr = hNavOccurrence-&gt;ListChildren(ListofPtrNavOccurrence) ;
    if( SUCCEEDED(hr) )
    {
      sizeChildren = ListofPtrNavOccurrence.Size() ;
	for(index = 1;index <=sizeChildren ; index++)
	{
        if(NULL !=pNavRef)  
        {  
          pNavRef->Release();  
          pNavRef = NULL;  
        } 

        pIElemNavOccurrence = ListofPtrNavOccurrence[index] ;
	if( NULL != pIElemNavOccurrence )
        {
          pIElemNavOccurrence-&gt;GetRelatedReference(pNavRef);
          if( NULL != pNavRef )
          {
            hr = pNavRef-&gt;QueryInterface(IID_CATISsmUseSpaceRoot,(void  **) &amp;opIUseSpaceRoot);
            if( SUCCEEDED(hr) )
            {
              hr = pIElemNavOccurrence-&gt;QueryInterface(IID_CATBaseUnknown,(void  **) &amp;opIUnkOccuSpaceRoot);
              break;
            }
          }
        }
      }
    }
  }

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Getting Space System</h3>
<pre class="code">...
  hr = pIUseSpaceRoot-&gt;GetSpaceSystems(lvSpaceSystem);
  if (FAILED(hr) || 1  &gt; lvSpaceSystem.Size())
...
  hr = lvSpaceSystem[1]-&gt;QueryInterface(IID_CATISsmUseSpaceSystem, (void**)&amp;pIUseSpaceSystem) ;
...	

  hr = pIUseSpaceSystem-&gt;QueryInterface(IID_CATBaseUnknown, (void**)&amp;pIUnkSpaceSystemRef) ;
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Loading Space System Part</h3>
<pre class="code">...

  hr = LoadPart(pIUnkSpaceSystemRef);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting Space Manager</h3>
<pre class="code">...
  hr = pIUseSpaceSystem-&gt;GetSpaceManager(spSsmUseSpaceManager);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Getting Space Manager's Bounding Box and External Volume</h3>
<pre class="code">...
  hr = spSsmUseSpaceManager-&gt;GetBoundingBox(spSpaceInput);
...

  hr = spSpaceInput-&gt;GetSpaceElement(spBoundingBox);
...

 hr = spSsmUseSpaceManager-&gt;GetExternalVolume(spSpaceInput);
...

  hr = spSpaceInput-&gt;GetSpaceElement(spExternalVolume);
...</pre>
<script type="text/javascript">  insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Getting Space Manager's Internal Set, Cutting Set, and 
Family</h3>
<pre class="code">...
  hr = spSsmUseSpaceManager-&gt;GetInternalSpaceSet(spSpaceTool);
...

  hr = spSsmUseSpaceManager-&gt;GetCuttingSet(spSpaceTool);
...

  hr = spSpaceTool-&gt;GetChildren(lvSetChild);
...

  spCuttingFamily = lvSetChild[1];
...

  hr = spCuttingFamily-&gt;GetChildren(lvSetChild);
...

  spCuttingInput = lvSetChild[2];
...

  hr = spCuttingInput-&gt;GetInputElement(spCuttingEleGeo);
...
</pre>
<script type="text/javascript">  insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Getting Space Manager's Space Cell Set</h3>
<pre class="code">...
  hr = spSsmUseSpaceManager-&gt;GetSpaceCellSet(spSpaceTool);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Getting Molded Surface</h3>
<pre class="code">...
  hr = spCuttingEleGeo-&gt;QueryInterface(IID_CATISsmUseMoldedSurface, (void**)&amp;pISsmUseMoldedSurface) ;
...</pre>
<script type="text/javascript">    insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Getting Molded Surface </h3>
<pre class="code">...
CATISsmUseMSLimitMngt_var spSsmUseMSLimitMngt = pISsmUseMoldedSurface;
...

hr = pISsmUseMoldedSurface-&gt;GetSupport(spSupport);
...

hr = pISsmUseMoldedSurface-&gt;GetSupportOrientation(Orient);
...

hr = pISsmUseMoldedSurface-&gt;GetSupportOffset(spOffset);
...

hr = spSsmUseMSLimitMngt-&gt;GetLimitingObject(spLimitingObject);
...

hr = spSsmUseMSLimitMngt-&gt;GetOrientation(Orientation);
...</pre>
<script type="text/javascript">    insertLinkToTop();</script>
<h3><a name="Step15"></a>Getting Space Concept Root</h3>
<pre class="code">...
  hr = pIUseSpaceRoot-&gt;GetSpaceConceptRoots(lvSpaceConRoot);
...

  hr = lvSpaceConRoot[1]-&gt;QueryInterface(IID_CATISsmUseSpaceConceptRoot, (void**)&amp;pISpaceConceptRoot) ;	
...</pre>
<h3><a name="Step16"></a>Getting Space Concept Nodes in the Space Concept Root</h3>
<pre class="code">...
  hr = pISpaceConceptRoot-&gt;GetSpaceConceptNodes( lvlSpaceConcept);
...</pre>
<h3><a name="Step17"></a>Getting Space Concept Nodes in the Space Concept Node</h3>
<pre class="code">...
  hr = pISpaceConceptNode-&gt;GetSpaceConceptNodes( lvlSpaceConcept2);
...
  
  hr = pISpaceConceptNode-&gt;GetSpace( spSpace);
...

 
  hr = spSpace-&gt;QueryInterface(IID_CATBaseUnknown, (void**)&amp;opUnkPart) ;
  hr = LoadPart(opUnkPart);
...</pre>
<h3><a name="Step18"></a>Getting Space Reference&#39;s properties</h3>
<pre class="code">...

  hr = spSpace-&gt;GetVolumeGeom(spSpaceGeometry);
  if (NULL_var == spSpaceGeometry)
...

  volume = spSpace-&gt;GetVolume();

  spDesignSpace = spSpace;
...

  floorarea = spDesignSpace-&gt;GetFloorArea();
...</pre>
<script type="text/javascript">  insertLinkToTop();</script>
<h3><a name="Step19"></a>Getting Space Folder</h3>
<pre class="code">...
  hr = pIUseSpaceRoot-&gt;GetSpaceFolder(spSpaceFolder);
...

  hr = spSpaceFolder-&gt;GetSpaces(lvSpaces);
...</pre>
<h3><a name="Step20"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
  hr = ::CAAAdpCloseSession();
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to retrieve SPL Data.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>2</strong> [April 2015]</td>
		<td>Modify input parameter</td>
	</tr>
	<tr>
		<td>Version: <strong>1</strong> [June 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
