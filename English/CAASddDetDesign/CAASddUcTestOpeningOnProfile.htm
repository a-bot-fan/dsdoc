<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Testing SDD Opening On Profile</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Testing SDD Opening On Profile</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to retrieve and set opening on profile information.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddTestOpeningOnProfile Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddTestOpeningOnProfile Do</a></li>
				<li><a href="#How">How to Launch CAASddTestOpeningOnProfile</a></li>
				<li><a href="#Where">Where to Find the CAASddTestOpeningOnProfile 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA structure Interfaces. Its main intent is to allow you to retrieve and set opening on profile information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddTestOpeningOnProfile Use Case</h2>
<p>CAASddTestOpeningOnProfile.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddTestOpeningOnProfile Do</h3>
<p>The goal of CAASddTestOpeningOnProfile use case is to show how to retrieve and set opening on profile information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddTestOpeningOnProfile</h3>
<p>To launch CAASddTestOpeningOnProfile , you will need to set up the build time 
environment, then compile CAASddTestOpeningOnProfile along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASddTestOpeningOnProfile Repository Server Login_ticket Title&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>Login_ticket</th>
		<td>The login ticket to connect to the base.</td>
	</tr>
	<tr>
		<th>Title</th>
		<td>The value of the <code>Title</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>CAASddTestOpeningOnProfile.3dxml</strong>
    file from the  <strong>CAAStructureDetDesign.edu</strong> framework.
</p>
<pre class="code">
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddSteel_A42.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddWT18x179_5.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddTestOpeningOnProfile.3dxml</pre>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product&nbsp; Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>Title</strong></code></a>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddTestOpeningOnProfile Code</h3>
<p>The CAASddTestOpeningOnProfile sample is made of a single class named CAASddTestOpeningOnProfile 
located in the CAASddTestOpeningOnProfile.m module of the CAAStructureDetDesign.edu 
framework: <code>InstallRootDirectory\CAAStructureDetDesign.edu\CAASddTestOpeningOnProfile.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductStiffener</em></td>
		<td>Class to retrieve the SddStiffener.</td>
	</tr>
	<tr>
		<td><em>CATISddUseStiffener</em></td>
		<td>Interfaces dedicated to SddStiffener.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningOnProfileMngt</em></td>
		<td>Interface dedicated to manage opening on profile i.e. creation, retrieval, removal of opening on profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningOnProfile</em></td>
		<td>Interfaces dedicated to manage opening on profile.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are following logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;SddProduct&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting the created SDD Product Stiffener and Retrieving the CATISddUseProductStiffener from 
		It</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Retrieving CATISddUseStiffener Feature</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Retrieving CATIStrUseProfile Interface and get CATIStrUseOpeningOnProfile from 
		It</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Testing TestCATIStrUseOpeningOnProfileStandardOffsetOffset Methods</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Testing TestCATIStrUseOpeningOnProfileStandardMidDistOffset Methods</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Testing TestCATIStrUseOpeningOnProfileStandardSpacingOffset Methods</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Testing TestCATIStrUseOpeningOnProfileOutputProfile Methods</a></td>
	</tr>
	<tr>
		<td>16</td>
		<td><a href="#Step16">Testing TestCATIStrUseOpeningOnProfile3DObject Methods</a></td>
	</tr>
	<tr>
		<td>17</td>
		<td><a href="#Step17">Testing TestCATIStrUseOpeningOnProfileMngt Methods</a></td>
	</tr>	
	<tr>
		<td>18</td>
		<td><a href="#Step18">Saving Tested Opening on Profiles</a></td>
	</tr>
	<tr>
		<td>19</td>
		<td><a href="#Step19">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (5 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAASddTestOpeningOnProfile &lt;Repository&gt; &lt;Server&gt; &lt;Login_ticket&gt; &lt;Title&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Login_ticket: The login ticket to connect to the base.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Title: The Title of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt; endl;
retCode = 1;
goto EscapeWay;
}

//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
 hr = CAASddGeneralServices::InitSession(argv[1], argv[2], argv[3]);
 CHK_FAILED_RC(hr, retCode, 2);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;SddProduct&quot; Model (arg[4])</h3>
<pre class="code">...
 hr = CAASddGeneralServices::OpenProduct(argv[argc-1], "", "", spRootProduct, lifeCycleRootSessionBag);
 CHK_SP_EQ(NULL_var, spRootProduct, retCode, 12);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the created SDD Product Stiffener and Retrieving the CATISddUseProductStiffener from 
It</h3>
<pre class="code">...
  hr = GetProductStiffener(pIPLMProduct, 2, spSddProductStiffener, pCATIAPart, pCATIMmiUsePrtPart, pIPrtCont);  
  if((NULL_var == spSddProductStiffener) || (NULL == pCATIAPart) || || (NULL == pCATIMmiUsePrtPart) || || (NULL == pIPrtCont))  
  {  
    retCode  =  13;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving CATISddUseStiffener Feature</h3>
<pre class="code">...
  hr = spSddProductStiffener-&gt;GetStiffener(spSddStiffener);
  if(NULL_var == spSddStiffener)  
  {  
    retCode  =  14;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Retrieving CATIStrUseProfile Interface and get CATIStrUseOpeningOnProfile 
from It</h3>
<pre class="code">...
  spStiffener = spSddStiffener;
  if(NULL_var == spStiffener)
  {
    retCode = 15;
    goto EscapeWay;
  }
  
  spStrOpeningOnProfileMngt = spStiffener;
  if(NULL_var == spStrOpeningOnProfileMngt)
  {
    retCode = 16;
    goto EscapeWay;
  }
  
  hr = spStrOpeningOnProfileMngt-&gt;GetOpeningOnProfiles( spListOfOpeningOnProfiles );
  if ( (FAILED(hr) )
  {
    retCode = 17;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Testing TestCATIStrUseOpeningOnProfileStandardOffsetOffset Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[5];
  if(NULL_var == spStrOpeningOnProfile)
  {
    retCode = 18;
    goto EscapeWay;
  }
  
  hr = TestCATIStrUseOpeningOnProfileStandardOffsetOffset(spStrOpeningOnProfile, spStiffener, pCATIMmiUsePrtPart);
  if(!SUCCEEDED(hr))
  {
    retCode = 19;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
HRESULT TestCATIStrUseOpeningOnProfileStandardOffsetOffset(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile, CATIStrUseProfile_var &amp;ispSfdStiffener, CATIMmiUsePrtPart *&amp;opCATIMmiUsePrtPart)
{
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  CATIStrUseOpeningStandard_var  spStrOpeningStandard;
  spStrOpeningStandard = spStrOpening;
  if(NULL_var == spStrOpeningStandard)  return hr;

  CATUnicodeString ContourName;
  CATListValCATBaseUnknown_var ListContourParams;
  hr = spStrOpeningStandard-&gt;<strong>GetContour</strong>(ContourName,ListContourParams);
  if(!SUCCEEDED(hr))  return hr;
  CATUnicodeString PosStrategyName;
  CATListValCATBaseUnknown_var ListPosParams;
  hr = spStrOpeningStandard-&gt;<strong>GetPositioningStrategy</strong>(PosStrategyName,ListPosParams);
  if(!SUCCEEDED(hr))  return hr;
  hr = spStrOpeningStandard-&gt;<strong>SetContourAndPosStrategyForProfile</strong>(ContourName,ListContourParams,PosStrategyName,ListPosParams);
  if(!SUCCEEDED(hr))  return hr;

  CATBoolean Direction = CATFalse;
  hr = spStrOpeningStandard-&gt;<strong>GetDirectionForOpeningOnProfile</strong>(Direction);
  if(!SUCCEEDED(hr))  return hr;
  hr = spStrOpeningStandard-&gt;<strong>SetDirectionForOpeningOnProfile</strong>(Direction);
  if(!SUCCEEDED(hr))  return hr;
  
  CATStrOpeningSTDMode CreationMode = catStrOpeningSTDUndefinedMode;
  hr = spStrOpeningStandard-&gt;<strong>GetStandardModeType</strong>(CreationMode);
  if(!SUCCEEDED(hr))  return hr;
  hr = spStrOpeningStandard-&gt;<strong>SetStandardModeType</strong>(CreationMode);
  if(!SUCCEEDED(hr))  return hr;

  CATIMmiMechanicalFeature_var spPlane, spProfileRef;
  spProfileRef = ispSfdStiffener;
  GetReferenceObject("CROSS", 15, spPlane, opCATIMmiUsePrtPart);
  hr = spStrOpeningStandard-&gt;<strong>SetOffsetOffsetPosStratParms</strong>(spProfileRef, spPlane, "100mm", "0mm", "Gravity", "0deg");
  if(!SUCCEEDED(hr))  return hr;
  
  return hr;
}
...</pre>
<p>
SetDirectionForOpeningOnProfile/GetDirectionForOpeningOnProfile: 
Sets and gets the direction for opening on profile resp.</p>
<p>
SetStandardModeType/GetStandardModeType:
Sets and gets the mode for standard opening on profile resp. 0 -&gt; catStrOpeningSTDUndefinedMode, 1 -&gt; catStrOpeningSTDRoundMode, 2 -&gt; catStrOpeningSTDRectMode, 3 -&gt; catStrOpeningSTDOblongMode, 4 -&gt; catStrOpeningSTDCatalogMode</p>
<p>
SetContourAndPosStrategyForProfile: 
Sets the contour and position strategy for opening on profile.</p>
<p>
SetOffsetOffsetPosStratParms: 
There are in all 6 parameters for this method. 1. The reference of the profile, 2.The reference element used, 3. The horizontal offset distance from reference element, 4. The vertical offset distance from anchor point, 5. The anchor point type, 6. The axis angle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Testing TestCATIStrUseOpeningOnProfileStandardMidDistOffset Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[4];
  if(NULL_var == spStrOpeningOnProfile)
  {
    retCode = 20;
    goto EscapeWay;
  }
  
  hr = TestCATIStrUseOpeningOnProfileStandardMidDistOffset(spStrOpeningOnProfile, spStiffener, pCATIMmiUsePrtPart);
  if(!SUCCEEDED(hr))
  {
    retCode = 21;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
HRESULT TestCATIStrUseOpeningOnProfileStandardMidDistOffset(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile, CATIStrUseProfile_var &amp;ispSfdStiffener, CATIMmiUsePrtPart *&amp;opCATIMmiUsePrtPart)
{
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  CATIStrUseOpeningStandard_var  spStrOpeningStandard;
  spStrOpeningStandard = spStrOpening;
  if(NULL_var == spStrOpeningStandard)  return hr;

  CATIMmiMechanicalFeature_var spProfileRef;
  spProfileRef = ispSfdStiffener;

  CATIMmiMechanicalFeature_var spPlane_1, spPlane_2;
  GetReferenceObject("CROSS", 12, spPlane_1, opCATIMmiUsePrtPart);
  GetReferenceObject("CROSS", 13, spPlane_2, opCATIMmiUsePrtPart);
  hr = spStrOpeningStandard-&gt;<strong>SetMidDistOffsetPosStratParms</strong>(spProfileRef, spPlane_1, spPlane_2, "0mm", "Gravity", "0deg");
  if(!SUCCEEDED(hr))  return hr;
  
  return hr;
}
...</pre>
<p>
SetMidDistOffsetPosStratParms: 
There are in all 6 parameters for this method. 1. The reference of the profile, 2.The first reference element used, 3. The second reference element used, 4. The vertical offset distance from anchor point, 5. The anchor point type, 6. The axis angle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Testing TestCATIStrUseOpeningOnProfileStandardSpacingOffset Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[3];
  if(NULL_var == spStrOpeningOnProfile)
  {
    retCode = 22;
    goto EscapeWay;
  }
  
  hr = TestCATIStrUseOpeningOnProfileStandardSpacingOffset(spStrOpeningOnProfile, spStiffener);
  {
    retCode = 23;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
HRESULT TestCATIStrUseOpeningOnProfileStandardSpacingOffset(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile, CATIStrUseProfile_var &amp;ispSfdStiffener)
{
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  CATIStrUseOpeningStandard_var  spStrOpeningStandard;
  spStrOpeningStandard = spStrOpening;
  if(NULL_var == spStrOpeningStandard)  return hr;

   CATIMmiMechanicalFeature_var spProfileRef;
   spProfileRef = ispSfdStiffener;
  
  if(!SUCCEEDED(hr))  return hr;
  CATBoolean Orientation = CATTrue;
  CATBoolean RepetitionMode = CATTrue;
  hr = spStrOpeningStandard-&gt;<strong>SetSpacingOffsetPosStratParms</strong>(spProfileRef, Orientation, "500mm", RepetitionMode, "0mm", "Gravity", "0deg");
  if(!SUCCEEDED(hr))  return hr;
  
  return hr;
}
...</pre>
<p>
SetSpacingOffsetPosStratParms: 
There are in all 7 parameters for this method. 1. The reference of the profile, 2. Whether reference point is from start or end, 3. The horizontal offset distance, 4. Whether mode is absolute or relative, 5. The vertical offset distance from anchor point, 6. The anchor point type, 7. The axis angle.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Testing TestCATIStrUseOpeningOnProfileOutputProfile Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[1];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 24;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfileOutputProfile(spStrOpeningOnProfile);
  if(!SUCCEEDED(hr))
  {
    retCode = 25;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileOutputProfile(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;

  // - Get CATIStrUseOpeningOutputProfile interface
  CATIStrUseOpeningOutputProfile_var   spStrOpeningoutputProfile;
  spStrOpeningoutputProfile = spStrOpening;
  if(NULL_var == spStrOpeningoutputProfile)  return hr;

  CATIMmiMechanicalFeature_var spOutputProfile;
  hr = spStrOpeningoutputProfile-&gt;<strong>GetOutputProfile</strong>(spOutputProfile);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningoutputProfile-&gt;<strong>SetOutputProfile</strong>(spOutputProfile);
  if(!SUCCEEDED(hr))  return hr;

  CATIMmiMechanicalFeature_var spDirection;
  hr = spStrOpeningoutputProfile-&gt;<strong>GetDirection</strong>(spDirection);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningoutputProfile-&gt;<strong>SetDirection</strong>(spDirection);
  if(!SUCCEEDED(hr))  return hr;

  CATStrOpeningLimitsMode eType;
  hr = spStrOpeningoutputProfile-&gt;<strong>GetLimitMode</strong>(eType);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningoutputProfile-&gt;<strong>SetLimitMode</strong>(eType);
  if(!SUCCEEDED(hr))  return hr;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Testing TestCATIStrUseOpeningOnProfile3DObject Methods</h3>
<pre class="code">...
  spStrOpeningOnProfile = spListOfOpeningOnProfiles[2];
  if(NULL_var == spStrOpeningOnProfile)  
  {  
    retCode = 26;  
    goto EscapeWay;  
  }
  hr = TestCATIStrUseOpeningOnProfile3DObject(spStrOpeningOnProfile);
  if(!SUCCEEDED(hr))
  {
    retCode = 27;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfile3DObject(CATIStrUseOpeningOnProfile_var &amp;ispStrOpeningOnProfile)
 {
  HRESULT hr = E_FAIL;

  if(!ispStrOpeningOnProfile)  return hr;
  
  // - Get Opening
  CATIStrUseOpening_var spStrOpening;
  hr = ispStrOpeningOnProfile-&gt;GetStrOpening(spStrOpening);
  if(!SUCCEEDED(hr))  return hr;
  
  // - Get CATIStrUseOpening3DObject interface
  CATIStrUseOpening3DObject_var   spStrOpening3DObj;
  spStrOpening3DObj = spStrOpening;
  if(NULL_var == spStrOpening3DObj)  return hr;
 
  // - Get 3D Object
  CATIMmiMechanicalFeature_var spIntersectingElement;
  hr = spStrOpening3DObj-&gt;<strong>GetIntersectingElement</strong>(spIntersectingElement);
  if(!SUCCEEDED(hr))  return hr;
  
  hr = spStrOpening3DObj-&gt;<strong>SetIntersectingElement</strong>(spIntersectingElement);
  if(!SUCCEEDED(hr))  return hr;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Testing TestCATIStrUseOpeningOnProfileMngt Methods</h3>
<pre class="code">...
  hr = TestCATIStrUseOpeningOnProfileMngt(spStiffener); 
  if(!SUCCEEDED(hr))
  {
    retCode = 28;
    goto EscapeWay;
  }
...</pre>
<pre class="code">...
 HRESULT TestCATIStrUseOpeningOnProfileMngt(CATIStrUseProfile_var &amp;ispSfdStiffener)
 {
  HRESULT hr = E_FAIL;

  if(!ispSfdStiffener)  return hr;

  CATIStrUseOpeningOnProfileMngt_var   spStrOpeningOnProfileMngt;
  spStrOpeningOnProfileMngt = ispSfdStiffener;
  if(NULL_var == spStrOpeningOnProfileMngt)  return hr;

  CATIMmiMechanicalFeature_var spOpeningOnProfile;
  hr = spStrOpeningOnProfileMngt-&gt;<strong>AddOpeningOnProfile</strong>(spOpeningOnProfile);
  if(!SUCCEEDED(hr))  return hr;

  hr = spStrOpeningOnProfileMngt-&gt;<strong>RemoveOpeningOnProfile</strong>(spOpeningOnProfile);
  if(!SUCCEEDED(hr))  return hr;

  return hr;
}
...</pre>
<p>
In the same way CATIStrUseOpeningOutputProfile, CATIStrUseOpening3DObject and CATIStrUseOpeningOnProfileMngt interfaces can be accessed as shown above. 
The interfaces CATIStrUseOpeningOutputProfile and CATIStrUseOpening3DObject are the same used exposed for opening. These same interfaces are used in opening on profile context.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step18"></a>Saving Tested Opening on Profiles</h3>
<pre class="code">...
  hr = adpSaver.Save();
  if(FAILED(hr))  
  {  
   retCode = 29;  
   goto EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->

<h3><a name="Step19"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
retCode = CAASddGeneralServices::CloseSession();
if (retCode) {cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;retCode = 30;}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to test opening on profile.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [June 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
