<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocCommon.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocTree.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocDynLinks.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Testing Profile</title>
<style type="text/css">
.style1 {
	font-family: "Courier New", Courier;
	font-size: 9pt;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Testing Profile</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to retrieve profile information.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddTestProfile Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddTestProfile Do</a></li>
				<li><a href="#How">How to Launch CAASddTestProfile</a></li>
				<li><a href="#Where">Where to Find the CAASddTestProfile 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA structure Interfaces. Its main intent is to allow you to retrieve profile information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddTestProfile Use Case</h2>
<p>CAASddTestProfile.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddTestProfile Do</h3>
<p>The goal of CAASddTestProfile use case is to show how to retrieve profile information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddTestProfile</h3>
<p>To launch CAASddTestProfile , you will need to set up the build time 
environment, then compile CAASddTestProfile along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASddTestProfile Repository Server Login_ticket Title&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>Login_ticket</th>
		<td>The login ticket to connect to the base.</td>
	</tr>
	<tr>
		<th>Title</th>
		<td>The value of the <code>Title</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
	</table>

<p>* The input model is retrieved by importing the <strong>CAASddTestProfile.3dxml</strong>
    file from the  <strong>CAAStructureDetDesign.edu</strong> framework.
</p>
<p>
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSteel_A42.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddWT18x179_5.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddTestProfile.3dxml</code>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><span class="style1"><strong>Title</strong></span>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddTestProfile Code</h3>
<p>The CAASddTestProfile sample is made of a single class named CAASddTestProfile 
located in the CAASddTestProfile.m module of the CAAStructureDetDesign.edu 
framework:
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddTestProfile.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductMember</em></td>
		<td>Class to retrieve the SddMember.</td>
	</tr>
	<tr>
		<td><em>CATISddUseMember</em></td>
		<td>Interfaces dedicated to SddMember.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCategoryMngt</em></td>
		<td>Interfaces dedicated to manage category.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseMaterialMngt</em></td>
		<td>Interface dedicated to manage material of profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfile</em></td>
		<td>Interfaces provides methods to retrieve delimited support and canonic support of profile.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfileType</em></td>
		<td>Interfaces dedicated to manage profile type.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfileLimitMngt</em></td>
		<td>Interfaces dedicated to manage profile limits.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseProfileSurfSurf</em></td>
		<td>Interfaces dedicated to manage profile created using intersection of two surfaces.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are following logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step8">Opening the Product</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step9">Getting the Created SDD Product Member and Retrieving the CATISddUseProductMember from 
		It</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step10">Retrieving CATISddUseMember Feature</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step11">Retrieving Category Info Using CATIStrUseCategoryMngt Interface</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step12">Retrieving Material Info Using CATIStrUseMaterialMngt 
		Interface</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step13">Retrieving Delimited Support and Canonic Support Using CATIStrUseProfile</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step14">Retrieving Type Information Using CATIStrUseProfileType</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step15">Retrieving Profile Limits Using CATIStrUseProfileLimitMngt</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step16">Retrieving Two Intersecting Surfaces on which Profile 
		Is Created Using CATIStrUseProfileSurfSurf</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step17">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
  if (5 != argc)
  {
    cout &lt;&lt; endl;
    cout &lt;&lt;&quot;CAASddTestProfile &lt;Repository&gt; &lt;Server&gt; &lt;Login_ticket&gt; &lt;Title&gt;&quot;&lt;&lt; endl;
    cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Login_ticket: The login ticket to connect to the base.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Title: The Title of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
    cout &lt;&lt; endl;
    retCode = 1;
    goto EscapeWay;
  }

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
 hr = CAASddGeneralServices::InitSession(argv[1], argv[2], argv[3]);
 CHK_FAILED_RC(hr, retCode, 2);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step4"></a><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
 hr = CAASddGeneralServices::OpenProduct(argv[argc-1], "", "", spRootProduct, lifeCycleRootSessionBag);
 CHK_SP_EQ(NULL_var, spRootProduct, retCode, 12);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the Created SDD Product Member and Retrieving the CATISddUseProductMember from 
It</h3>
<pre class="code">...
  hr = GetProductMember(pIPLMProduct, spSddProductMember, pPart);  
  if((NULL_var == spSddProductMember) || (NULL == pPart))  
  {  
    retCode  =  13;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving CATISddUseMember Feature</h3>
<pre class="code">...
  hr = spSddProductMember-&gt;GetMember(spSddMember);
  if(NULL_var == spSddMember)  
  {  
    retCode  =  14;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Retrieving Category Info Using CATIStrUseCategoryMngt Interface</h3>
<pre class="code">...
HRESULT TestCATIStrUseCategoryMngt(CATISddUseMember_var ispSddMember)
{
  HRESULT hr = E_FAIL;

  if(!ispSddMember)
    return hr;

  // - Get CATIStrUseCategoryMngt interface
  CATIStrUseCategoryMngt_var spStrCategoryMngt;
  spStrCategoryMngt = ispSddMember;
  if(NULL_var == spStrCategoryMngt)  
    return hr;
  cout &lt;&lt; "CATIStrUseCategoryMngt retrieved successfully"&lt;&lt;endl;

  // - Get category
  CATUnicodeString Category;
  hr = spStrCategoryMngt-&gt;GetCategory(Category);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Category retrieved successfully"&lt;&lt;endl;

  //Get naming mode 
  CATBoolean NamingMode;
  hr = spStrCategoryMngt-&gt;GetAutomaticName(NamingMode);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Naming mode retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Retrieving Material Info Using CATIStrUseMaterialMngt Interface</h3>
<pre class="code">...
HRESULT TestCATIStrUseMaterialMngt(CATISddUseProductMember_var ispSddProductMember)
{
  HRESULT hr = E_FAIL;

  if(!ispSddProductMember)
    return hr;

  // - Get CATIStrUseMaterialMngt interface
  CATIStrUseMaterialMngt_var spStrMaterialMngt;
  spStrMaterialMngt = ispSddProductMember;
  if(NULL_var == spStrMaterialMngt)  
    return hr;
  cout &lt;&lt; "CATIStrUseMaterialMngt retrieved successfully"&lt;&lt;endl;

  // - Get material
  CATUnicodeString Material;
  hr = spStrMaterialMngt-&gt;GetMaterial(Material);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Material retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Retrieving Delimited Support and Canonic Support Using CATIStrUseProfile</h3>
<pre class="code">...
HRESULT TestCATIStrUseProfile(CATISddUseMember_var &amp;ispSddMember)
{
  HRESULT hr = E_FAIL;

  if(!ispSddMember)
    return hr;

  // - Get CATIStrUseProfile interface
  CATIStrUseProfile_var spStrProfile;
  spStrProfile = ispSddMember;
  if(NULL_var == spStrProfile)  
    return hr;
  cout &lt;&lt; "CATIStrUseProfile retrieved successfully"&lt;&lt;endl;

  // - Get delimited support
  CATIMmiMechanicalFeature_var spDelimitedSupp;
  hr = spStrProfile-&gt;GetDelimitedSupport(spDelimitedSupp);
  if(NULL_var == spDelimitedSupp)  
    return hr;
  cout &lt;&lt; "DelimitedSupport retrieved successfully"&lt;&lt;endl;

  // - Get canonic support
  CATIMmiMechanicalFeature_var spCanonicSupp;
  hr = spStrProfile-&gt;GetCanonicSupport(spCanonicSupp);
  if(NULL_var == spCanonicSupp)  
    return hr;
  cout &lt;&lt; "CanonicSupport retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Retrieving Type Information Using CATIStrUseProfileType</h3>
<pre class="code">...
HRESULT TestCATIStrUseProfileType(CATISddUseMember_var &amp;ispSddMember)
{
  HRESULT hr = E_FAIL;

  if(!ispSddMember)
    return hr;

  // - Get CATIStrUseProfileType interface
  CATIStrUseProfileType_var   spStrProfileType;
  spStrProfileType = ispSddMember;
  if(NULL_var == spStrProfileType)  
    return hr;
  cout &lt;&lt; "CATIStrUseProfileType retrieved successfully"&lt;&lt;endl;

  // - Get profile type
  CATStrProfileCreationMode eProfileCreationMode;
  hr = spStrProfileType-&gt;GetType(eProfileCreationMode);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Profile type retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Retrieving Profile Limits Using CATIStrUseProfileLimitMngt</h3>
<pre class="code">...
HRESULT TestCATIStrUseProfileLimitMngt(CATISddUseMember_var &amp;ispSddMember)
{
  HRESULT hr = E_FAIL;

  if(!ispSddMember)
    return hr;

  // - Get CATIStrUseProfile interface
  CATIStrUseProfileLimitMngt_var   spStrProfileLimitMngt;
  spStrProfileLimitMngt = ispSddMember;
  if(NULL_var == spStrProfileLimitMngt)  
    return hr;
  cout &lt;&lt; "CATIStrProfileLimitMngt retrieved successfully"&lt;&lt;endl;

  // - GetFirstSurface
  CATStrProfileExtremity eProfileExtremity=catStrProfileStart;
  CATIMmiMechanicalFeature_var spLimitingObject;
  hr = spStrProfileLimitMngt-&gt;GetLimitingObject(eProfileExtremity,spLimitingObject);
  if(NULL_var == spLimitingObject)  
    return hr;
  cout &lt;&lt; "Start limit of the profile retrieved successfully"&lt;&lt;endl;

  // - GetSecondOffset
  CATICkeParm_var spOffset;
  hr = spStrProfileLimitMngt-&gt;GetOffset(eProfileExtremity,spOffset);
  if(NULL_var == spOffset)  
    return hr;
  cout &lt;&lt; "Offset retrieved successfully"&lt;&lt;endl;

  // - GetLimitType
  CATStrProfileLimitType eLimitType;
  hr = spStrProfileLimitMngt-&gt;GetLimitType(eProfileExtremity,eLimitType);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "LimitType retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Retrieving Two Intersecting Surfaces on which Profile Is 
Created Using CATIStrUseProfileSurfSurf</h3>
<pre class="code">...
HRESULT TestCATIStrUseProfileSurfSurf(CATISddUseMember_var &amp;ispSddMember)
{
  HRESULT hr = E_FAIL;

  if(!ispSddMember)
    return hr;

  // - Get CATIStrUseProfile interface
  CATIStrUseProfileSurfSurf_var   spStrProfileSurfSurf;
  spStrProfileSurfSurf = ispSddMember;
  if(NULL_var == spStrProfileSurfSurf)  
    return hr;
  cout &lt;&lt; "CATIStrUseProfileSurfSurf retrieved successfully"&lt;&lt;endl;

  // - GetFirstSurface
  CATIMmiMechanicalFeature_var spFirstSurf;
  hr = spStrProfileSurfSurf-&gt;GetFirstSurface(spFirstSurf);
  if(NULL_var == spFirstSurf)  
    return hr;
  cout &lt;&lt; "First surface used for intersection retrieved successfully"&lt;&lt;endl;

  // - GetSecondSurface
  CATIMmiMechanicalFeature_var spSecondSurf;
  hr = spStrProfileSurfSurf-&gt;GetSecondSurface(spSecondSurf);
  if(NULL_var == spSecondSurf)  
    return hr;
  cout &lt;&lt; "Second surface used for intersection retrieved successfully"&lt;&lt;endl;

  // - GetFirstOffset
  CATICkeParm_var spFirstOffset;
  hr = spStrProfileSurfSurf-&gt;GetFirstOffset(spFirstOffset);
  if(NULL_var == spFirstOffset)  
    return hr;
  cout &lt;&lt; "First offset retrieved successfully"&lt;&lt;endl;

  // - GetSecondOffset
  CATICkeParm_var spSecondOffset;
  hr = spStrProfileSurfSurf-&gt;GetSecondOffset(spSecondOffset);
  if(NULL_var == spSecondOffset)  
    return hr;
  cout &lt;&lt; "Second offset retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<p>In the same way CATIStrUseProfilePtLength,CATIStrUseProfilePtLimit,CATIStrUseProfilePtPt,CATIStrUseProfileCrv,CATIStrUseProfileSurf2Crvs interfaces can be accessed for respective type profiles.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
int rc = CAASddGeneralServices::CloseSession();
if (rc) {cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;retCode = 41;}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to test profile.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
