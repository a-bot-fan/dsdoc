<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Testing Opening</title>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Testing Opening</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to retrieve opening information.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddTestOpening Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddTestOpening Do</a></li>
				<li><a href="#How">How to Launch CAASddTestOpening</a></li>
				<li><a href="#Where">Where to Find the CAASddTestOpening 
				Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA structure Interfaces. Its main intent is to allow you to retrieve opening information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddTestOpening Use Case</h2>
<p>CAASddTestOpening.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddTestOpening Do</h3>
<p>The goal of CAASddTestOpening use case is to show how to retrieve opening information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddTestOpening</h3>
<p>To launch CAASddTestOpening , you will need to set up the build time 
environment, then compile CAASddTestOpening along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASddTestOpening Repository Server Login_ticket Title&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>
		<script type="text/javascript">insertRepository();</script>
		</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
		<th>Login_ticket</th>
		<td>The login ticket to connect to the base.</td>
	</tr>
	<tr>
		<th>Title</th>
		<td>The value of the <code>Title</code> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>CAASddTestOpening.3dxml</strong>
    file from the  <strong>CAAStructureDetDesign.edu</strong> framework.
</p>
<p>
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddSteel_A42.3dxml</code><br />
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\InputData\CAASddTestOpening.3dxml</code>
</p>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product Reference with the
following attributes:</p>

<ul>
  <li><a><code><strong>Title</strong></code></a>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddTestOpening Code</h3>
<p>The CAASddTestOpening sample is made of a single class named CAASddTestOpening 
located in the CAASddTestOpening.m module of the CAAStructureDetDesign.edu 
framework:
<code> InstallRootFolder\CAADoc\CAAStructureDetDesign.edu\CAASddTestOpening.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductPlate</em></td>
		<td>Class to retrieve the SddPlate.</td>
	</tr>
	<tr>
		<td><em>CATISddUsePlate</em></td>
		<td>Interfaces dedicated to SddPlate.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningType</em></td>
		<td>Interfaces dedicated to manage Opening type.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningMngt</em></td>
		<td>Interface dedicated to manage opening i.e. creation, retrieval, removal of opening.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpening3DObject</em></td>
		<td>Interfaces dedicated to manage Opening created using 3DObject method.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseOpeningExtrusionMngt</em></td>
		<td>Interfaces dedicated to manage Opening's extrusion mode.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are following logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step7">Opening the &quot;SddProduct&quot; Model (arg[7])</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step9">Getting the Created SDD Product Plate and Retrieving the CATISddUseProductPlate from 
		It</a></td>
	</tr>
	<tr>
		<td>10</td>
		<td><a href="#Step10">Retrieving CATISddUsePlate Feature</a></td>
	</tr>
	<tr>
		<td>11</td>
		<td><a href="#Step11">Retrieving CATIStrOpeningMngt Interface</a></td>
	</tr>
	<tr>
		<td>12</td>
		<td><a href="#Step12">Retrieving all Openings</a></td>
	</tr>
	<tr>
		<td>13</td>
		<td><a href="#Step13">Retrieving an Opening from the List of Openings</a></td>
	</tr>
	<tr>
		<td>14</td>
		<td><a href="#Step14">Retrieving Type Information using CATIStrUseOpeningType</a></td>
	</tr>
	<tr>
		<td>15</td>
		<td><a href="#Step15">Retrieving 3DObject Used for Opening Creation Using CATIStrUseOpening3DObject</a></td>
	</tr>
	<tr>
		<td>16</td>
		<td><a href="#Step16">Retrieving Opening Extrusion Information Using CATIStrUseOpeningExtrusionMngt</a></td>
	</tr>
	<tr>
		<td>17</td>
		<td><a href="#Step17">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
if (5 != argc)
{
cout &lt;&lt; endl;
cout &lt;&lt;&quot;CAASddTestOpening &lt;Repository&gt; &lt;Server&gt; &lt;Login_ticket&gt; &lt;Title&gt;&quot;&lt;&lt; endl;
cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Login_ticket: The login ticket to connect to the base.&quot; &lt;&lt;endl;
cout &lt;&lt;&quot;Title: The Title of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
cout &lt;&lt; endl;
retCode = 1;
goto EscapeWay;
}

//------------------------------------------------------------------
// - For Setting Repository
//------------------------------------------------------------------ 
repository = argv[1];

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
 hr = CAASddGeneralServices::InitSession(argv[1], argv[2], argv[3]);
 CHK_FAILED_RC(hr, retCode, 2);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step7"></a>Opening the &quot;SddProduct&quot; Model (arg[4])</h3>
<pre class="code">...
 hr = CAASddGeneralServices::OpenProduct(argv[argc-1], "", "", spRootProduct, lifeCycleRootSessionBag);
  CHK_SP_EQ(NULL_var, spRootProduct, retCode, 12);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the Created SDD Product Plate and Retrieving the CATISddUseProductPlate from 
It</h3>
<pre class="code">...
  hr = GetProductPlate(pIPLMProduct, spSddProductPlate, pPart);  
  if((NULL_var == spSddProductPlate) || (NULL == pPart))  
  {  
    retCode  =  13;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving CATISddUsePlate Feature</h3>
<pre class="code">...
  hr = spSddProductPlate-&gt;GetPlate(spSddPlate);
  if(NULL_var == spSddPlate)  
  {  
    retCode  =  14;  
    goto  EscapeWay;  
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Retrieving CATIStrOpeningMngt Interface</h3>
<pre class="code">...
  spStrOpeningMngt = spSddPlate;
  if(NULL_var == spStrOpeningMngt)
  {
    retCode = 15;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Retrieving All Openings</h3>
<pre class="code">...
  hr = spStrOpeningMngt-&gt;GetOpenings(spListOfOpenings,0);
  if(!SUCCEEDED(hr))
  {
    retCode = 16;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Retrieving an Opening from the List of Openings</h3>
<pre class="code">...
  spOpening = spListOfOpenings[1];
  if(NULL_var == spOpening)
  {
    retCode = 17;
    goto EscapeWay;
  }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Retrieving Type Information Using CATIStrUseOpeningType</h3>
<pre class="code">...
HRESULT TestCATIStrUseOpeningType(CATIMmiMechanicalFeature_var &amp;ispStrOpening)
{
  HRESULT hr = E_FAIL;

  if(!ispStrOpening)
    return hr;

  // - Get CATIStrUseOpeningType interface
  CATIStrUseOpeningType_var   spStrOpeningType;
  spStrOpeningType = ispStrOpening;
  if(NULL_var == spStrOpeningType)  
    return hr;
  cout &lt;&lt; "CATIStrUseOpeningType retrieved successfully"&lt;&lt;endl;

  // - Get Opening type
  CATStrOpeningCreationMode eOpeningCreationMode;
  hr = spStrOpeningType-&gt;GetType(eOpeningCreationMode);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Opening type retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Retrieving 3DObject Used for Opening Creation Using CATIStrUseOpening3DObject</h3>
<pre class="code">...
HRESULT TestCATIStrUseOpening3DObject(CATIMmiMechanicalFeature_var &amp;ispStrOpening)
{
  HRESULT hr = E_FAIL;

  if(!ispStrOpening)
    return hr;

  // - Get CATIStrUseOpening3DObject interface
  CATIStrUseOpening3DObject_var   spStrOpening3DObj;
  spStrOpening3DObj = ispStrOpening;
  if(NULL_var == spStrOpening3DObj)  
    return hr;
  cout &lt;&lt; "CATIStrUseOpening3DObject retrieved successfully"&lt;&lt;endl;

  // - Get Opening type
  CATIMmiMechanicalFeature_var spIntersectingElement;
  hr = spStrOpening3DObj-&gt;GetIntersectingElement(spIntersectingElement);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Opening's intersecting element retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<p>In the same way CATIStrUseOpeningOutputProfile &amp; CATIStrUseOpeningLimitDimensionsMngt and CATIStrUseOpeningStandard interfaces can be accessed.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step16"></a>Retrieving Opening Extrusion Information Using CATIStrUseOpeningExtrusionMngt</h3>
<pre class="code">...
HRESULT TestCATIStrUseOpeningExtrusionMngt(CATIMmiMechanicalFeature_var &amp;ispStrOpening)
{
  HRESULT hr = E_FAIL;

  if(!ispStrOpening)
    return hr;

  // - Get CATIStrUseOpeningExtrusionMngt interface
  CATIStrUseOpeningExtrusionMngt_var   spStrOpeningExtrMngt;
  spStrOpeningExtrMngt = ispStrOpening;
  if(NULL_var == spStrOpeningExtrMngt)  
    return hr;
  cout &lt;&lt; "CATIStrUseOpeningExtrusionMngt retrieved successfully"&lt;&lt;endl;

  // - Get Opening extrusion mode
  CATStrOpeningExtrusionMode eMode;
  hr = spStrOpeningExtrMngt-&gt;GetExtrusionMode(eMode);
  if(!SUCCEEDED(hr))  
    return hr;
  cout &lt;&lt; "Opening's extrusion mode retrieved successfully"&lt;&lt;endl;

  return hr;
}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step17"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
  retCode = CAASddGeneralServices::CloseSession();
  if (retCode)   {cout &lt;&lt; "The SESSION is not Closed" &lt;&lt;endl;retCode = 27;}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to test opening.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Jun 2011]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
