<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="topictype" content="Uc" />
<meta name="devlang" content="cpp" />
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css"/>
<script type="text/javascript" src="../CAADocJavaScript/DSDocTocToc.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/DSDocHighlight.js">/* */</script>
<script type="text/javascript" src="../CAADocJavaScript/submit.js">/* */</script>
<title>Testing SDD Collar</title>
<style type="text/css">
.style1 {
	font-family: "Courier New", Courier;
	font-size: 9pt;
	color: #976970;
}
</style>
</head>

<body onload="highlightSearchTerms();">

<table class="DocHeader">
	<tr>
		<td class="DocHeader1">
		<h1><a name="Top"></a>Testing SDD Collar</h1>
		</td>
	</tr>
	<tr>
		<td class="use">Use Case</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<table class="abstract">
	<tr>
		<td>
		<h2>Abstract</h2>
		<p>This article discusses the CATStrUseItf use case. This use case 
		explains how to retrieve and set collar information.</p>
		<ul>
			<li><a href="#Learn">What You Will Learn With This Use Case</a></li>
			<li><a href="#UseCase">The CAASddTestCollar Use Case</a>
			<ul>
				<li><a href="#What">What Does CAASddTestCollar Do</a></li>
				<li><a href="#How">How to Launch CAASddTestCollar</a></li>
				<li><a href="#Where">Where to Find the CAASddTestCollar Code</a></li>
			</ul>
			</li>
			<li><a href="#Step">Step-by-Step</a></li>
			<li><a href="#InShort">In Short</a></li>
			<li><a href="#history">History</a></li>
		</ul>
		</td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Learn"></a>What You Will Learn With This Use Case</h2>
<p>This use case is intended to help you make your first steps in programming with 
CATIA SDD(Structure Detail Design) Interfaces. Its main intent is to explain how to retrieve and set collar information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="UseCase"></a>The CAASddTestCollar Use Case</h2>
<p>CAASddTestCollar.m is a use case of the CAAStructureDetDesignDoc.edu framework 
that illustrates the CATIA SDD Interfaces framework capabilities.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="What"></a>What Does CAASddTestCollar Do</h3>
<p>The goal of CAASddTestCollar use case is to show how to retrieve and set Sdd Collar information.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="How"></a>How to Launch CAASddTestCollar</h3>
<p>To launch CAASddTestCollar, you will need to set up the build time 
environment, then compile CAASddTestCollar along with its prerequisites, 
set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre class="code"><em>mkrun -c &quot; CAASddTestCollar Repository Server Login_ticket Title&quot;</em></pre>
<p>where:</p>
<table class="fill">
	<tr>
		<th>Repository</th>
		<td>PLM1</td>
	</tr>
	<tr>
		<th>Server</th>
		<td>The server as <em>Host::port_number/RootURI</em></td>
	</tr>
	<tr>
		<th>Login_Ticket</th>
		<td>The login ticket to connect to the base.</td>
	</tr>
	<tr>
		<th>Title</th>
		<td>The value of the <span class="style1">Title</span> attribute of the PLM representation 
		reference containing the data to create the user feature reference.</td>
	</tr>
</table>

<p>* The input model is retrieved by importing the <strong>CAASddTestCollar.3dxml</strong>
    file from the  <strong>CAAStructureDetDesign.edu</strong> framework.
</p>
<pre class="code">
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddCGR.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddSR.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddSteel_A42.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddL8x8x1.3dxml
InstallRootDirectory\CAAStructureDetDesign.edu\InputData\CAASddTestCollar.3dxml</pre>

<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>

<p>This 3D XML file contains the root Product&nbsp; Reference with the
following attributes:</p>

<ul>
  <li><span class="style1"><strong>Title</strong></span>:
    <code>SddProduct</code></li>
  <li><a><code><strong>Version</strong></code></a>:
    ---</li>
</ul>

<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Where"></a>Where to Find the CAASddTestCollar Code</h3>
<p>The CAASddTestCollar sample is made of a single class named CAASddTestCollar 
located in the CAASddTestCollar.m module of the CAAStructureDetDesign.edu 
framework: <code>InstallRootDirectory\CAAStructureDetDesign.edu\CAASddTestCollar.m\</code></p>
<p>where <code>InstallRootFolder</code> [<a href="#References">1</a>] is the folder 
where the API CD-ROM is installed.</p>
<p>This sample deals with the following classes:</p>
<table class="fill">
	<tr>
		<td><em>CATPLMSessionServices</em></td>
		<td>Class to create and delete a batch session.</td>
	</tr>
	<tr>
		<td><em>PLMPSISessionHelpers</em></td>
		<td>Class managing session data for the creation of PLM entities.</td>
	</tr>
	<tr>
		<td><em>CATAdpDictionaryServices</em></td>
		<td>Class to provide all basic functions to browse and navigate on PLM dictionaries.</td>
	</tr>
	<tr>
		<td><em>CATAdpQueryServices</em></td>
		<td>Class to manage queries on PLM component in database.</td>
	</tr>
	<tr>
		<td><em>CATAdpOpenSaveServices</em></td>
		<td>Class to manage Open and Save in session.</td>
	</tr>
	<tr>
		<td><em>CATISddUseProductPlate</em></td>
		<td>Class to retrieve the SddPlate.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCollarMngt</em></td>
		<td>Interfaces dedicated to manage collar. For e.g. creation, removal.</td>
	</tr>
	<tr>
		<td><em>CATIStrUseCollar</em></td>
		<td>Interface to create collar.</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="Step"></a>Step-by-Step</h2>
<p>We will now first comment the environment and it&#8217;s components creation 
by looking at the code of the Main. There are following logical steps in Main:</p>
<table class="fill">
	<tr>
		<th>#</th>
		<th>Step</th>
	</tr>
	<tr>
		<td>1</td>
		<td><a href="#Step1">Checking the Input Data</a></td>
	</tr>
	<tr>
		<td>2</td>
		<td><a href="#Step3">Creating a Session</a></td>
	</tr>
	<tr>
		<td>3</td>
		<td><a href="#Step8">Opening the Product</a></td>
	</tr>
	<tr>
		<td>4</td>
		<td><a href="#Step9">Getting the Created SddProductPlate and then SddPlate 
from It</a></td>
	</tr>
	<tr>
		<td>5</td>
		<td><a href="#Step10">Retrieving CATIStrUseSlotMngt Interface and Slot from 
		It</a></td>
	</tr>
	<tr>
		<td>6</td>
		<td><a href="#Step11">Retrieving CATIStrUseCollarMngt Interface and Collar from 
		It</a></td>
	</tr>
	<tr>
		<td>7</td>
		<td><a href="#Step12">Retrieving Collar Methods</a></td>
	</tr>
	<tr>
		<td>8</td>
		<td><a href="#Step13">Testing CATIStrUseCollarMngt Methods</a></td>
	</tr>
	<tr>
		<td>9</td>
		<td><a href="#Step14">Saving Created Collar</a></td>
	</tr>
	<tr>
	<td>10</td>
		<td><a href="#Step15">Disconnecting and Deleting the Session</a></td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step1"></a>Checking the Input Data</h3>
<pre class="code">...
  if (5 != argc)
  {
    cout &lt;&lt; endl;
    cout &lt;&lt;&quot;CAASddTestCollar &lt;Repository&gt; &lt;Server&gt; &lt;Login_ticket&gt; &lt;Title&gt;&quot;&lt;&lt; endl;
    cout &lt;&lt;&quot;Repository: The repository name (like PLM1) which is mandatory.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Server: The URL string used for connection, expected format is 'protocol://ServerName:PortNumber/RootURI.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Login_ticket: The login ticket to connect to the base.&quot; &lt;&lt;endl;
    cout &lt;&lt;&quot;Title: The Title of a PLM Reference or PLM Representation Reference be browsed.&quot; &lt;&lt;endl;
    cout &lt;&lt; endl;
    retCode = 1;
    goto EscapeWay;
  }

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step3"></a>Creating a Session</h3>
<p>A session must always be created in a batch environment.</p>
<pre class="code">...
 hr = CAASddGeneralServices::InitSession(argv[1], argv[2], argv[3]);
 CHK_FAILED_RC(hr, retCode, 2);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step8"></a>Opening the Product</h3>
<pre class="code">...
 hr = CAASddGeneralServices::OpenProduct(argv[argc-1], "", "", spRootProduct, lifeCycleRootSessionBag);
 CHK_SP_EQ(NULL_var, spRootProduct, retCode, 12);
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step9"></a>Getting the Created SddProductPlate and then SddPlate 
from It</h3>
<pre class="code">...
//------------------------------------------------------------------
// - Get SddProductPlate
//------------------------------------------------------------------ 
  if(!!spRootProduct)
  {
    CATListPtrCATIPLMNavOccurrence listOfChildrenOccurrences;
    if (SUCCEEDED(spRootProduct-&gt;ListChildren(listOfChildrenOccurrences)))
    {
      int i, isize = listOfChildrenOccurrences.Size();
      for (i = 1 ; i <=isize ; ++i)
      {
        CATIPLMNavOccurrence* &piCurrentOccurrence =listOfChildrenOccurrences[i];
        if (i ==3)
          spSddProductPlate =piCurrentOccurrence;
        if (piCurrentOccurrence) piCurrentOccurrence->Release(); piCurrentOccurrence = NULL;
      }
    }
  } 
  CHK_SP_EQ(NULL_var, spSddProductPlate, retCode, 13);

//------------------------------------------------------------------
// - Get SddPlate
//------------------------------------------------------------------ 
  hr = spSddProductPlate-&gt;GetPlate(spSddPlate);
  CHK_SP_EQ(NULL_var, spSddProductPlate, retCode, 14);

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step10"></a>Retrieving CATIStrUseSlotMngt Interface and Slot from 
It</h3>
<pre class="code">...
 spStrSlotMngt = spSddPlate;
 if(NULL_var == spStrSlotMngt)  
 {  
   retCode  =  15;  
   goto  EscapeWay;  
 }
 hr = spStrSlotMngt-&gt;GetSlots(spListOfSlot);
 if(!SUCCEEDED(hr))
 {
   retCode = 16;
   goto EscapeWay;
 }
 spSlot = spListOfSlot[1];
 if(NULL_var == spSlot)  
 {  
   retCode  =  17;  
   goto  EscapeWay;  
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step11"></a>Retrieving CATIStrUseCollarMngt Interface and Collar from 
It</h3>
<pre class="code">...
 spStrUseCollarMngt = spSlot;
 if(NULL_var == spStrUseCollarMngt)  
 {  
   retCode  =  18;  
   goto  EscapeWay;  
 }
 hr = spStrUseCollarMngt-&gt;GetCollars(spListOfCollar);
 if(!SUCCEEDED(hr))
 {
   retCode = 19;
   goto EscapeWay;
 }
 spStrUseCollar = spListOfCollar[1];
 if(NULL_var == spStrUseCollar)  
 {  
   retCode  =  20;  
   goto  EscapeWay;  
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step12"></a>Retrieving Collar Methods</h3>
<pre class="code">...
 hr = spStrCollar-&gt;<strong>SetMaterial</strong> ("Steel A42");
 if(!SUCCEEDED(hr))
 {
   retCode = 21;
   goto EscapeWay;
 }
 hr = spStrCollar-&gt;<strong>GetMaterial</strong> (sCollarMaterial);
 if(!SUCCEEDED(hr))
 {
   retCode = 22;
   goto EscapeWay;
 }
 hr = spStrCollar-&gt;<strong>SetMaterialThrowOrientation</strong> (catStrCollarThrowOrientationNormal);
 if(!SUCCEEDED(hr))
 {
   retCode = 23;
   goto EscapeWay;
 }
 hr = spStrCollar-&gt;<strong>GetMaterialThrowOrientation</strong> (oCollarMaterialThrowOrientation);
 if(NULL == oCollarMaterialThrowOrientation)
 {
   return hr;
 }
 hr = spStrCollar-&gt;<strong>GetThickness</strong> (spCollarThickness);
 spCollarThickness-&gt;Valuate(sValue);
 if(!SUCCEEDED(hr))  
 {
   retCode = 24;
   goto EscapeWay;
 }
 hr = spStrCollar-&gt;<strong>GetParameters</strong> (spListOfParameters);
 if(!SUCCEEDED(hr))  
 {
   retCode = 25;
   goto EscapeWay;
 }
 if( spListOfParameters.Size() &gt; 0 )
 {
     CATUnicodeString sValue_1 = "205mm";
     CATUnicodeString sValue_2 = "35deg";
     spListOfParameters[i]-&gt;Valuate(sValue_1);
     spListOfParameters[i]-&gt;Valuate(sValue_2);
 }
...</pre>

<p>
SetMaterial/GetMaterial: 
Sets and gets the material of collar resp.</p>
<p>
SetMaterialThrowOrientation/GetMaterialThrowOrientation: 
Sets and gets the collar material throw orientation resp. 0 -&gt; catStrCollarThrowOrientationInvert, 1 -&gt; catStrCollarThrowOrientationNormal, 2 -&gt; catStrCollarThrowOrientationCentered</p>
<p>
GetThickness: 
Gets the thickness of collar. Valuate it as required.</p>
<p>
GetParameters: 
Get the public parameters of collar. Valuate them as required.</p>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step13"></a>Testing CATIStrUseCollarMngt Methods</h3>
<pre class="code">...
 hr = TestCATIStrUseCollarMngt(spSlot);
 if(!SUCCEEDED(hr))
 {
   retCode = 26;
   goto EscapeWay;
 }
...</pre>

<pre class="code">...

HRESULT TestCATIStrUseCollarMngt(CATIStrUseSlot_var &ispSlot)
{
  HRESULT hr = E_FAIL;
  if(!ispSlot)  return hr;
  CATIStrUseCollarMngt_var   spStrCollarMngt;
  spStrCollarMngt = ispSlot;
  if(NULL_var == spStrCollarMngt)  
    return hr;
  
  CATIMmiMechanicalFeature_var spCollar;
  hr = spStrCollarMngt-&gt;AddCollar(spCollar);
  if(!SUCCEEDED(hr))  
    return hr;
  hr = spStrCollarMngt-&gt;RemoveCollar(spCollar);
  if(!SUCCEEDED(hr))  
    return hr;
}

...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step14"></a>Saving Created Collar</h3>
<pre class="code">...
 hr = adpSaver.Save();
 if(FAILED(hr))  
 {  
  retCode = 27;  
  goto EscapeWay;  
 }
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h3><a name="Step15"></a>Disconnecting and Deleting the Session</h3>
<pre class="code">...
int rc = CAASddGeneralServices::CloseSession();
if (rc) {cout &lt;&lt; &quot;The SESSION is not Closed&quot;&lt;&lt;endl;retCode = 28;}
...</pre>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="InShort"></a>In Short</h2>
<p>This use case has demonstrated the way to test collar.</p>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="References"></a>References</h2>
<table class="reference">
	<tr>
		<td>[1]</td>
		<td>
		<a href="../CAADocUseCases/CAADocRunSample.htm">
		Building and Launching a Use Case</a></td>
	</tr>
</table>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<h2><a name="history"></a>History</h2>
<table class="history">
	<tr>
		<td>Version: <strong>1</strong> [Dec 2012]</td>
		<td>Document created</td>
	</tr>
</table>
<script type="text/javascript">insertLinkToTop();</script>
<!-- -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-comment-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= -->
<script type="text/javascript">insertCopyright();</script>

</body>

</html>
